2023-11-24 15:21:46,808:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-24 15:21:46,808:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-24 15:21:46,808:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-24 15:21:46,808:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-24 15:25:30,237:INFO:PyCaret RegressionExperiment
2023-11-24 15:25:30,237:INFO:Logging name: reg-default-name
2023-11-24 15:25:30,238:INFO:ML Usecase: MLUsecase.REGRESSION
2023-11-24 15:25:30,238:INFO:version 3.2.0
2023-11-24 15:25:30,238:INFO:Initializing setup()
2023-11-24 15:25:30,238:INFO:self.USI: ebde
2023-11-24 15:25:30,238:INFO:self._variable_keys: {'target_param', 'log_plots_param', 'X', 'fold_groups_param', 'html_param', 'USI', 'y_train', 'memory', 'pipeline', 'y_test', 'X_train', 'data', 'transform_target_param', 'idx', 'exp_id', 'gpu_param', 'exp_name_log', 'gpu_n_jobs_param', 'X_test', 'fold_shuffle_param', '_available_plots', 'y', 'logging_param', 'n_jobs_param', '_ml_usecase', 'seed', 'fold_generator'}
2023-11-24 15:25:30,238:INFO:Checking environment
2023-11-24 15:25:30,238:INFO:python_version: 3.11.5
2023-11-24 15:25:30,238:INFO:python_build: ('main', 'Sep 11 2023 08:31:25')
2023-11-24 15:25:30,238:INFO:machine: arm64
2023-11-24 15:25:30,260:INFO:platform: macOS-14.0-arm64-arm-64bit
2023-11-24 15:25:30,260:INFO:Memory: svmem(total=17179869184, available=5571149824, percent=67.6, used=7290617856, free=308805632, active=5274992640, inactive=4350902272, wired=2015625216)
2023-11-24 15:25:30,260:INFO:Physical Core: 10
2023-11-24 15:25:30,260:INFO:Logical Core: 10
2023-11-24 15:25:30,260:INFO:Checking libraries
2023-11-24 15:25:30,260:INFO:System:
2023-11-24 15:25:30,260:INFO:    python: 3.11.5 (main, Sep 11 2023, 08:31:25) [Clang 14.0.6 ]
2023-11-24 15:25:30,260:INFO:executable: /Users/saiakhil/anaconda3/envs/mlauto/bin/python
2023-11-24 15:25:30,260:INFO:   machine: macOS-14.0-arm64-arm-64bit
2023-11-24 15:25:30,260:INFO:PyCaret required dependencies:
2023-11-24 15:25:30,372:INFO:                 pip: 23.3.1
2023-11-24 15:25:30,372:INFO:          setuptools: 68.0.0
2023-11-24 15:25:30,372:INFO:             pycaret: 3.2.0
2023-11-24 15:25:30,372:INFO:             IPython: 8.18.0
2023-11-24 15:25:30,372:INFO:          ipywidgets: 8.1.1
2023-11-24 15:25:30,372:INFO:                tqdm: 4.66.1
2023-11-24 15:25:30,372:INFO:               numpy: 1.25.2
2023-11-24 15:25:30,372:INFO:              pandas: 1.5.3
2023-11-24 15:25:30,372:INFO:              jinja2: 3.1.2
2023-11-24 15:25:30,372:INFO:               scipy: 1.10.1
2023-11-24 15:25:30,372:INFO:              joblib: 1.3.2
2023-11-24 15:25:30,372:INFO:             sklearn: 1.2.2
2023-11-24 15:25:30,372:INFO:                pyod: 1.1.2
2023-11-24 15:25:30,372:INFO:            imblearn: 0.11.0
2023-11-24 15:25:30,372:INFO:   category_encoders: 2.6.3
2023-11-24 15:25:30,372:INFO:            lightgbm: 4.1.0
2023-11-24 15:25:30,372:INFO:               numba: 0.58.1
2023-11-24 15:25:30,373:INFO:            requests: 2.31.0
2023-11-24 15:25:30,373:INFO:          matplotlib: 3.6.0
2023-11-24 15:25:30,373:INFO:          scikitplot: 0.3.7
2023-11-24 15:25:30,373:INFO:         yellowbrick: 1.5
2023-11-24 15:25:30,373:INFO:              plotly: 5.18.0
2023-11-24 15:25:30,373:INFO:    plotly-resampler: Not installed
2023-11-24 15:25:30,373:INFO:             kaleido: 0.2.1
2023-11-24 15:25:30,373:INFO:           schemdraw: 0.15
2023-11-24 15:25:30,373:INFO:         statsmodels: 0.14.0
2023-11-24 15:25:30,373:INFO:              sktime: 0.21.1
2023-11-24 15:25:30,373:INFO:               tbats: 1.1.3
2023-11-24 15:25:30,373:INFO:            pmdarima: 2.0.4
2023-11-24 15:25:30,373:INFO:              psutil: 5.9.6
2023-11-24 15:25:30,373:INFO:          markupsafe: 2.1.3
2023-11-24 15:25:30,373:INFO:             pickle5: Not installed
2023-11-24 15:25:30,373:INFO:         cloudpickle: 3.0.0
2023-11-24 15:25:30,373:INFO:         deprecation: 2.1.0
2023-11-24 15:25:30,373:INFO:              xxhash: 3.4.1
2023-11-24 15:25:30,373:INFO:           wurlitzer: 3.0.3
2023-11-24 15:25:30,373:INFO:PyCaret optional dependencies:
2023-11-24 15:25:30,380:INFO:                shap: Not installed
2023-11-24 15:25:30,380:INFO:           interpret: Not installed
2023-11-24 15:25:30,380:INFO:                umap: Not installed
2023-11-24 15:25:30,380:INFO:     ydata_profiling: 4.6.2
2023-11-24 15:25:30,380:INFO:  explainerdashboard: Not installed
2023-11-24 15:25:30,380:INFO:             autoviz: Not installed
2023-11-24 15:25:30,380:INFO:           fairlearn: Not installed
2023-11-24 15:25:30,381:INFO:          deepchecks: Not installed
2023-11-24 15:25:30,381:INFO:             xgboost: Installed but version unavailable
2023-11-24 15:25:30,381:INFO:            catboost: Not installed
2023-11-24 15:25:30,381:INFO:              kmodes: Not installed
2023-11-24 15:25:30,381:INFO:             mlxtend: Not installed
2023-11-24 15:25:30,381:INFO:       statsforecast: Not installed
2023-11-24 15:25:30,381:INFO:        tune_sklearn: Not installed
2023-11-24 15:25:30,381:INFO:                 ray: Not installed
2023-11-24 15:25:30,381:INFO:            hyperopt: Not installed
2023-11-24 15:25:30,381:INFO:              optuna: Not installed
2023-11-24 15:25:30,381:INFO:               skopt: Not installed
2023-11-24 15:25:30,381:INFO:              mlflow: Not installed
2023-11-24 15:25:30,381:INFO:              gradio: Not installed
2023-11-24 15:25:30,381:INFO:             fastapi: Not installed
2023-11-24 15:25:30,381:INFO:             uvicorn: Not installed
2023-11-24 15:25:30,381:INFO:              m2cgen: Not installed
2023-11-24 15:25:30,381:INFO:           evidently: Not installed
2023-11-24 15:25:30,381:INFO:               fugue: Not installed
2023-11-24 15:25:30,381:INFO:           streamlit: 1.28.2
2023-11-24 15:25:30,381:INFO:             prophet: Not installed
2023-11-24 15:25:30,381:INFO:None
2023-11-24 15:25:30,381:INFO:Set up data.
2023-11-24 15:25:30,410:INFO:Set up folding strategy.
2023-11-24 15:25:30,410:INFO:Set up train/test split.
2023-11-24 15:25:30,414:INFO:Set up index.
2023-11-24 15:25:30,414:INFO:Assigning column types.
2023-11-24 15:25:30,415:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-24 15:25:30,415:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-11-24 15:25:30,417:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-24 15:25:30,419:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-24 15:25:30,439:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 15:25:30,455:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 15:25:30,455:INFO:Soft dependency imported: xgboost: None
2023-11-24 15:25:35,925:INFO:PyCaret RegressionExperiment
2023-11-24 15:25:35,925:INFO:Logging name: reg-default-name
2023-11-24 15:25:35,925:INFO:ML Usecase: MLUsecase.REGRESSION
2023-11-24 15:25:35,925:INFO:version 3.2.0
2023-11-24 15:25:35,925:INFO:Initializing setup()
2023-11-24 15:25:35,926:INFO:self.USI: 462f
2023-11-24 15:25:35,926:INFO:self._variable_keys: {'target_param', 'log_plots_param', 'X', 'fold_groups_param', 'html_param', 'USI', 'y_train', 'memory', 'pipeline', 'y_test', 'X_train', 'data', 'transform_target_param', 'idx', 'exp_id', 'gpu_param', 'exp_name_log', 'gpu_n_jobs_param', 'X_test', 'fold_shuffle_param', '_available_plots', 'y', 'logging_param', 'n_jobs_param', '_ml_usecase', 'seed', 'fold_generator'}
2023-11-24 15:25:35,926:INFO:Checking environment
2023-11-24 15:25:35,926:INFO:python_version: 3.11.5
2023-11-24 15:25:35,926:INFO:python_build: ('main', 'Sep 11 2023 08:31:25')
2023-11-24 15:25:35,926:INFO:machine: arm64
2023-11-24 15:25:35,926:INFO:platform: macOS-14.0-arm64-arm-64bit
2023-11-24 15:25:35,926:INFO:Memory: svmem(total=17179869184, available=5532123136, percent=67.8, used=7331856384, free=278953984, active=5274583040, inactive=4346806272, wired=2057273344)
2023-11-24 15:25:35,926:INFO:Physical Core: 10
2023-11-24 15:25:35,926:INFO:Logical Core: 10
2023-11-24 15:25:35,926:INFO:Checking libraries
2023-11-24 15:25:35,926:INFO:System:
2023-11-24 15:25:35,926:INFO:    python: 3.11.5 (main, Sep 11 2023, 08:31:25) [Clang 14.0.6 ]
2023-11-24 15:25:35,926:INFO:executable: /Users/saiakhil/anaconda3/envs/mlauto/bin/python
2023-11-24 15:25:35,926:INFO:   machine: macOS-14.0-arm64-arm-64bit
2023-11-24 15:25:35,926:INFO:PyCaret required dependencies:
2023-11-24 15:25:35,926:INFO:                 pip: 23.3.1
2023-11-24 15:25:35,926:INFO:          setuptools: 68.0.0
2023-11-24 15:25:35,926:INFO:             pycaret: 3.2.0
2023-11-24 15:25:35,926:INFO:             IPython: 8.18.0
2023-11-24 15:25:35,926:INFO:          ipywidgets: 8.1.1
2023-11-24 15:25:35,926:INFO:                tqdm: 4.66.1
2023-11-24 15:25:35,926:INFO:               numpy: 1.25.2
2023-11-24 15:25:35,926:INFO:              pandas: 1.5.3
2023-11-24 15:25:35,926:INFO:              jinja2: 3.1.2
2023-11-24 15:25:35,926:INFO:               scipy: 1.10.1
2023-11-24 15:25:35,926:INFO:              joblib: 1.3.2
2023-11-24 15:25:35,926:INFO:             sklearn: 1.2.2
2023-11-24 15:25:35,926:INFO:                pyod: 1.1.2
2023-11-24 15:25:35,926:INFO:            imblearn: 0.11.0
2023-11-24 15:25:35,926:INFO:   category_encoders: 2.6.3
2023-11-24 15:25:35,926:INFO:            lightgbm: 4.1.0
2023-11-24 15:25:35,926:INFO:               numba: 0.58.1
2023-11-24 15:25:35,926:INFO:            requests: 2.31.0
2023-11-24 15:25:35,926:INFO:          matplotlib: 3.6.0
2023-11-24 15:25:35,926:INFO:          scikitplot: 0.3.7
2023-11-24 15:25:35,926:INFO:         yellowbrick: 1.5
2023-11-24 15:25:35,926:INFO:              plotly: 5.18.0
2023-11-24 15:25:35,926:INFO:    plotly-resampler: Not installed
2023-11-24 15:25:35,926:INFO:             kaleido: 0.2.1
2023-11-24 15:25:35,926:INFO:           schemdraw: 0.15
2023-11-24 15:25:35,926:INFO:         statsmodels: 0.14.0
2023-11-24 15:25:35,926:INFO:              sktime: 0.21.1
2023-11-24 15:25:35,926:INFO:               tbats: 1.1.3
2023-11-24 15:25:35,926:INFO:            pmdarima: 2.0.4
2023-11-24 15:25:35,926:INFO:              psutil: 5.9.6
2023-11-24 15:25:35,926:INFO:          markupsafe: 2.1.3
2023-11-24 15:25:35,926:INFO:             pickle5: Not installed
2023-11-24 15:25:35,926:INFO:         cloudpickle: 3.0.0
2023-11-24 15:25:35,926:INFO:         deprecation: 2.1.0
2023-11-24 15:25:35,926:INFO:              xxhash: 3.4.1
2023-11-24 15:25:35,926:INFO:           wurlitzer: 3.0.3
2023-11-24 15:25:35,926:INFO:PyCaret optional dependencies:
2023-11-24 15:25:35,926:INFO:                shap: Not installed
2023-11-24 15:25:35,926:INFO:           interpret: Not installed
2023-11-24 15:25:35,927:INFO:                umap: Not installed
2023-11-24 15:25:35,927:INFO:     ydata_profiling: 4.6.2
2023-11-24 15:25:35,927:INFO:  explainerdashboard: Not installed
2023-11-24 15:25:35,927:INFO:             autoviz: Not installed
2023-11-24 15:25:35,927:INFO:           fairlearn: Not installed
2023-11-24 15:25:35,927:INFO:          deepchecks: Not installed
2023-11-24 15:25:35,927:INFO:             xgboost: Installed but version unavailable
2023-11-24 15:25:35,927:INFO:            catboost: Not installed
2023-11-24 15:25:35,927:INFO:              kmodes: Not installed
2023-11-24 15:25:35,927:INFO:             mlxtend: Not installed
2023-11-24 15:25:35,927:INFO:       statsforecast: Not installed
2023-11-24 15:25:35,927:INFO:        tune_sklearn: Not installed
2023-11-24 15:25:35,927:INFO:                 ray: Not installed
2023-11-24 15:25:35,927:INFO:            hyperopt: Not installed
2023-11-24 15:25:35,927:INFO:              optuna: Not installed
2023-11-24 15:25:35,927:INFO:               skopt: Not installed
2023-11-24 15:25:35,927:INFO:              mlflow: Not installed
2023-11-24 15:25:35,927:INFO:              gradio: Not installed
2023-11-24 15:25:35,927:INFO:             fastapi: Not installed
2023-11-24 15:25:35,927:INFO:             uvicorn: Not installed
2023-11-24 15:25:35,927:INFO:              m2cgen: Not installed
2023-11-24 15:25:35,927:INFO:           evidently: Not installed
2023-11-24 15:25:35,927:INFO:               fugue: Not installed
2023-11-24 15:25:35,927:INFO:           streamlit: 1.28.2
2023-11-24 15:25:35,927:INFO:             prophet: Not installed
2023-11-24 15:25:35,927:INFO:None
2023-11-24 15:25:35,927:INFO:Set up data.
2023-11-24 15:25:35,953:INFO:Set up folding strategy.
2023-11-24 15:25:35,953:INFO:Set up train/test split.
2023-11-24 15:25:35,956:INFO:Set up index.
2023-11-24 15:25:35,956:INFO:Assigning column types.
2023-11-24 15:25:35,957:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-24 15:25:35,957:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-11-24 15:25:35,959:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-24 15:25:35,961:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-24 15:25:35,982:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 15:25:35,999:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 15:25:35,999:INFO:Soft dependency imported: xgboost: None
2023-11-24 15:25:54,016:INFO:PyCaret RegressionExperiment
2023-11-24 15:25:54,016:INFO:Logging name: reg-default-name
2023-11-24 15:25:54,016:INFO:ML Usecase: MLUsecase.REGRESSION
2023-11-24 15:25:54,016:INFO:version 3.2.0
2023-11-24 15:25:54,016:INFO:Initializing setup()
2023-11-24 15:25:54,016:INFO:self.USI: 2998
2023-11-24 15:25:54,017:INFO:self._variable_keys: {'target_param', 'log_plots_param', 'X', 'fold_groups_param', 'html_param', 'USI', 'y_train', 'memory', 'pipeline', 'y_test', 'X_train', 'data', 'transform_target_param', 'idx', 'exp_id', 'gpu_param', 'exp_name_log', 'gpu_n_jobs_param', 'X_test', 'fold_shuffle_param', '_available_plots', 'y', 'logging_param', 'n_jobs_param', '_ml_usecase', 'seed', 'fold_generator'}
2023-11-24 15:25:54,017:INFO:Checking environment
2023-11-24 15:25:54,017:INFO:python_version: 3.11.5
2023-11-24 15:25:54,017:INFO:python_build: ('main', 'Sep 11 2023 08:31:25')
2023-11-24 15:25:54,017:INFO:machine: arm64
2023-11-24 15:25:54,017:INFO:platform: macOS-14.0-arm64-arm-64bit
2023-11-24 15:25:54,017:INFO:Memory: svmem(total=17179869184, available=5540200448, percent=67.8, used=7326892032, free=270991360, active=5275238400, inactive=4362813440, wired=2051653632)
2023-11-24 15:25:54,017:INFO:Physical Core: 10
2023-11-24 15:25:54,017:INFO:Logical Core: 10
2023-11-24 15:25:54,017:INFO:Checking libraries
2023-11-24 15:25:54,017:INFO:System:
2023-11-24 15:25:54,017:INFO:    python: 3.11.5 (main, Sep 11 2023, 08:31:25) [Clang 14.0.6 ]
2023-11-24 15:25:54,017:INFO:executable: /Users/saiakhil/anaconda3/envs/mlauto/bin/python
2023-11-24 15:25:54,017:INFO:   machine: macOS-14.0-arm64-arm-64bit
2023-11-24 15:25:54,017:INFO:PyCaret required dependencies:
2023-11-24 15:25:54,017:INFO:                 pip: 23.3.1
2023-11-24 15:25:54,017:INFO:          setuptools: 68.0.0
2023-11-24 15:25:54,017:INFO:             pycaret: 3.2.0
2023-11-24 15:25:54,017:INFO:             IPython: 8.18.0
2023-11-24 15:25:54,017:INFO:          ipywidgets: 8.1.1
2023-11-24 15:25:54,017:INFO:                tqdm: 4.66.1
2023-11-24 15:25:54,017:INFO:               numpy: 1.25.2
2023-11-24 15:25:54,017:INFO:              pandas: 1.5.3
2023-11-24 15:25:54,017:INFO:              jinja2: 3.1.2
2023-11-24 15:25:54,017:INFO:               scipy: 1.10.1
2023-11-24 15:25:54,017:INFO:              joblib: 1.3.2
2023-11-24 15:25:54,017:INFO:             sklearn: 1.2.2
2023-11-24 15:25:54,017:INFO:                pyod: 1.1.2
2023-11-24 15:25:54,017:INFO:            imblearn: 0.11.0
2023-11-24 15:25:54,017:INFO:   category_encoders: 2.6.3
2023-11-24 15:25:54,017:INFO:            lightgbm: 4.1.0
2023-11-24 15:25:54,017:INFO:               numba: 0.58.1
2023-11-24 15:25:54,017:INFO:            requests: 2.31.0
2023-11-24 15:25:54,017:INFO:          matplotlib: 3.6.0
2023-11-24 15:25:54,017:INFO:          scikitplot: 0.3.7
2023-11-24 15:25:54,017:INFO:         yellowbrick: 1.5
2023-11-24 15:25:54,017:INFO:              plotly: 5.18.0
2023-11-24 15:25:54,017:INFO:    plotly-resampler: Not installed
2023-11-24 15:25:54,017:INFO:             kaleido: 0.2.1
2023-11-24 15:25:54,017:INFO:           schemdraw: 0.15
2023-11-24 15:25:54,017:INFO:         statsmodels: 0.14.0
2023-11-24 15:25:54,017:INFO:              sktime: 0.21.1
2023-11-24 15:25:54,017:INFO:               tbats: 1.1.3
2023-11-24 15:25:54,017:INFO:            pmdarima: 2.0.4
2023-11-24 15:25:54,017:INFO:              psutil: 5.9.6
2023-11-24 15:25:54,017:INFO:          markupsafe: 2.1.3
2023-11-24 15:25:54,017:INFO:             pickle5: Not installed
2023-11-24 15:25:54,017:INFO:         cloudpickle: 3.0.0
2023-11-24 15:25:54,017:INFO:         deprecation: 2.1.0
2023-11-24 15:25:54,017:INFO:              xxhash: 3.4.1
2023-11-24 15:25:54,017:INFO:           wurlitzer: 3.0.3
2023-11-24 15:25:54,017:INFO:PyCaret optional dependencies:
2023-11-24 15:25:54,017:INFO:                shap: Not installed
2023-11-24 15:25:54,017:INFO:           interpret: Not installed
2023-11-24 15:25:54,018:INFO:                umap: Not installed
2023-11-24 15:25:54,018:INFO:     ydata_profiling: 4.6.2
2023-11-24 15:25:54,018:INFO:  explainerdashboard: Not installed
2023-11-24 15:25:54,018:INFO:             autoviz: Not installed
2023-11-24 15:25:54,018:INFO:           fairlearn: Not installed
2023-11-24 15:25:54,018:INFO:          deepchecks: Not installed
2023-11-24 15:25:54,018:INFO:             xgboost: Installed but version unavailable
2023-11-24 15:25:54,018:INFO:            catboost: Not installed
2023-11-24 15:25:54,018:INFO:              kmodes: Not installed
2023-11-24 15:25:54,018:INFO:             mlxtend: Not installed
2023-11-24 15:25:54,018:INFO:       statsforecast: Not installed
2023-11-24 15:25:54,018:INFO:        tune_sklearn: Not installed
2023-11-24 15:25:54,018:INFO:                 ray: Not installed
2023-11-24 15:25:54,018:INFO:            hyperopt: Not installed
2023-11-24 15:25:54,018:INFO:              optuna: Not installed
2023-11-24 15:25:54,018:INFO:               skopt: Not installed
2023-11-24 15:25:54,018:INFO:              mlflow: Not installed
2023-11-24 15:25:54,018:INFO:              gradio: Not installed
2023-11-24 15:25:54,018:INFO:             fastapi: Not installed
2023-11-24 15:25:54,018:INFO:             uvicorn: Not installed
2023-11-24 15:25:54,018:INFO:              m2cgen: Not installed
2023-11-24 15:25:54,018:INFO:           evidently: Not installed
2023-11-24 15:25:54,018:INFO:               fugue: Not installed
2023-11-24 15:25:54,018:INFO:           streamlit: 1.28.2
2023-11-24 15:25:54,018:INFO:             prophet: Not installed
2023-11-24 15:25:54,018:INFO:None
2023-11-24 15:25:54,018:INFO:Set up data.
2023-11-24 15:25:54,042:INFO:Set up folding strategy.
2023-11-24 15:25:54,042:INFO:Set up train/test split.
2023-11-24 15:25:54,046:INFO:Set up index.
2023-11-24 15:25:54,046:INFO:Assigning column types.
2023-11-24 15:25:54,048:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-24 15:25:54,048:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-11-24 15:25:54,049:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-24 15:25:54,051:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-24 15:25:54,073:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 15:25:54,089:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 15:25:54,089:INFO:Soft dependency imported: xgboost: None
2023-11-24 15:26:14,057:INFO:PyCaret RegressionExperiment
2023-11-24 15:26:14,058:INFO:Logging name: reg-default-name
2023-11-24 15:26:14,058:INFO:ML Usecase: MLUsecase.REGRESSION
2023-11-24 15:26:14,058:INFO:version 3.2.0
2023-11-24 15:26:14,058:INFO:Initializing setup()
2023-11-24 15:26:14,058:INFO:self.USI: 1b76
2023-11-24 15:26:14,058:INFO:self._variable_keys: {'target_param', 'log_plots_param', 'X', 'fold_groups_param', 'html_param', 'USI', 'y_train', 'memory', 'pipeline', 'y_test', 'X_train', 'data', 'transform_target_param', 'idx', 'exp_id', 'gpu_param', 'exp_name_log', 'gpu_n_jobs_param', 'X_test', 'fold_shuffle_param', '_available_plots', 'y', 'logging_param', 'n_jobs_param', '_ml_usecase', 'seed', 'fold_generator'}
2023-11-24 15:26:14,058:INFO:Checking environment
2023-11-24 15:26:14,058:INFO:python_version: 3.11.5
2023-11-24 15:26:14,058:INFO:python_build: ('main', 'Sep 11 2023 08:31:25')
2023-11-24 15:26:14,058:INFO:machine: arm64
2023-11-24 15:26:14,058:INFO:platform: macOS-14.0-arm64-arm-64bit
2023-11-24 15:26:14,058:INFO:Memory: svmem(total=17179869184, available=5524799488, percent=67.8, used=7408943104, free=152059904, active=5394087936, inactive=4739694592, wired=2014855168)
2023-11-24 15:26:14,058:INFO:Physical Core: 10
2023-11-24 15:26:14,058:INFO:Logical Core: 10
2023-11-24 15:26:14,058:INFO:Checking libraries
2023-11-24 15:26:14,058:INFO:System:
2023-11-24 15:26:14,058:INFO:    python: 3.11.5 (main, Sep 11 2023, 08:31:25) [Clang 14.0.6 ]
2023-11-24 15:26:14,058:INFO:executable: /Users/saiakhil/anaconda3/envs/mlauto/bin/python
2023-11-24 15:26:14,058:INFO:   machine: macOS-14.0-arm64-arm-64bit
2023-11-24 15:26:14,058:INFO:PyCaret required dependencies:
2023-11-24 15:26:14,058:INFO:                 pip: 23.3.1
2023-11-24 15:26:14,058:INFO:          setuptools: 68.0.0
2023-11-24 15:26:14,058:INFO:             pycaret: 3.2.0
2023-11-24 15:26:14,058:INFO:             IPython: 8.18.0
2023-11-24 15:26:14,058:INFO:          ipywidgets: 8.1.1
2023-11-24 15:26:14,058:INFO:                tqdm: 4.66.1
2023-11-24 15:26:14,058:INFO:               numpy: 1.25.2
2023-11-24 15:26:14,058:INFO:              pandas: 1.5.3
2023-11-24 15:26:14,058:INFO:              jinja2: 3.1.2
2023-11-24 15:26:14,058:INFO:               scipy: 1.10.1
2023-11-24 15:26:14,058:INFO:              joblib: 1.3.2
2023-11-24 15:26:14,058:INFO:             sklearn: 1.2.2
2023-11-24 15:26:14,058:INFO:                pyod: 1.1.2
2023-11-24 15:26:14,058:INFO:            imblearn: 0.11.0
2023-11-24 15:26:14,058:INFO:   category_encoders: 2.6.3
2023-11-24 15:26:14,058:INFO:            lightgbm: 4.1.0
2023-11-24 15:26:14,058:INFO:               numba: 0.58.1
2023-11-24 15:26:14,058:INFO:            requests: 2.31.0
2023-11-24 15:26:14,058:INFO:          matplotlib: 3.6.0
2023-11-24 15:26:14,058:INFO:          scikitplot: 0.3.7
2023-11-24 15:26:14,058:INFO:         yellowbrick: 1.5
2023-11-24 15:26:14,058:INFO:              plotly: 5.18.0
2023-11-24 15:26:14,059:INFO:    plotly-resampler: Not installed
2023-11-24 15:26:14,059:INFO:             kaleido: 0.2.1
2023-11-24 15:26:14,059:INFO:           schemdraw: 0.15
2023-11-24 15:26:14,059:INFO:         statsmodels: 0.14.0
2023-11-24 15:26:14,059:INFO:              sktime: 0.21.1
2023-11-24 15:26:14,059:INFO:               tbats: 1.1.3
2023-11-24 15:26:14,059:INFO:            pmdarima: 2.0.4
2023-11-24 15:26:14,059:INFO:              psutil: 5.9.6
2023-11-24 15:26:14,059:INFO:          markupsafe: 2.1.3
2023-11-24 15:26:14,059:INFO:             pickle5: Not installed
2023-11-24 15:26:14,059:INFO:         cloudpickle: 3.0.0
2023-11-24 15:26:14,059:INFO:         deprecation: 2.1.0
2023-11-24 15:26:14,059:INFO:              xxhash: 3.4.1
2023-11-24 15:26:14,059:INFO:           wurlitzer: 3.0.3
2023-11-24 15:26:14,059:INFO:PyCaret optional dependencies:
2023-11-24 15:26:14,059:INFO:                shap: Not installed
2023-11-24 15:26:14,059:INFO:           interpret: Not installed
2023-11-24 15:26:14,059:INFO:                umap: Not installed
2023-11-24 15:26:14,059:INFO:     ydata_profiling: 4.6.2
2023-11-24 15:26:14,059:INFO:  explainerdashboard: Not installed
2023-11-24 15:26:14,059:INFO:             autoviz: Not installed
2023-11-24 15:26:14,059:INFO:           fairlearn: Not installed
2023-11-24 15:26:14,059:INFO:          deepchecks: Not installed
2023-11-24 15:26:14,059:INFO:             xgboost: Installed but version unavailable
2023-11-24 15:26:14,059:INFO:            catboost: Not installed
2023-11-24 15:26:14,059:INFO:              kmodes: Not installed
2023-11-24 15:26:14,059:INFO:             mlxtend: Not installed
2023-11-24 15:26:14,059:INFO:       statsforecast: Not installed
2023-11-24 15:26:14,059:INFO:        tune_sklearn: Not installed
2023-11-24 15:26:14,059:INFO:                 ray: Not installed
2023-11-24 15:26:14,059:INFO:            hyperopt: Not installed
2023-11-24 15:26:14,059:INFO:              optuna: Not installed
2023-11-24 15:26:14,059:INFO:               skopt: Not installed
2023-11-24 15:26:14,059:INFO:              mlflow: Not installed
2023-11-24 15:26:14,059:INFO:              gradio: Not installed
2023-11-24 15:26:14,059:INFO:             fastapi: Not installed
2023-11-24 15:26:14,059:INFO:             uvicorn: Not installed
2023-11-24 15:26:14,059:INFO:              m2cgen: Not installed
2023-11-24 15:26:14,059:INFO:           evidently: Not installed
2023-11-24 15:26:14,059:INFO:               fugue: Not installed
2023-11-24 15:26:14,059:INFO:           streamlit: 1.28.2
2023-11-24 15:26:14,059:INFO:             prophet: Not installed
2023-11-24 15:26:14,059:INFO:None
2023-11-24 15:26:14,059:INFO:Set up data.
2023-11-24 15:26:14,083:INFO:Set up folding strategy.
2023-11-24 15:26:14,083:INFO:Set up train/test split.
2023-11-24 15:26:14,087:INFO:Set up index.
2023-11-24 15:26:14,087:INFO:Assigning column types.
2023-11-24 15:26:14,088:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-24 15:26:14,088:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-11-24 15:26:14,090:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-24 15:26:14,092:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-24 15:26:14,113:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 15:26:14,130:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 15:26:14,130:INFO:Soft dependency imported: xgboost: None
2023-11-24 15:26:18,247:INFO:PyCaret RegressionExperiment
2023-11-24 15:26:18,247:INFO:Logging name: reg-default-name
2023-11-24 15:26:18,248:INFO:ML Usecase: MLUsecase.REGRESSION
2023-11-24 15:26:18,248:INFO:version 3.2.0
2023-11-24 15:26:18,248:INFO:Initializing setup()
2023-11-24 15:26:18,248:INFO:self.USI: 65e9
2023-11-24 15:26:18,248:INFO:self._variable_keys: {'target_param', 'log_plots_param', 'X', 'fold_groups_param', 'html_param', 'USI', 'y_train', 'memory', 'pipeline', 'y_test', 'X_train', 'data', 'transform_target_param', 'idx', 'exp_id', 'gpu_param', 'exp_name_log', 'gpu_n_jobs_param', 'X_test', 'fold_shuffle_param', '_available_plots', 'y', 'logging_param', 'n_jobs_param', '_ml_usecase', 'seed', 'fold_generator'}
2023-11-24 15:26:18,248:INFO:Checking environment
2023-11-24 15:26:18,248:INFO:python_version: 3.11.5
2023-11-24 15:26:18,248:INFO:python_build: ('main', 'Sep 11 2023 08:31:25')
2023-11-24 15:26:18,248:INFO:machine: arm64
2023-11-24 15:26:18,248:INFO:platform: macOS-14.0-arm64-arm-64bit
2023-11-24 15:26:18,248:INFO:Memory: svmem(total=17179869184, available=5501059072, percent=68.0, used=7435599872, free=115834880, active=5398675456, inactive=4751212544, wired=2036924416)
2023-11-24 15:26:18,248:INFO:Physical Core: 10
2023-11-24 15:26:18,248:INFO:Logical Core: 10
2023-11-24 15:26:18,248:INFO:Checking libraries
2023-11-24 15:26:18,248:INFO:System:
2023-11-24 15:26:18,248:INFO:    python: 3.11.5 (main, Sep 11 2023, 08:31:25) [Clang 14.0.6 ]
2023-11-24 15:26:18,248:INFO:executable: /Users/saiakhil/anaconda3/envs/mlauto/bin/python
2023-11-24 15:26:18,248:INFO:   machine: macOS-14.0-arm64-arm-64bit
2023-11-24 15:26:18,248:INFO:PyCaret required dependencies:
2023-11-24 15:26:18,248:INFO:                 pip: 23.3.1
2023-11-24 15:26:18,248:INFO:          setuptools: 68.0.0
2023-11-24 15:26:18,248:INFO:             pycaret: 3.2.0
2023-11-24 15:26:18,248:INFO:             IPython: 8.18.0
2023-11-24 15:26:18,248:INFO:          ipywidgets: 8.1.1
2023-11-24 15:26:18,248:INFO:                tqdm: 4.66.1
2023-11-24 15:26:18,248:INFO:               numpy: 1.25.2
2023-11-24 15:26:18,248:INFO:              pandas: 1.5.3
2023-11-24 15:26:18,248:INFO:              jinja2: 3.1.2
2023-11-24 15:26:18,248:INFO:               scipy: 1.10.1
2023-11-24 15:26:18,248:INFO:              joblib: 1.3.2
2023-11-24 15:26:18,248:INFO:             sklearn: 1.2.2
2023-11-24 15:26:18,248:INFO:                pyod: 1.1.2
2023-11-24 15:26:18,248:INFO:            imblearn: 0.11.0
2023-11-24 15:26:18,248:INFO:   category_encoders: 2.6.3
2023-11-24 15:26:18,248:INFO:            lightgbm: 4.1.0
2023-11-24 15:26:18,248:INFO:               numba: 0.58.1
2023-11-24 15:26:18,248:INFO:            requests: 2.31.0
2023-11-24 15:26:18,248:INFO:          matplotlib: 3.6.0
2023-11-24 15:26:18,248:INFO:          scikitplot: 0.3.7
2023-11-24 15:26:18,248:INFO:         yellowbrick: 1.5
2023-11-24 15:26:18,248:INFO:              plotly: 5.18.0
2023-11-24 15:26:18,248:INFO:    plotly-resampler: Not installed
2023-11-24 15:26:18,248:INFO:             kaleido: 0.2.1
2023-11-24 15:26:18,248:INFO:           schemdraw: 0.15
2023-11-24 15:26:18,248:INFO:         statsmodels: 0.14.0
2023-11-24 15:26:18,248:INFO:              sktime: 0.21.1
2023-11-24 15:26:18,248:INFO:               tbats: 1.1.3
2023-11-24 15:26:18,248:INFO:            pmdarima: 2.0.4
2023-11-24 15:26:18,248:INFO:              psutil: 5.9.6
2023-11-24 15:26:18,248:INFO:          markupsafe: 2.1.3
2023-11-24 15:26:18,248:INFO:             pickle5: Not installed
2023-11-24 15:26:18,248:INFO:         cloudpickle: 3.0.0
2023-11-24 15:26:18,248:INFO:         deprecation: 2.1.0
2023-11-24 15:26:18,248:INFO:              xxhash: 3.4.1
2023-11-24 15:26:18,248:INFO:           wurlitzer: 3.0.3
2023-11-24 15:26:18,248:INFO:PyCaret optional dependencies:
2023-11-24 15:26:18,248:INFO:                shap: Not installed
2023-11-24 15:26:18,248:INFO:           interpret: Not installed
2023-11-24 15:26:18,248:INFO:                umap: Not installed
2023-11-24 15:26:18,248:INFO:     ydata_profiling: 4.6.2
2023-11-24 15:26:18,248:INFO:  explainerdashboard: Not installed
2023-11-24 15:26:18,248:INFO:             autoviz: Not installed
2023-11-24 15:26:18,248:INFO:           fairlearn: Not installed
2023-11-24 15:26:18,248:INFO:          deepchecks: Not installed
2023-11-24 15:26:18,248:INFO:             xgboost: Installed but version unavailable
2023-11-24 15:26:18,248:INFO:            catboost: Not installed
2023-11-24 15:26:18,248:INFO:              kmodes: Not installed
2023-11-24 15:26:18,248:INFO:             mlxtend: Not installed
2023-11-24 15:26:18,249:INFO:       statsforecast: Not installed
2023-11-24 15:26:18,249:INFO:        tune_sklearn: Not installed
2023-11-24 15:26:18,249:INFO:                 ray: Not installed
2023-11-24 15:26:18,249:INFO:            hyperopt: Not installed
2023-11-24 15:26:18,249:INFO:              optuna: Not installed
2023-11-24 15:26:18,249:INFO:               skopt: Not installed
2023-11-24 15:26:18,249:INFO:              mlflow: Not installed
2023-11-24 15:26:18,249:INFO:              gradio: Not installed
2023-11-24 15:26:18,249:INFO:             fastapi: Not installed
2023-11-24 15:26:18,249:INFO:             uvicorn: Not installed
2023-11-24 15:26:18,249:INFO:              m2cgen: Not installed
2023-11-24 15:26:18,249:INFO:           evidently: Not installed
2023-11-24 15:26:18,249:INFO:               fugue: Not installed
2023-11-24 15:26:18,249:INFO:           streamlit: 1.28.2
2023-11-24 15:26:18,249:INFO:             prophet: Not installed
2023-11-24 15:26:18,249:INFO:None
2023-11-24 15:26:18,249:INFO:Set up data.
2023-11-24 15:26:18,272:INFO:Set up folding strategy.
2023-11-24 15:26:18,272:INFO:Set up train/test split.
2023-11-24 15:26:18,276:INFO:Set up index.
2023-11-24 15:26:18,276:INFO:Assigning column types.
2023-11-24 15:26:18,277:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-24 15:26:18,277:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-11-24 15:26:18,278:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-24 15:26:18,280:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-24 15:26:18,302:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 15:26:18,319:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 15:26:18,319:INFO:Soft dependency imported: xgboost: None
2023-11-24 15:28:50,229:INFO:PyCaret RegressionExperiment
2023-11-24 15:28:50,230:INFO:Logging name: reg-default-name
2023-11-24 15:28:50,230:INFO:ML Usecase: MLUsecase.REGRESSION
2023-11-24 15:28:50,230:INFO:version 3.2.0
2023-11-24 15:28:50,230:INFO:Initializing setup()
2023-11-24 15:28:50,230:INFO:self.USI: 0783
2023-11-24 15:28:50,230:INFO:self._variable_keys: {'target_param', 'log_plots_param', 'X', 'fold_groups_param', 'html_param', 'USI', 'y_train', 'memory', 'pipeline', 'y_test', 'X_train', 'data', 'transform_target_param', 'idx', 'exp_id', 'gpu_param', 'exp_name_log', 'gpu_n_jobs_param', 'X_test', 'fold_shuffle_param', '_available_plots', 'y', 'logging_param', 'n_jobs_param', '_ml_usecase', 'seed', 'fold_generator'}
2023-11-24 15:28:50,230:INFO:Checking environment
2023-11-24 15:28:50,230:INFO:python_version: 3.11.5
2023-11-24 15:28:50,230:INFO:python_build: ('main', 'Sep 11 2023 08:31:25')
2023-11-24 15:28:50,230:INFO:machine: arm64
2023-11-24 15:28:50,230:INFO:platform: macOS-14.0-arm64-arm-64bit
2023-11-24 15:28:50,230:INFO:Memory: svmem(total=17179869184, available=6343032832, percent=63.1, used=6530547712, free=1866940416, active=4499013632, inactive=4381474816, wired=2031534080)
2023-11-24 15:28:50,230:INFO:Physical Core: 10
2023-11-24 15:28:50,230:INFO:Logical Core: 10
2023-11-24 15:28:50,230:INFO:Checking libraries
2023-11-24 15:28:50,230:INFO:System:
2023-11-24 15:28:50,230:INFO:    python: 3.11.5 (main, Sep 11 2023, 08:31:25) [Clang 14.0.6 ]
2023-11-24 15:28:50,230:INFO:executable: /Users/saiakhil/anaconda3/envs/mlauto/bin/python
2023-11-24 15:28:50,231:INFO:   machine: macOS-14.0-arm64-arm-64bit
2023-11-24 15:28:50,231:INFO:PyCaret required dependencies:
2023-11-24 15:28:50,231:INFO:                 pip: 23.3.1
2023-11-24 15:28:50,231:INFO:          setuptools: 68.0.0
2023-11-24 15:28:50,231:INFO:             pycaret: 3.2.0
2023-11-24 15:28:50,231:INFO:             IPython: 8.18.0
2023-11-24 15:28:50,231:INFO:          ipywidgets: 8.1.1
2023-11-24 15:28:50,231:INFO:                tqdm: 4.66.1
2023-11-24 15:28:50,231:INFO:               numpy: 1.25.2
2023-11-24 15:28:50,231:INFO:              pandas: 1.5.3
2023-11-24 15:28:50,231:INFO:              jinja2: 3.1.2
2023-11-24 15:28:50,231:INFO:               scipy: 1.10.1
2023-11-24 15:28:50,231:INFO:              joblib: 1.3.2
2023-11-24 15:28:50,231:INFO:             sklearn: 1.2.2
2023-11-24 15:28:50,231:INFO:                pyod: 1.1.2
2023-11-24 15:28:50,231:INFO:            imblearn: 0.11.0
2023-11-24 15:28:50,231:INFO:   category_encoders: 2.6.3
2023-11-24 15:28:50,231:INFO:            lightgbm: 4.1.0
2023-11-24 15:28:50,231:INFO:               numba: 0.58.1
2023-11-24 15:28:50,231:INFO:            requests: 2.31.0
2023-11-24 15:28:50,231:INFO:          matplotlib: 3.6.0
2023-11-24 15:28:50,231:INFO:          scikitplot: 0.3.7
2023-11-24 15:28:50,231:INFO:         yellowbrick: 1.5
2023-11-24 15:28:50,231:INFO:              plotly: 5.18.0
2023-11-24 15:28:50,231:INFO:    plotly-resampler: Not installed
2023-11-24 15:28:50,231:INFO:             kaleido: 0.2.1
2023-11-24 15:28:50,231:INFO:           schemdraw: 0.15
2023-11-24 15:28:50,231:INFO:         statsmodels: 0.14.0
2023-11-24 15:28:50,231:INFO:              sktime: 0.21.1
2023-11-24 15:28:50,231:INFO:               tbats: 1.1.3
2023-11-24 15:28:50,231:INFO:            pmdarima: 2.0.4
2023-11-24 15:28:50,231:INFO:              psutil: 5.9.6
2023-11-24 15:28:50,231:INFO:          markupsafe: 2.1.3
2023-11-24 15:28:50,231:INFO:             pickle5: Not installed
2023-11-24 15:28:50,231:INFO:         cloudpickle: 3.0.0
2023-11-24 15:28:50,231:INFO:         deprecation: 2.1.0
2023-11-24 15:28:50,231:INFO:              xxhash: 3.4.1
2023-11-24 15:28:50,231:INFO:           wurlitzer: 3.0.3
2023-11-24 15:28:50,231:INFO:PyCaret optional dependencies:
2023-11-24 15:28:50,231:INFO:                shap: Not installed
2023-11-24 15:28:50,231:INFO:           interpret: Not installed
2023-11-24 15:28:50,231:INFO:                umap: Not installed
2023-11-24 15:28:50,231:INFO:     ydata_profiling: 4.6.2
2023-11-24 15:28:50,231:INFO:  explainerdashboard: Not installed
2023-11-24 15:28:50,231:INFO:             autoviz: Not installed
2023-11-24 15:28:50,231:INFO:           fairlearn: Not installed
2023-11-24 15:28:50,231:INFO:          deepchecks: Not installed
2023-11-24 15:28:50,231:INFO:             xgboost: Installed but version unavailable
2023-11-24 15:28:50,231:INFO:            catboost: Not installed
2023-11-24 15:28:50,231:INFO:              kmodes: Not installed
2023-11-24 15:28:50,231:INFO:             mlxtend: Not installed
2023-11-24 15:28:50,231:INFO:       statsforecast: Not installed
2023-11-24 15:28:50,231:INFO:        tune_sklearn: Not installed
2023-11-24 15:28:50,231:INFO:                 ray: Not installed
2023-11-24 15:28:50,231:INFO:            hyperopt: Not installed
2023-11-24 15:28:50,231:INFO:              optuna: Not installed
2023-11-24 15:28:50,231:INFO:               skopt: Not installed
2023-11-24 15:28:50,231:INFO:              mlflow: Not installed
2023-11-24 15:28:50,231:INFO:              gradio: Not installed
2023-11-24 15:28:50,231:INFO:             fastapi: Not installed
2023-11-24 15:28:50,231:INFO:             uvicorn: Not installed
2023-11-24 15:28:50,231:INFO:              m2cgen: Not installed
2023-11-24 15:28:50,231:INFO:           evidently: Not installed
2023-11-24 15:28:50,231:INFO:               fugue: Not installed
2023-11-24 15:28:50,231:INFO:           streamlit: 1.28.2
2023-11-24 15:28:50,231:INFO:             prophet: Not installed
2023-11-24 15:28:50,231:INFO:None
2023-11-24 15:28:50,231:INFO:Set up data.
2023-11-24 15:28:50,258:INFO:Set up folding strategy.
2023-11-24 15:28:50,258:INFO:Set up train/test split.
2023-11-24 15:28:50,262:INFO:Set up index.
2023-11-24 15:28:50,262:INFO:Assigning column types.
2023-11-24 15:28:50,263:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-24 15:28:50,263:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-11-24 15:28:50,265:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-24 15:28:50,267:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-24 15:28:50,289:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 15:28:50,306:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 15:28:50,306:INFO:Soft dependency imported: xgboost: None
2023-11-24 15:39:04,115:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-24 15:39:04,115:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-24 15:39:04,115:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-24 15:39:04,115:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-24 15:39:05,962:INFO:PyCaret RegressionExperiment
2023-11-24 15:39:05,962:INFO:Logging name: reg-default-name
2023-11-24 15:39:05,962:INFO:ML Usecase: MLUsecase.REGRESSION
2023-11-24 15:39:05,962:INFO:version 3.2.0
2023-11-24 15:39:05,962:INFO:Initializing setup()
2023-11-24 15:39:05,962:INFO:self.USI: 3902
2023-11-24 15:39:05,962:INFO:self._variable_keys: {'y', 'X', 'X_train', '_available_plots', 'gpu_n_jobs_param', 'html_param', 'target_param', '_ml_usecase', 'fold_groups_param', 'n_jobs_param', 'log_plots_param', 'seed', 'USI', 'memory', 'data', 'fold_generator', 'fold_shuffle_param', 'transform_target_param', 'X_test', 'gpu_param', 'logging_param', 'exp_name_log', 'exp_id', 'y_train', 'y_test', 'idx', 'pipeline'}
2023-11-24 15:39:05,962:INFO:Checking environment
2023-11-24 15:39:05,962:INFO:python_version: 3.11.5
2023-11-24 15:39:05,962:INFO:python_build: ('main', 'Sep 11 2023 08:31:25')
2023-11-24 15:39:05,962:INFO:machine: arm64
2023-11-24 15:39:05,979:INFO:platform: macOS-14.0-arm64-arm-64bit
2023-11-24 15:39:05,979:INFO:Memory: svmem(total=17179869184, available=6381780992, percent=62.9, used=6780764160, free=1484029952, active=4752523264, inactive=4593516544, wired=2028240896)
2023-11-24 15:39:05,979:INFO:Physical Core: 10
2023-11-24 15:39:05,979:INFO:Logical Core: 10
2023-11-24 15:39:05,979:INFO:Checking libraries
2023-11-24 15:39:05,979:INFO:System:
2023-11-24 15:39:05,979:INFO:    python: 3.11.5 (main, Sep 11 2023, 08:31:25) [Clang 14.0.6 ]
2023-11-24 15:39:05,979:INFO:executable: /Users/saiakhil/anaconda3/envs/mlauto/bin/python
2023-11-24 15:39:05,979:INFO:   machine: macOS-14.0-arm64-arm-64bit
2023-11-24 15:39:05,979:INFO:PyCaret required dependencies:
2023-11-24 15:39:05,995:INFO:                 pip: 23.3.1
2023-11-24 15:39:05,995:INFO:          setuptools: 68.0.0
2023-11-24 15:39:05,995:INFO:             pycaret: 3.2.0
2023-11-24 15:39:05,995:INFO:             IPython: 8.18.0
2023-11-24 15:39:05,995:INFO:          ipywidgets: 8.1.1
2023-11-24 15:39:05,995:INFO:                tqdm: 4.66.1
2023-11-24 15:39:05,995:INFO:               numpy: 1.25.2
2023-11-24 15:39:05,995:INFO:              pandas: 1.5.3
2023-11-24 15:39:05,995:INFO:              jinja2: 3.1.2
2023-11-24 15:39:05,995:INFO:               scipy: 1.10.1
2023-11-24 15:39:05,995:INFO:              joblib: 1.3.2
2023-11-24 15:39:05,995:INFO:             sklearn: 1.2.2
2023-11-24 15:39:05,995:INFO:                pyod: 1.1.2
2023-11-24 15:39:05,995:INFO:            imblearn: 0.11.0
2023-11-24 15:39:05,995:INFO:   category_encoders: 2.6.3
2023-11-24 15:39:05,995:INFO:            lightgbm: 4.1.0
2023-11-24 15:39:05,995:INFO:               numba: 0.58.1
2023-11-24 15:39:05,995:INFO:            requests: 2.31.0
2023-11-24 15:39:05,995:INFO:          matplotlib: 3.6.0
2023-11-24 15:39:05,995:INFO:          scikitplot: 0.3.7
2023-11-24 15:39:05,995:INFO:         yellowbrick: 1.5
2023-11-24 15:39:05,995:INFO:              plotly: 5.18.0
2023-11-24 15:39:05,995:INFO:    plotly-resampler: Not installed
2023-11-24 15:39:05,995:INFO:             kaleido: 0.2.1
2023-11-24 15:39:05,995:INFO:           schemdraw: 0.15
2023-11-24 15:39:05,995:INFO:         statsmodels: 0.14.0
2023-11-24 15:39:05,995:INFO:              sktime: 0.21.1
2023-11-24 15:39:05,995:INFO:               tbats: 1.1.3
2023-11-24 15:39:05,995:INFO:            pmdarima: 2.0.4
2023-11-24 15:39:05,995:INFO:              psutil: 5.9.6
2023-11-24 15:39:05,995:INFO:          markupsafe: 2.1.3
2023-11-24 15:39:05,995:INFO:             pickle5: Not installed
2023-11-24 15:39:05,995:INFO:         cloudpickle: 3.0.0
2023-11-24 15:39:05,995:INFO:         deprecation: 2.1.0
2023-11-24 15:39:05,995:INFO:              xxhash: 3.4.1
2023-11-24 15:39:05,995:INFO:           wurlitzer: 3.0.3
2023-11-24 15:39:05,995:INFO:PyCaret optional dependencies:
2023-11-24 15:39:06,000:INFO:                shap: Not installed
2023-11-24 15:39:06,000:INFO:           interpret: Not installed
2023-11-24 15:39:06,000:INFO:                umap: Not installed
2023-11-24 15:39:06,000:INFO:     ydata_profiling: 4.6.2
2023-11-24 15:39:06,000:INFO:  explainerdashboard: Not installed
2023-11-24 15:39:06,000:INFO:             autoviz: Not installed
2023-11-24 15:39:06,000:INFO:           fairlearn: Not installed
2023-11-24 15:39:06,000:INFO:          deepchecks: Not installed
2023-11-24 15:39:06,000:INFO:             xgboost: Installed but version unavailable
2023-11-24 15:39:06,000:INFO:            catboost: Not installed
2023-11-24 15:39:06,000:INFO:              kmodes: Not installed
2023-11-24 15:39:06,000:INFO:             mlxtend: Not installed
2023-11-24 15:39:06,000:INFO:       statsforecast: Not installed
2023-11-24 15:39:06,000:INFO:        tune_sklearn: Not installed
2023-11-24 15:39:06,000:INFO:                 ray: Not installed
2023-11-24 15:39:06,000:INFO:            hyperopt: Not installed
2023-11-24 15:39:06,000:INFO:              optuna: Not installed
2023-11-24 15:39:06,000:INFO:               skopt: Not installed
2023-11-24 15:39:06,000:INFO:              mlflow: Not installed
2023-11-24 15:39:06,000:INFO:              gradio: Not installed
2023-11-24 15:39:06,000:INFO:             fastapi: Not installed
2023-11-24 15:39:06,000:INFO:             uvicorn: Not installed
2023-11-24 15:39:06,000:INFO:              m2cgen: Not installed
2023-11-24 15:39:06,000:INFO:           evidently: Not installed
2023-11-24 15:39:06,000:INFO:               fugue: Not installed
2023-11-24 15:39:06,000:INFO:           streamlit: 1.28.2
2023-11-24 15:39:06,000:INFO:             prophet: Not installed
2023-11-24 15:39:06,000:INFO:None
2023-11-24 15:39:06,000:INFO:Set up data.
2023-11-24 15:39:06,027:INFO:Set up folding strategy.
2023-11-24 15:39:06,027:INFO:Set up train/test split.
2023-11-24 15:39:06,032:INFO:Set up index.
2023-11-24 15:39:06,032:INFO:Assigning column types.
2023-11-24 15:39:06,033:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-24 15:39:06,033:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-11-24 15:39:06,035:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-24 15:39:06,036:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-24 15:39:06,059:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 15:39:06,075:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 15:39:06,075:INFO:Soft dependency imported: xgboost: None
2023-11-24 15:39:10,328:INFO:PyCaret RegressionExperiment
2023-11-24 15:39:10,328:INFO:Logging name: reg-default-name
2023-11-24 15:39:10,328:INFO:ML Usecase: MLUsecase.REGRESSION
2023-11-24 15:39:10,328:INFO:version 3.2.0
2023-11-24 15:39:10,328:INFO:Initializing setup()
2023-11-24 15:39:10,328:INFO:self.USI: e1ce
2023-11-24 15:39:10,329:INFO:self._variable_keys: {'y', 'X', 'X_train', '_available_plots', 'gpu_n_jobs_param', 'html_param', 'target_param', '_ml_usecase', 'fold_groups_param', 'n_jobs_param', 'log_plots_param', 'seed', 'USI', 'memory', 'data', 'fold_generator', 'fold_shuffle_param', 'transform_target_param', 'X_test', 'gpu_param', 'logging_param', 'exp_name_log', 'exp_id', 'y_train', 'y_test', 'idx', 'pipeline'}
2023-11-24 15:39:10,329:INFO:Checking environment
2023-11-24 15:39:10,329:INFO:python_version: 3.11.5
2023-11-24 15:39:10,329:INFO:python_build: ('main', 'Sep 11 2023 08:31:25')
2023-11-24 15:39:10,329:INFO:machine: arm64
2023-11-24 15:39:10,329:INFO:platform: macOS-14.0-arm64-arm-64bit
2023-11-24 15:39:10,329:INFO:Memory: svmem(total=17179869184, available=6330351616, percent=63.2, used=6832766976, free=1423245312, active=4752769024, inactive=4601544704, wired=2079997952)
2023-11-24 15:39:10,329:INFO:Physical Core: 10
2023-11-24 15:39:10,329:INFO:Logical Core: 10
2023-11-24 15:39:10,329:INFO:Checking libraries
2023-11-24 15:39:10,329:INFO:System:
2023-11-24 15:39:10,329:INFO:    python: 3.11.5 (main, Sep 11 2023, 08:31:25) [Clang 14.0.6 ]
2023-11-24 15:39:10,329:INFO:executable: /Users/saiakhil/anaconda3/envs/mlauto/bin/python
2023-11-24 15:39:10,329:INFO:   machine: macOS-14.0-arm64-arm-64bit
2023-11-24 15:39:10,329:INFO:PyCaret required dependencies:
2023-11-24 15:39:10,329:INFO:                 pip: 23.3.1
2023-11-24 15:39:10,329:INFO:          setuptools: 68.0.0
2023-11-24 15:39:10,329:INFO:             pycaret: 3.2.0
2023-11-24 15:39:10,329:INFO:             IPython: 8.18.0
2023-11-24 15:39:10,329:INFO:          ipywidgets: 8.1.1
2023-11-24 15:39:10,329:INFO:                tqdm: 4.66.1
2023-11-24 15:39:10,329:INFO:               numpy: 1.25.2
2023-11-24 15:39:10,329:INFO:              pandas: 1.5.3
2023-11-24 15:39:10,329:INFO:              jinja2: 3.1.2
2023-11-24 15:39:10,329:INFO:               scipy: 1.10.1
2023-11-24 15:39:10,329:INFO:              joblib: 1.3.2
2023-11-24 15:39:10,329:INFO:             sklearn: 1.2.2
2023-11-24 15:39:10,329:INFO:                pyod: 1.1.2
2023-11-24 15:39:10,329:INFO:            imblearn: 0.11.0
2023-11-24 15:39:10,329:INFO:   category_encoders: 2.6.3
2023-11-24 15:39:10,329:INFO:            lightgbm: 4.1.0
2023-11-24 15:39:10,329:INFO:               numba: 0.58.1
2023-11-24 15:39:10,329:INFO:            requests: 2.31.0
2023-11-24 15:39:10,329:INFO:          matplotlib: 3.6.0
2023-11-24 15:39:10,329:INFO:          scikitplot: 0.3.7
2023-11-24 15:39:10,329:INFO:         yellowbrick: 1.5
2023-11-24 15:39:10,329:INFO:              plotly: 5.18.0
2023-11-24 15:39:10,329:INFO:    plotly-resampler: Not installed
2023-11-24 15:39:10,329:INFO:             kaleido: 0.2.1
2023-11-24 15:39:10,329:INFO:           schemdraw: 0.15
2023-11-24 15:39:10,329:INFO:         statsmodels: 0.14.0
2023-11-24 15:39:10,329:INFO:              sktime: 0.21.1
2023-11-24 15:39:10,329:INFO:               tbats: 1.1.3
2023-11-24 15:39:10,329:INFO:            pmdarima: 2.0.4
2023-11-24 15:39:10,329:INFO:              psutil: 5.9.6
2023-11-24 15:39:10,329:INFO:          markupsafe: 2.1.3
2023-11-24 15:39:10,329:INFO:             pickle5: Not installed
2023-11-24 15:39:10,329:INFO:         cloudpickle: 3.0.0
2023-11-24 15:39:10,329:INFO:         deprecation: 2.1.0
2023-11-24 15:39:10,329:INFO:              xxhash: 3.4.1
2023-11-24 15:39:10,329:INFO:           wurlitzer: 3.0.3
2023-11-24 15:39:10,329:INFO:PyCaret optional dependencies:
2023-11-24 15:39:10,329:INFO:                shap: Not installed
2023-11-24 15:39:10,329:INFO:           interpret: Not installed
2023-11-24 15:39:10,329:INFO:                umap: Not installed
2023-11-24 15:39:10,329:INFO:     ydata_profiling: 4.6.2
2023-11-24 15:39:10,329:INFO:  explainerdashboard: Not installed
2023-11-24 15:39:10,329:INFO:             autoviz: Not installed
2023-11-24 15:39:10,329:INFO:           fairlearn: Not installed
2023-11-24 15:39:10,329:INFO:          deepchecks: Not installed
2023-11-24 15:39:10,329:INFO:             xgboost: Installed but version unavailable
2023-11-24 15:39:10,329:INFO:            catboost: Not installed
2023-11-24 15:39:10,329:INFO:              kmodes: Not installed
2023-11-24 15:39:10,329:INFO:             mlxtend: Not installed
2023-11-24 15:39:10,329:INFO:       statsforecast: Not installed
2023-11-24 15:39:10,329:INFO:        tune_sklearn: Not installed
2023-11-24 15:39:10,329:INFO:                 ray: Not installed
2023-11-24 15:39:10,329:INFO:            hyperopt: Not installed
2023-11-24 15:39:10,329:INFO:              optuna: Not installed
2023-11-24 15:39:10,329:INFO:               skopt: Not installed
2023-11-24 15:39:10,329:INFO:              mlflow: Not installed
2023-11-24 15:39:10,329:INFO:              gradio: Not installed
2023-11-24 15:39:10,329:INFO:             fastapi: Not installed
2023-11-24 15:39:10,329:INFO:             uvicorn: Not installed
2023-11-24 15:39:10,329:INFO:              m2cgen: Not installed
2023-11-24 15:39:10,329:INFO:           evidently: Not installed
2023-11-24 15:39:10,329:INFO:               fugue: Not installed
2023-11-24 15:39:10,329:INFO:           streamlit: 1.28.2
2023-11-24 15:39:10,329:INFO:             prophet: Not installed
2023-11-24 15:39:10,329:INFO:None
2023-11-24 15:39:10,329:INFO:Set up data.
2023-11-24 15:39:10,352:INFO:Set up folding strategy.
2023-11-24 15:39:10,353:INFO:Set up train/test split.
2023-11-24 15:39:10,356:INFO:Set up index.
2023-11-24 15:39:10,356:INFO:Assigning column types.
2023-11-24 15:39:10,357:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-24 15:39:10,357:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-11-24 15:39:10,359:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-24 15:39:10,361:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-24 15:39:10,384:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 15:39:10,400:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 15:39:10,400:INFO:Soft dependency imported: xgboost: None
2023-11-24 15:49:45,824:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-24 15:49:45,824:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-24 15:49:45,824:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-24 15:49:45,824:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-24 15:49:48,831:INFO:PyCaret RegressionExperiment
2023-11-24 15:49:48,831:INFO:Logging name: reg-default-name
2023-11-24 15:49:48,831:INFO:ML Usecase: MLUsecase.REGRESSION
2023-11-24 15:49:48,831:INFO:version 3.2.0
2023-11-24 15:49:48,831:INFO:Initializing setup()
2023-11-24 15:49:48,831:INFO:self.USI: 2f55
2023-11-24 15:49:48,831:INFO:self._variable_keys: {'idx', 'fold_groups_param', 'X_test', 'y', '_ml_usecase', 'y_test', 'fold_generator', 'html_param', 'n_jobs_param', 'seed', 'X_train', 'log_plots_param', 'memory', 'exp_id', 'gpu_n_jobs_param', 'fold_shuffle_param', 'data', 'gpu_param', 'X', '_available_plots', 'pipeline', 'y_train', 'logging_param', 'transform_target_param', 'exp_name_log', 'target_param', 'USI'}
2023-11-24 15:49:48,831:INFO:Checking environment
2023-11-24 15:49:48,831:INFO:python_version: 3.11.5
2023-11-24 15:49:48,831:INFO:python_build: ('main', 'Sep 11 2023 08:31:25')
2023-11-24 15:49:48,831:INFO:machine: arm64
2023-11-24 15:49:48,852:INFO:platform: macOS-14.0-arm64-arm-64bit
2023-11-24 15:49:48,852:INFO:Memory: svmem(total=17179869184, available=5526880256, percent=67.8, used=6927876096, free=728694784, active=4813668352, inactive=4320526336, wired=2114207744)
2023-11-24 15:49:48,852:INFO:Physical Core: 10
2023-11-24 15:49:48,852:INFO:Logical Core: 10
2023-11-24 15:49:48,852:INFO:Checking libraries
2023-11-24 15:49:48,852:INFO:System:
2023-11-24 15:49:48,852:INFO:    python: 3.11.5 (main, Sep 11 2023, 08:31:25) [Clang 14.0.6 ]
2023-11-24 15:49:48,852:INFO:executable: /Users/saiakhil/anaconda3/envs/mlauto/bin/python
2023-11-24 15:49:48,852:INFO:   machine: macOS-14.0-arm64-arm-64bit
2023-11-24 15:49:48,852:INFO:PyCaret required dependencies:
2023-11-24 15:49:48,866:INFO:                 pip: 23.3.1
2023-11-24 15:49:48,866:INFO:          setuptools: 68.0.0
2023-11-24 15:49:48,867:INFO:             pycaret: 3.2.0
2023-11-24 15:49:48,867:INFO:             IPython: 8.18.0
2023-11-24 15:49:48,867:INFO:          ipywidgets: 8.1.1
2023-11-24 15:49:48,867:INFO:                tqdm: 4.66.1
2023-11-24 15:49:48,867:INFO:               numpy: 1.25.2
2023-11-24 15:49:48,867:INFO:              pandas: 1.5.3
2023-11-24 15:49:48,867:INFO:              jinja2: 3.1.2
2023-11-24 15:49:48,867:INFO:               scipy: 1.10.1
2023-11-24 15:49:48,867:INFO:              joblib: 1.3.2
2023-11-24 15:49:48,867:INFO:             sklearn: 1.2.2
2023-11-24 15:49:48,867:INFO:                pyod: 1.1.2
2023-11-24 15:49:48,867:INFO:            imblearn: 0.11.0
2023-11-24 15:49:48,867:INFO:   category_encoders: 2.6.3
2023-11-24 15:49:48,867:INFO:            lightgbm: 4.1.0
2023-11-24 15:49:48,867:INFO:               numba: 0.58.1
2023-11-24 15:49:48,867:INFO:            requests: 2.31.0
2023-11-24 15:49:48,867:INFO:          matplotlib: 3.6.0
2023-11-24 15:49:48,867:INFO:          scikitplot: 0.3.7
2023-11-24 15:49:48,867:INFO:         yellowbrick: 1.5
2023-11-24 15:49:48,867:INFO:              plotly: 5.18.0
2023-11-24 15:49:48,867:INFO:    plotly-resampler: Not installed
2023-11-24 15:49:48,867:INFO:             kaleido: 0.2.1
2023-11-24 15:49:48,867:INFO:           schemdraw: 0.15
2023-11-24 15:49:48,867:INFO:         statsmodels: 0.14.0
2023-11-24 15:49:48,867:INFO:              sktime: 0.21.1
2023-11-24 15:49:48,867:INFO:               tbats: 1.1.3
2023-11-24 15:49:48,867:INFO:            pmdarima: 2.0.4
2023-11-24 15:49:48,867:INFO:              psutil: 5.9.6
2023-11-24 15:49:48,867:INFO:          markupsafe: 2.1.3
2023-11-24 15:49:48,867:INFO:             pickle5: Not installed
2023-11-24 15:49:48,867:INFO:         cloudpickle: 3.0.0
2023-11-24 15:49:48,867:INFO:         deprecation: 2.1.0
2023-11-24 15:49:48,867:INFO:              xxhash: 3.4.1
2023-11-24 15:49:48,867:INFO:           wurlitzer: 3.0.3
2023-11-24 15:49:48,867:INFO:PyCaret optional dependencies:
2023-11-24 15:49:48,872:INFO:                shap: Not installed
2023-11-24 15:49:48,872:INFO:           interpret: Not installed
2023-11-24 15:49:48,872:INFO:                umap: Not installed
2023-11-24 15:49:48,872:INFO:     ydata_profiling: 4.6.2
2023-11-24 15:49:48,872:INFO:  explainerdashboard: Not installed
2023-11-24 15:49:48,872:INFO:             autoviz: Not installed
2023-11-24 15:49:48,872:INFO:           fairlearn: Not installed
2023-11-24 15:49:48,872:INFO:          deepchecks: Not installed
2023-11-24 15:49:48,872:INFO:             xgboost: Installed but version unavailable
2023-11-24 15:49:48,872:INFO:            catboost: Not installed
2023-11-24 15:49:48,872:INFO:              kmodes: Not installed
2023-11-24 15:49:48,872:INFO:             mlxtend: Not installed
2023-11-24 15:49:48,872:INFO:       statsforecast: Not installed
2023-11-24 15:49:48,872:INFO:        tune_sklearn: Not installed
2023-11-24 15:49:48,872:INFO:                 ray: Not installed
2023-11-24 15:49:48,872:INFO:            hyperopt: Not installed
2023-11-24 15:49:48,872:INFO:              optuna: Not installed
2023-11-24 15:49:48,872:INFO:               skopt: Not installed
2023-11-24 15:49:48,872:INFO:              mlflow: Not installed
2023-11-24 15:49:48,872:INFO:              gradio: Not installed
2023-11-24 15:49:48,872:INFO:             fastapi: Not installed
2023-11-24 15:49:48,872:INFO:             uvicorn: Not installed
2023-11-24 15:49:48,872:INFO:              m2cgen: Not installed
2023-11-24 15:49:48,872:INFO:           evidently: Not installed
2023-11-24 15:49:48,872:INFO:               fugue: Not installed
2023-11-24 15:49:48,872:INFO:           streamlit: 1.28.2
2023-11-24 15:49:48,872:INFO:             prophet: Not installed
2023-11-24 15:49:48,872:INFO:None
2023-11-24 15:49:48,872:INFO:Set up data.
2023-11-24 15:49:48,899:INFO:Set up folding strategy.
2023-11-24 15:49:48,899:INFO:Set up train/test split.
2023-11-24 15:49:48,903:INFO:Set up index.
2023-11-24 15:49:48,904:INFO:Assigning column types.
2023-11-24 15:49:48,905:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-24 15:49:48,905:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-11-24 15:49:48,907:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-24 15:49:48,908:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-24 15:49:48,930:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 15:49:48,946:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 15:49:48,946:INFO:Soft dependency imported: xgboost: None
2023-11-24 15:49:52,832:INFO:PyCaret RegressionExperiment
2023-11-24 15:49:52,832:INFO:Logging name: reg-default-name
2023-11-24 15:49:52,832:INFO:ML Usecase: MLUsecase.REGRESSION
2023-11-24 15:49:52,832:INFO:version 3.2.0
2023-11-24 15:49:52,833:INFO:Initializing setup()
2023-11-24 15:49:52,833:INFO:self.USI: 7ad3
2023-11-24 15:49:52,833:INFO:self._variable_keys: {'idx', 'fold_groups_param', 'X_test', 'y', '_ml_usecase', 'y_test', 'fold_generator', 'html_param', 'n_jobs_param', 'seed', 'X_train', 'log_plots_param', 'memory', 'exp_id', 'gpu_n_jobs_param', 'fold_shuffle_param', 'data', 'gpu_param', 'X', '_available_plots', 'pipeline', 'y_train', 'logging_param', 'transform_target_param', 'exp_name_log', 'target_param', 'USI'}
2023-11-24 15:49:52,833:INFO:Checking environment
2023-11-24 15:49:52,833:INFO:python_version: 3.11.5
2023-11-24 15:49:52,833:INFO:python_build: ('main', 'Sep 11 2023 08:31:25')
2023-11-24 15:49:52,833:INFO:machine: arm64
2023-11-24 15:49:52,833:INFO:platform: macOS-14.0-arm64-arm-64bit
2023-11-24 15:49:52,833:INFO:Memory: svmem(total=17179869184, available=5471961088, percent=68.1, used=6982877184, free=634519552, active=4862312448, inactive=4358111232, wired=2120564736)
2023-11-24 15:49:52,833:INFO:Physical Core: 10
2023-11-24 15:49:52,833:INFO:Logical Core: 10
2023-11-24 15:49:52,833:INFO:Checking libraries
2023-11-24 15:49:52,833:INFO:System:
2023-11-24 15:49:52,833:INFO:    python: 3.11.5 (main, Sep 11 2023, 08:31:25) [Clang 14.0.6 ]
2023-11-24 15:49:52,833:INFO:executable: /Users/saiakhil/anaconda3/envs/mlauto/bin/python
2023-11-24 15:49:52,833:INFO:   machine: macOS-14.0-arm64-arm-64bit
2023-11-24 15:49:52,833:INFO:PyCaret required dependencies:
2023-11-24 15:49:52,833:INFO:                 pip: 23.3.1
2023-11-24 15:49:52,833:INFO:          setuptools: 68.0.0
2023-11-24 15:49:52,833:INFO:             pycaret: 3.2.0
2023-11-24 15:49:52,833:INFO:             IPython: 8.18.0
2023-11-24 15:49:52,833:INFO:          ipywidgets: 8.1.1
2023-11-24 15:49:52,833:INFO:                tqdm: 4.66.1
2023-11-24 15:49:52,833:INFO:               numpy: 1.25.2
2023-11-24 15:49:52,833:INFO:              pandas: 1.5.3
2023-11-24 15:49:52,833:INFO:              jinja2: 3.1.2
2023-11-24 15:49:52,833:INFO:               scipy: 1.10.1
2023-11-24 15:49:52,833:INFO:              joblib: 1.3.2
2023-11-24 15:49:52,833:INFO:             sklearn: 1.2.2
2023-11-24 15:49:52,833:INFO:                pyod: 1.1.2
2023-11-24 15:49:52,833:INFO:            imblearn: 0.11.0
2023-11-24 15:49:52,833:INFO:   category_encoders: 2.6.3
2023-11-24 15:49:52,833:INFO:            lightgbm: 4.1.0
2023-11-24 15:49:52,833:INFO:               numba: 0.58.1
2023-11-24 15:49:52,833:INFO:            requests: 2.31.0
2023-11-24 15:49:52,833:INFO:          matplotlib: 3.6.0
2023-11-24 15:49:52,833:INFO:          scikitplot: 0.3.7
2023-11-24 15:49:52,833:INFO:         yellowbrick: 1.5
2023-11-24 15:49:52,833:INFO:              plotly: 5.18.0
2023-11-24 15:49:52,833:INFO:    plotly-resampler: Not installed
2023-11-24 15:49:52,833:INFO:             kaleido: 0.2.1
2023-11-24 15:49:52,833:INFO:           schemdraw: 0.15
2023-11-24 15:49:52,833:INFO:         statsmodels: 0.14.0
2023-11-24 15:49:52,833:INFO:              sktime: 0.21.1
2023-11-24 15:49:52,833:INFO:               tbats: 1.1.3
2023-11-24 15:49:52,833:INFO:            pmdarima: 2.0.4
2023-11-24 15:49:52,833:INFO:              psutil: 5.9.6
2023-11-24 15:49:52,833:INFO:          markupsafe: 2.1.3
2023-11-24 15:49:52,833:INFO:             pickle5: Not installed
2023-11-24 15:49:52,833:INFO:         cloudpickle: 3.0.0
2023-11-24 15:49:52,833:INFO:         deprecation: 2.1.0
2023-11-24 15:49:52,833:INFO:              xxhash: 3.4.1
2023-11-24 15:49:52,833:INFO:           wurlitzer: 3.0.3
2023-11-24 15:49:52,833:INFO:PyCaret optional dependencies:
2023-11-24 15:49:52,833:INFO:                shap: Not installed
2023-11-24 15:49:52,833:INFO:           interpret: Not installed
2023-11-24 15:49:52,833:INFO:                umap: Not installed
2023-11-24 15:49:52,833:INFO:     ydata_profiling: 4.6.2
2023-11-24 15:49:52,833:INFO:  explainerdashboard: Not installed
2023-11-24 15:49:52,833:INFO:             autoviz: Not installed
2023-11-24 15:49:52,833:INFO:           fairlearn: Not installed
2023-11-24 15:49:52,833:INFO:          deepchecks: Not installed
2023-11-24 15:49:52,833:INFO:             xgboost: Installed but version unavailable
2023-11-24 15:49:52,833:INFO:            catboost: Not installed
2023-11-24 15:49:52,833:INFO:              kmodes: Not installed
2023-11-24 15:49:52,833:INFO:             mlxtend: Not installed
2023-11-24 15:49:52,833:INFO:       statsforecast: Not installed
2023-11-24 15:49:52,833:INFO:        tune_sklearn: Not installed
2023-11-24 15:49:52,833:INFO:                 ray: Not installed
2023-11-24 15:49:52,834:INFO:            hyperopt: Not installed
2023-11-24 15:49:52,834:INFO:              optuna: Not installed
2023-11-24 15:49:52,834:INFO:               skopt: Not installed
2023-11-24 15:49:52,834:INFO:              mlflow: Not installed
2023-11-24 15:49:52,834:INFO:              gradio: Not installed
2023-11-24 15:49:52,834:INFO:             fastapi: Not installed
2023-11-24 15:49:52,834:INFO:             uvicorn: Not installed
2023-11-24 15:49:52,834:INFO:              m2cgen: Not installed
2023-11-24 15:49:52,834:INFO:           evidently: Not installed
2023-11-24 15:49:52,834:INFO:               fugue: Not installed
2023-11-24 15:49:52,834:INFO:           streamlit: 1.28.2
2023-11-24 15:49:52,834:INFO:             prophet: Not installed
2023-11-24 15:49:52,834:INFO:None
2023-11-24 15:49:52,834:INFO:Set up data.
2023-11-24 15:49:52,859:INFO:Set up folding strategy.
2023-11-24 15:49:52,859:INFO:Set up train/test split.
2023-11-24 15:49:52,863:INFO:Set up index.
2023-11-24 15:49:52,863:INFO:Assigning column types.
2023-11-24 15:49:52,865:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-24 15:49:52,865:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-11-24 15:49:52,866:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-24 15:49:52,868:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-24 15:49:52,891:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 15:49:52,907:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 15:49:52,907:INFO:Soft dependency imported: xgboost: None
2023-11-24 15:54:56,032:INFO:PyCaret RegressionExperiment
2023-11-24 15:54:56,032:INFO:Logging name: reg-default-name
2023-11-24 15:54:56,032:INFO:ML Usecase: MLUsecase.REGRESSION
2023-11-24 15:54:56,032:INFO:version 3.2.0
2023-11-24 15:54:56,032:INFO:Initializing setup()
2023-11-24 15:54:56,032:INFO:self.USI: 2833
2023-11-24 15:54:56,032:INFO:self._variable_keys: {'idx', 'fold_groups_param', 'X_test', 'y', '_ml_usecase', 'y_test', 'fold_generator', 'html_param', 'n_jobs_param', 'seed', 'X_train', 'log_plots_param', 'memory', 'exp_id', 'gpu_n_jobs_param', 'fold_shuffle_param', 'data', 'gpu_param', 'X', '_available_plots', 'pipeline', 'y_train', 'logging_param', 'transform_target_param', 'exp_name_log', 'target_param', 'USI'}
2023-11-24 15:54:56,032:INFO:Checking environment
2023-11-24 15:54:56,032:INFO:python_version: 3.11.5
2023-11-24 15:54:56,032:INFO:python_build: ('main', 'Sep 11 2023 08:31:25')
2023-11-24 15:54:56,033:INFO:machine: arm64
2023-11-24 15:54:56,033:INFO:platform: macOS-14.0-arm64-arm-64bit
2023-11-24 15:54:56,033:INFO:Memory: svmem(total=17179869184, available=5348409344, percent=68.9, used=7315521536, free=152387584, active=5219565568, inactive=4941758464, wired=2095955968)
2023-11-24 15:54:56,033:INFO:Physical Core: 10
2023-11-24 15:54:56,033:INFO:Logical Core: 10
2023-11-24 15:54:56,033:INFO:Checking libraries
2023-11-24 15:54:56,033:INFO:System:
2023-11-24 15:54:56,033:INFO:    python: 3.11.5 (main, Sep 11 2023, 08:31:25) [Clang 14.0.6 ]
2023-11-24 15:54:56,033:INFO:executable: /Users/saiakhil/anaconda3/envs/mlauto/bin/python
2023-11-24 15:54:56,033:INFO:   machine: macOS-14.0-arm64-arm-64bit
2023-11-24 15:54:56,033:INFO:PyCaret required dependencies:
2023-11-24 15:54:56,033:INFO:                 pip: 23.3.1
2023-11-24 15:54:56,033:INFO:          setuptools: 68.0.0
2023-11-24 15:54:56,033:INFO:             pycaret: 3.2.0
2023-11-24 15:54:56,033:INFO:             IPython: 8.18.0
2023-11-24 15:54:56,033:INFO:          ipywidgets: 8.1.1
2023-11-24 15:54:56,033:INFO:                tqdm: 4.66.1
2023-11-24 15:54:56,033:INFO:               numpy: 1.25.2
2023-11-24 15:54:56,033:INFO:              pandas: 1.5.3
2023-11-24 15:54:56,033:INFO:              jinja2: 3.1.2
2023-11-24 15:54:56,033:INFO:               scipy: 1.10.1
2023-11-24 15:54:56,033:INFO:              joblib: 1.3.2
2023-11-24 15:54:56,033:INFO:             sklearn: 1.2.2
2023-11-24 15:54:56,033:INFO:                pyod: 1.1.2
2023-11-24 15:54:56,033:INFO:            imblearn: 0.11.0
2023-11-24 15:54:56,033:INFO:   category_encoders: 2.6.3
2023-11-24 15:54:56,033:INFO:            lightgbm: 4.1.0
2023-11-24 15:54:56,033:INFO:               numba: 0.58.1
2023-11-24 15:54:56,033:INFO:            requests: 2.31.0
2023-11-24 15:54:56,033:INFO:          matplotlib: 3.6.0
2023-11-24 15:54:56,033:INFO:          scikitplot: 0.3.7
2023-11-24 15:54:56,033:INFO:         yellowbrick: 1.5
2023-11-24 15:54:56,033:INFO:              plotly: 5.18.0
2023-11-24 15:54:56,033:INFO:    plotly-resampler: Not installed
2023-11-24 15:54:56,033:INFO:             kaleido: 0.2.1
2023-11-24 15:54:56,033:INFO:           schemdraw: 0.15
2023-11-24 15:54:56,033:INFO:         statsmodels: 0.14.0
2023-11-24 15:54:56,033:INFO:              sktime: 0.21.1
2023-11-24 15:54:56,033:INFO:               tbats: 1.1.3
2023-11-24 15:54:56,033:INFO:            pmdarima: 2.0.4
2023-11-24 15:54:56,033:INFO:              psutil: 5.9.6
2023-11-24 15:54:56,033:INFO:          markupsafe: 2.1.3
2023-11-24 15:54:56,033:INFO:             pickle5: Not installed
2023-11-24 15:54:56,033:INFO:         cloudpickle: 3.0.0
2023-11-24 15:54:56,033:INFO:         deprecation: 2.1.0
2023-11-24 15:54:56,033:INFO:              xxhash: 3.4.1
2023-11-24 15:54:56,033:INFO:           wurlitzer: 3.0.3
2023-11-24 15:54:56,033:INFO:PyCaret optional dependencies:
2023-11-24 15:54:56,033:INFO:                shap: Not installed
2023-11-24 15:54:56,033:INFO:           interpret: Not installed
2023-11-24 15:54:56,033:INFO:                umap: Not installed
2023-11-24 15:54:56,033:INFO:     ydata_profiling: 4.6.2
2023-11-24 15:54:56,033:INFO:  explainerdashboard: Not installed
2023-11-24 15:54:56,033:INFO:             autoviz: Not installed
2023-11-24 15:54:56,033:INFO:           fairlearn: Not installed
2023-11-24 15:54:56,033:INFO:          deepchecks: Not installed
2023-11-24 15:54:56,033:INFO:             xgboost: Installed but version unavailable
2023-11-24 15:54:56,033:INFO:            catboost: Not installed
2023-11-24 15:54:56,033:INFO:              kmodes: Not installed
2023-11-24 15:54:56,033:INFO:             mlxtend: Not installed
2023-11-24 15:54:56,033:INFO:       statsforecast: Not installed
2023-11-24 15:54:56,033:INFO:        tune_sklearn: Not installed
2023-11-24 15:54:56,033:INFO:                 ray: Not installed
2023-11-24 15:54:56,033:INFO:            hyperopt: Not installed
2023-11-24 15:54:56,033:INFO:              optuna: Not installed
2023-11-24 15:54:56,033:INFO:               skopt: Not installed
2023-11-24 15:54:56,033:INFO:              mlflow: Not installed
2023-11-24 15:54:56,033:INFO:              gradio: Not installed
2023-11-24 15:54:56,033:INFO:             fastapi: Not installed
2023-11-24 15:54:56,033:INFO:             uvicorn: Not installed
2023-11-24 15:54:56,033:INFO:              m2cgen: Not installed
2023-11-24 15:54:56,033:INFO:           evidently: Not installed
2023-11-24 15:54:56,033:INFO:               fugue: Not installed
2023-11-24 15:54:56,033:INFO:           streamlit: 1.28.2
2023-11-24 15:54:56,033:INFO:             prophet: Not installed
2023-11-24 15:54:56,033:INFO:None
2023-11-24 15:54:56,033:INFO:Set up data.
2023-11-24 15:54:56,058:INFO:Set up folding strategy.
2023-11-24 15:54:56,058:INFO:Set up train/test split.
2023-11-24 15:54:56,061:INFO:Set up index.
2023-11-24 15:54:56,062:INFO:Assigning column types.
2023-11-24 15:54:56,063:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-24 15:54:56,063:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-11-24 15:54:56,065:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-24 15:54:56,066:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-24 15:54:56,088:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 15:54:56,105:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 15:54:56,105:INFO:Soft dependency imported: xgboost: None
2023-11-24 15:56:17,763:INFO:PyCaret RegressionExperiment
2023-11-24 15:56:17,763:INFO:Logging name: reg-default-name
2023-11-24 15:56:17,763:INFO:ML Usecase: MLUsecase.REGRESSION
2023-11-24 15:56:17,763:INFO:version 3.2.0
2023-11-24 15:56:17,763:INFO:Initializing setup()
2023-11-24 15:56:17,763:INFO:self.USI: ab50
2023-11-24 15:56:17,763:INFO:self._variable_keys: {'idx', 'fold_groups_param', 'X_test', 'y', '_ml_usecase', 'y_test', 'fold_generator', 'html_param', 'n_jobs_param', 'seed', 'X_train', 'log_plots_param', 'memory', 'exp_id', 'gpu_n_jobs_param', 'fold_shuffle_param', 'data', 'gpu_param', 'X', '_available_plots', 'pipeline', 'y_train', 'logging_param', 'transform_target_param', 'exp_name_log', 'target_param', 'USI'}
2023-11-24 15:56:17,763:INFO:Checking environment
2023-11-24 15:56:17,763:INFO:python_version: 3.11.5
2023-11-24 15:56:17,763:INFO:python_build: ('main', 'Sep 11 2023 08:31:25')
2023-11-24 15:56:17,763:INFO:machine: arm64
2023-11-24 15:56:17,763:INFO:platform: macOS-14.0-arm64-arm-64bit
2023-11-24 15:56:17,763:INFO:Memory: svmem(total=17179869184, available=5374361600, percent=68.7, used=7343226880, free=113344512, active=5274107904, inactive=4995809280, wired=2069118976)
2023-11-24 15:56:17,763:INFO:Physical Core: 10
2023-11-24 15:56:17,763:INFO:Logical Core: 10
2023-11-24 15:56:17,763:INFO:Checking libraries
2023-11-24 15:56:17,763:INFO:System:
2023-11-24 15:56:17,763:INFO:    python: 3.11.5 (main, Sep 11 2023, 08:31:25) [Clang 14.0.6 ]
2023-11-24 15:56:17,763:INFO:executable: /Users/saiakhil/anaconda3/envs/mlauto/bin/python
2023-11-24 15:56:17,763:INFO:   machine: macOS-14.0-arm64-arm-64bit
2023-11-24 15:56:17,763:INFO:PyCaret required dependencies:
2023-11-24 15:56:17,763:INFO:                 pip: 23.3.1
2023-11-24 15:56:17,764:INFO:          setuptools: 68.0.0
2023-11-24 15:56:17,764:INFO:             pycaret: 3.2.0
2023-11-24 15:56:17,764:INFO:             IPython: 8.18.0
2023-11-24 15:56:17,764:INFO:          ipywidgets: 8.1.1
2023-11-24 15:56:17,764:INFO:                tqdm: 4.66.1
2023-11-24 15:56:17,764:INFO:               numpy: 1.25.2
2023-11-24 15:56:17,764:INFO:              pandas: 1.5.3
2023-11-24 15:56:17,764:INFO:              jinja2: 3.1.2
2023-11-24 15:56:17,764:INFO:               scipy: 1.10.1
2023-11-24 15:56:17,764:INFO:              joblib: 1.3.2
2023-11-24 15:56:17,764:INFO:             sklearn: 1.2.2
2023-11-24 15:56:17,764:INFO:                pyod: 1.1.2
2023-11-24 15:56:17,764:INFO:            imblearn: 0.11.0
2023-11-24 15:56:17,764:INFO:   category_encoders: 2.6.3
2023-11-24 15:56:17,764:INFO:            lightgbm: 4.1.0
2023-11-24 15:56:17,764:INFO:               numba: 0.58.1
2023-11-24 15:56:17,764:INFO:            requests: 2.31.0
2023-11-24 15:56:17,764:INFO:          matplotlib: 3.6.0
2023-11-24 15:56:17,764:INFO:          scikitplot: 0.3.7
2023-11-24 15:56:17,764:INFO:         yellowbrick: 1.5
2023-11-24 15:56:17,764:INFO:              plotly: 5.18.0
2023-11-24 15:56:17,764:INFO:    plotly-resampler: Not installed
2023-11-24 15:56:17,764:INFO:             kaleido: 0.2.1
2023-11-24 15:56:17,764:INFO:           schemdraw: 0.15
2023-11-24 15:56:17,764:INFO:         statsmodels: 0.14.0
2023-11-24 15:56:17,764:INFO:              sktime: 0.21.1
2023-11-24 15:56:17,764:INFO:               tbats: 1.1.3
2023-11-24 15:56:17,764:INFO:            pmdarima: 2.0.4
2023-11-24 15:56:17,764:INFO:              psutil: 5.9.6
2023-11-24 15:56:17,764:INFO:          markupsafe: 2.1.3
2023-11-24 15:56:17,764:INFO:             pickle5: Not installed
2023-11-24 15:56:17,764:INFO:         cloudpickle: 3.0.0
2023-11-24 15:56:17,764:INFO:         deprecation: 2.1.0
2023-11-24 15:56:17,764:INFO:              xxhash: 3.4.1
2023-11-24 15:56:17,764:INFO:           wurlitzer: 3.0.3
2023-11-24 15:56:17,764:INFO:PyCaret optional dependencies:
2023-11-24 15:56:17,764:INFO:                shap: Not installed
2023-11-24 15:56:17,764:INFO:           interpret: Not installed
2023-11-24 15:56:17,764:INFO:                umap: Not installed
2023-11-24 15:56:17,764:INFO:     ydata_profiling: 4.6.2
2023-11-24 15:56:17,764:INFO:  explainerdashboard: Not installed
2023-11-24 15:56:17,764:INFO:             autoviz: Not installed
2023-11-24 15:56:17,764:INFO:           fairlearn: Not installed
2023-11-24 15:56:17,764:INFO:          deepchecks: Not installed
2023-11-24 15:56:17,764:INFO:             xgboost: Installed but version unavailable
2023-11-24 15:56:17,764:INFO:            catboost: Not installed
2023-11-24 15:56:17,764:INFO:              kmodes: Not installed
2023-11-24 15:56:17,764:INFO:             mlxtend: Not installed
2023-11-24 15:56:17,764:INFO:       statsforecast: Not installed
2023-11-24 15:56:17,764:INFO:        tune_sklearn: Not installed
2023-11-24 15:56:17,764:INFO:                 ray: Not installed
2023-11-24 15:56:17,764:INFO:            hyperopt: Not installed
2023-11-24 15:56:17,764:INFO:              optuna: Not installed
2023-11-24 15:56:17,764:INFO:               skopt: Not installed
2023-11-24 15:56:17,764:INFO:              mlflow: Not installed
2023-11-24 15:56:17,764:INFO:              gradio: Not installed
2023-11-24 15:56:17,764:INFO:             fastapi: Not installed
2023-11-24 15:56:17,764:INFO:             uvicorn: Not installed
2023-11-24 15:56:17,764:INFO:              m2cgen: Not installed
2023-11-24 15:56:17,764:INFO:           evidently: Not installed
2023-11-24 15:56:17,764:INFO:               fugue: Not installed
2023-11-24 15:56:17,764:INFO:           streamlit: 1.28.2
2023-11-24 15:56:17,764:INFO:             prophet: Not installed
2023-11-24 15:56:17,764:INFO:None
2023-11-24 15:56:17,764:INFO:Set up data.
2023-11-24 15:56:17,790:INFO:Set up folding strategy.
2023-11-24 15:56:17,791:INFO:Set up train/test split.
2023-11-24 15:56:17,794:INFO:Set up index.
2023-11-24 15:56:17,794:INFO:Assigning column types.
2023-11-24 15:56:17,796:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-24 15:56:17,796:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-11-24 15:56:17,798:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-24 15:56:17,799:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-24 15:56:17,821:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 15:56:17,838:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 15:56:17,839:INFO:Soft dependency imported: xgboost: None
2023-11-24 15:58:15,677:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-24 15:58:15,677:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-24 15:58:15,677:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-24 15:58:15,677:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-24 15:58:22,719:INFO:PyCaret RegressionExperiment
2023-11-24 15:58:22,719:INFO:Logging name: reg-default-name
2023-11-24 15:58:22,719:INFO:ML Usecase: MLUsecase.REGRESSION
2023-11-24 15:58:22,719:INFO:version 3.2.0
2023-11-24 15:58:22,719:INFO:Initializing setup()
2023-11-24 15:58:22,719:INFO:self.USI: 0804
2023-11-24 15:58:22,719:INFO:self._variable_keys: {'y_test', 'seed', 'n_jobs_param', 'fold_shuffle_param', 'X_train', 'fold_generator', 'gpu_param', '_available_plots', 'memory', 'exp_name_log', 'logging_param', 'y_train', 'html_param', 'transform_target_param', 'log_plots_param', 'target_param', 'exp_id', '_ml_usecase', 'data', 'gpu_n_jobs_param', 'y', 'pipeline', 'X_test', 'USI', 'X', 'fold_groups_param', 'idx'}
2023-11-24 15:58:22,719:INFO:Checking environment
2023-11-24 15:58:22,720:INFO:python_version: 3.11.5
2023-11-24 15:58:22,720:INFO:python_build: ('main', 'Sep 11 2023 08:31:25')
2023-11-24 15:58:22,720:INFO:machine: arm64
2023-11-24 15:58:22,735:INFO:platform: macOS-14.0-arm64-arm-64bit
2023-11-24 15:58:22,735:INFO:Memory: svmem(total=17179869184, available=5445959680, percent=68.3, used=7317897216, free=218464256, active=5243437056, inactive=5058756608, wired=2074460160)
2023-11-24 15:58:22,735:INFO:Physical Core: 10
2023-11-24 15:58:22,735:INFO:Logical Core: 10
2023-11-24 15:58:22,735:INFO:Checking libraries
2023-11-24 15:58:22,735:INFO:System:
2023-11-24 15:58:22,735:INFO:    python: 3.11.5 (main, Sep 11 2023, 08:31:25) [Clang 14.0.6 ]
2023-11-24 15:58:22,735:INFO:executable: /Users/saiakhil/anaconda3/envs/mlauto/bin/python
2023-11-24 15:58:22,735:INFO:   machine: macOS-14.0-arm64-arm-64bit
2023-11-24 15:58:22,735:INFO:PyCaret required dependencies:
2023-11-24 15:58:22,748:INFO:                 pip: 23.3.1
2023-11-24 15:58:22,748:INFO:          setuptools: 68.0.0
2023-11-24 15:58:22,748:INFO:             pycaret: 3.2.0
2023-11-24 15:58:22,748:INFO:             IPython: 8.18.0
2023-11-24 15:58:22,748:INFO:          ipywidgets: 8.1.1
2023-11-24 15:58:22,748:INFO:                tqdm: 4.66.1
2023-11-24 15:58:22,748:INFO:               numpy: 1.25.2
2023-11-24 15:58:22,748:INFO:              pandas: 1.5.3
2023-11-24 15:58:22,748:INFO:              jinja2: 3.1.2
2023-11-24 15:58:22,748:INFO:               scipy: 1.10.1
2023-11-24 15:58:22,748:INFO:              joblib: 1.3.2
2023-11-24 15:58:22,748:INFO:             sklearn: 1.2.2
2023-11-24 15:58:22,748:INFO:                pyod: 1.1.2
2023-11-24 15:58:22,748:INFO:            imblearn: 0.11.0
2023-11-24 15:58:22,748:INFO:   category_encoders: 2.6.3
2023-11-24 15:58:22,748:INFO:            lightgbm: 4.1.0
2023-11-24 15:58:22,748:INFO:               numba: 0.58.1
2023-11-24 15:58:22,748:INFO:            requests: 2.31.0
2023-11-24 15:58:22,748:INFO:          matplotlib: 3.6.0
2023-11-24 15:58:22,748:INFO:          scikitplot: 0.3.7
2023-11-24 15:58:22,748:INFO:         yellowbrick: 1.5
2023-11-24 15:58:22,748:INFO:              plotly: 5.18.0
2023-11-24 15:58:22,748:INFO:    plotly-resampler: Not installed
2023-11-24 15:58:22,748:INFO:             kaleido: 0.2.1
2023-11-24 15:58:22,748:INFO:           schemdraw: 0.15
2023-11-24 15:58:22,748:INFO:         statsmodels: 0.14.0
2023-11-24 15:58:22,748:INFO:              sktime: 0.21.1
2023-11-24 15:58:22,748:INFO:               tbats: 1.1.3
2023-11-24 15:58:22,748:INFO:            pmdarima: 2.0.4
2023-11-24 15:58:22,748:INFO:              psutil: 5.9.6
2023-11-24 15:58:22,748:INFO:          markupsafe: 2.1.3
2023-11-24 15:58:22,748:INFO:             pickle5: Not installed
2023-11-24 15:58:22,748:INFO:         cloudpickle: 3.0.0
2023-11-24 15:58:22,748:INFO:         deprecation: 2.1.0
2023-11-24 15:58:22,748:INFO:              xxhash: 3.4.1
2023-11-24 15:58:22,748:INFO:           wurlitzer: 3.0.3
2023-11-24 15:58:22,748:INFO:PyCaret optional dependencies:
2023-11-24 15:58:22,754:INFO:                shap: Not installed
2023-11-24 15:58:22,754:INFO:           interpret: Not installed
2023-11-24 15:58:22,754:INFO:                umap: Not installed
2023-11-24 15:58:22,754:INFO:     ydata_profiling: 4.6.2
2023-11-24 15:58:22,754:INFO:  explainerdashboard: Not installed
2023-11-24 15:58:22,754:INFO:             autoviz: Not installed
2023-11-24 15:58:22,754:INFO:           fairlearn: Not installed
2023-11-24 15:58:22,754:INFO:          deepchecks: Not installed
2023-11-24 15:58:22,754:INFO:             xgboost: Installed but version unavailable
2023-11-24 15:58:22,754:INFO:            catboost: Not installed
2023-11-24 15:58:22,754:INFO:              kmodes: Not installed
2023-11-24 15:58:22,754:INFO:             mlxtend: Not installed
2023-11-24 15:58:22,754:INFO:       statsforecast: Not installed
2023-11-24 15:58:22,754:INFO:        tune_sklearn: Not installed
2023-11-24 15:58:22,754:INFO:                 ray: Not installed
2023-11-24 15:58:22,754:INFO:            hyperopt: Not installed
2023-11-24 15:58:22,754:INFO:              optuna: Not installed
2023-11-24 15:58:22,754:INFO:               skopt: Not installed
2023-11-24 15:58:22,754:INFO:              mlflow: Not installed
2023-11-24 15:58:22,754:INFO:              gradio: Not installed
2023-11-24 15:58:22,754:INFO:             fastapi: Not installed
2023-11-24 15:58:22,754:INFO:             uvicorn: Not installed
2023-11-24 15:58:22,754:INFO:              m2cgen: Not installed
2023-11-24 15:58:22,754:INFO:           evidently: Not installed
2023-11-24 15:58:22,754:INFO:               fugue: Not installed
2023-11-24 15:58:22,754:INFO:           streamlit: 1.28.2
2023-11-24 15:58:22,754:INFO:             prophet: Not installed
2023-11-24 15:58:22,754:INFO:None
2023-11-24 15:58:22,754:INFO:Set up data.
2023-11-24 15:58:22,779:INFO:Set up folding strategy.
2023-11-24 15:58:22,779:INFO:Set up train/test split.
2023-11-24 15:58:22,783:INFO:Set up index.
2023-11-24 15:58:22,783:INFO:Assigning column types.
2023-11-24 15:58:22,784:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-24 15:58:22,784:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-11-24 15:58:22,786:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-24 15:58:22,788:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-24 15:58:22,808:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 15:58:22,823:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 15:58:22,824:INFO:Soft dependency imported: xgboost: None
2023-11-24 16:02:39,877:INFO:PyCaret RegressionExperiment
2023-11-24 16:02:39,879:INFO:Logging name: reg-default-name
2023-11-24 16:02:39,879:INFO:ML Usecase: MLUsecase.REGRESSION
2023-11-24 16:02:39,879:INFO:version 3.2.0
2023-11-24 16:02:39,879:INFO:Initializing setup()
2023-11-24 16:02:39,879:INFO:self.USI: deee
2023-11-24 16:02:39,879:INFO:self._variable_keys: {'y_test', 'seed', 'n_jobs_param', 'fold_shuffle_param', 'X_train', 'fold_generator', 'gpu_param', '_available_plots', 'memory', 'exp_name_log', 'logging_param', 'y_train', 'html_param', 'transform_target_param', 'log_plots_param', 'target_param', 'exp_id', '_ml_usecase', 'data', 'gpu_n_jobs_param', 'y', 'pipeline', 'X_test', 'USI', 'X', 'fold_groups_param', 'idx'}
2023-11-24 16:02:39,879:INFO:Checking environment
2023-11-24 16:02:39,879:INFO:python_version: 3.11.5
2023-11-24 16:02:39,879:INFO:python_build: ('main', 'Sep 11 2023 08:31:25')
2023-11-24 16:02:39,879:INFO:machine: arm64
2023-11-24 16:02:39,879:INFO:platform: macOS-14.0-arm64-arm-64bit
2023-11-24 16:02:39,879:INFO:Memory: svmem(total=17179869184, available=5418942464, percent=68.5, used=7453032448, free=55656448, active=5389172736, inactive=5230690304, wired=2063859712)
2023-11-24 16:02:39,879:INFO:Physical Core: 10
2023-11-24 16:02:39,879:INFO:Logical Core: 10
2023-11-24 16:02:39,879:INFO:Checking libraries
2023-11-24 16:02:39,879:INFO:System:
2023-11-24 16:02:39,879:INFO:    python: 3.11.5 (main, Sep 11 2023, 08:31:25) [Clang 14.0.6 ]
2023-11-24 16:02:39,879:INFO:executable: /Users/saiakhil/anaconda3/envs/mlauto/bin/python
2023-11-24 16:02:39,879:INFO:   machine: macOS-14.0-arm64-arm-64bit
2023-11-24 16:02:39,879:INFO:PyCaret required dependencies:
2023-11-24 16:02:39,879:INFO:                 pip: 23.3.1
2023-11-24 16:02:39,879:INFO:          setuptools: 68.0.0
2023-11-24 16:02:39,879:INFO:             pycaret: 3.2.0
2023-11-24 16:02:39,879:INFO:             IPython: 8.18.0
2023-11-24 16:02:39,879:INFO:          ipywidgets: 8.1.1
2023-11-24 16:02:39,879:INFO:                tqdm: 4.66.1
2023-11-24 16:02:39,879:INFO:               numpy: 1.25.2
2023-11-24 16:02:39,879:INFO:              pandas: 1.5.3
2023-11-24 16:02:39,879:INFO:              jinja2: 3.1.2
2023-11-24 16:02:39,879:INFO:               scipy: 1.10.1
2023-11-24 16:02:39,879:INFO:              joblib: 1.3.2
2023-11-24 16:02:39,879:INFO:             sklearn: 1.2.2
2023-11-24 16:02:39,879:INFO:                pyod: 1.1.2
2023-11-24 16:02:39,879:INFO:            imblearn: 0.11.0
2023-11-24 16:02:39,879:INFO:   category_encoders: 2.6.3
2023-11-24 16:02:39,879:INFO:            lightgbm: 4.1.0
2023-11-24 16:02:39,879:INFO:               numba: 0.58.1
2023-11-24 16:02:39,879:INFO:            requests: 2.31.0
2023-11-24 16:02:39,879:INFO:          matplotlib: 3.6.0
2023-11-24 16:02:39,879:INFO:          scikitplot: 0.3.7
2023-11-24 16:02:39,879:INFO:         yellowbrick: 1.5
2023-11-24 16:02:39,879:INFO:              plotly: 5.18.0
2023-11-24 16:02:39,879:INFO:    plotly-resampler: Not installed
2023-11-24 16:02:39,879:INFO:             kaleido: 0.2.1
2023-11-24 16:02:39,879:INFO:           schemdraw: 0.15
2023-11-24 16:02:39,879:INFO:         statsmodels: 0.14.0
2023-11-24 16:02:39,879:INFO:              sktime: 0.21.1
2023-11-24 16:02:39,879:INFO:               tbats: 1.1.3
2023-11-24 16:02:39,879:INFO:            pmdarima: 2.0.4
2023-11-24 16:02:39,879:INFO:              psutil: 5.9.6
2023-11-24 16:02:39,879:INFO:          markupsafe: 2.1.3
2023-11-24 16:02:39,879:INFO:             pickle5: Not installed
2023-11-24 16:02:39,879:INFO:         cloudpickle: 3.0.0
2023-11-24 16:02:39,879:INFO:         deprecation: 2.1.0
2023-11-24 16:02:39,879:INFO:              xxhash: 3.4.1
2023-11-24 16:02:39,879:INFO:           wurlitzer: 3.0.3
2023-11-24 16:02:39,879:INFO:PyCaret optional dependencies:
2023-11-24 16:02:39,879:INFO:                shap: Not installed
2023-11-24 16:02:39,879:INFO:           interpret: Not installed
2023-11-24 16:02:39,879:INFO:                umap: Not installed
2023-11-24 16:02:39,879:INFO:     ydata_profiling: 4.6.2
2023-11-24 16:02:39,879:INFO:  explainerdashboard: Not installed
2023-11-24 16:02:39,879:INFO:             autoviz: Not installed
2023-11-24 16:02:39,879:INFO:           fairlearn: Not installed
2023-11-24 16:02:39,879:INFO:          deepchecks: Not installed
2023-11-24 16:02:39,879:INFO:             xgboost: Installed but version unavailable
2023-11-24 16:02:39,879:INFO:            catboost: Not installed
2023-11-24 16:02:39,879:INFO:              kmodes: Not installed
2023-11-24 16:02:39,879:INFO:             mlxtend: Not installed
2023-11-24 16:02:39,879:INFO:       statsforecast: Not installed
2023-11-24 16:02:39,879:INFO:        tune_sklearn: Not installed
2023-11-24 16:02:39,880:INFO:                 ray: Not installed
2023-11-24 16:02:39,880:INFO:            hyperopt: Not installed
2023-11-24 16:02:39,880:INFO:              optuna: Not installed
2023-11-24 16:02:39,880:INFO:               skopt: Not installed
2023-11-24 16:02:39,880:INFO:              mlflow: Not installed
2023-11-24 16:02:39,880:INFO:              gradio: Not installed
2023-11-24 16:02:39,880:INFO:             fastapi: Not installed
2023-11-24 16:02:39,880:INFO:             uvicorn: Not installed
2023-11-24 16:02:39,880:INFO:              m2cgen: Not installed
2023-11-24 16:02:39,880:INFO:           evidently: Not installed
2023-11-24 16:02:39,880:INFO:               fugue: Not installed
2023-11-24 16:02:39,880:INFO:           streamlit: 1.28.2
2023-11-24 16:02:39,880:INFO:             prophet: Not installed
2023-11-24 16:02:39,880:INFO:None
2023-11-24 16:02:39,880:INFO:Set up data.
2023-11-24 16:02:39,905:INFO:Set up folding strategy.
2023-11-24 16:02:39,905:INFO:Set up train/test split.
2023-11-24 16:02:39,909:INFO:Set up index.
2023-11-24 16:02:39,909:INFO:Assigning column types.
2023-11-24 16:02:39,910:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-24 16:02:39,910:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-11-24 16:02:39,911:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-24 16:02:39,913:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-24 16:02:39,935:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 16:02:39,951:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 16:02:39,951:INFO:Soft dependency imported: xgboost: None
2023-11-24 16:03:54,195:INFO:PyCaret RegressionExperiment
2023-11-24 16:03:54,195:INFO:Logging name: reg-default-name
2023-11-24 16:03:54,195:INFO:ML Usecase: MLUsecase.REGRESSION
2023-11-24 16:03:54,195:INFO:version 3.2.0
2023-11-24 16:03:54,195:INFO:Initializing setup()
2023-11-24 16:03:54,195:INFO:self.USI: 5683
2023-11-24 16:03:54,195:INFO:self._variable_keys: {'y_test', 'seed', 'n_jobs_param', 'fold_shuffle_param', 'X_train', 'fold_generator', 'gpu_param', '_available_plots', 'memory', 'exp_name_log', 'logging_param', 'y_train', 'html_param', 'transform_target_param', 'log_plots_param', 'target_param', 'exp_id', '_ml_usecase', 'data', 'gpu_n_jobs_param', 'y', 'pipeline', 'X_test', 'USI', 'X', 'fold_groups_param', 'idx'}
2023-11-24 16:03:54,195:INFO:Checking environment
2023-11-24 16:03:54,195:INFO:python_version: 3.11.5
2023-11-24 16:03:54,195:INFO:python_build: ('main', 'Sep 11 2023 08:31:25')
2023-11-24 16:03:54,195:INFO:machine: arm64
2023-11-24 16:03:54,195:INFO:platform: macOS-14.0-arm64-arm-64bit
2023-11-24 16:03:54,195:INFO:Memory: svmem(total=17179869184, available=5409095680, percent=68.5, used=7471693824, free=31817728, active=5400199168, inactive=5217484800, wired=2071494656)
2023-11-24 16:03:54,195:INFO:Physical Core: 10
2023-11-24 16:03:54,195:INFO:Logical Core: 10
2023-11-24 16:03:54,195:INFO:Checking libraries
2023-11-24 16:03:54,195:INFO:System:
2023-11-24 16:03:54,195:INFO:    python: 3.11.5 (main, Sep 11 2023, 08:31:25) [Clang 14.0.6 ]
2023-11-24 16:03:54,195:INFO:executable: /Users/saiakhil/anaconda3/envs/mlauto/bin/python
2023-11-24 16:03:54,195:INFO:   machine: macOS-14.0-arm64-arm-64bit
2023-11-24 16:03:54,195:INFO:PyCaret required dependencies:
2023-11-24 16:03:54,195:INFO:                 pip: 23.3.1
2023-11-24 16:03:54,195:INFO:          setuptools: 68.0.0
2023-11-24 16:03:54,195:INFO:             pycaret: 3.2.0
2023-11-24 16:03:54,195:INFO:             IPython: 8.18.0
2023-11-24 16:03:54,196:INFO:          ipywidgets: 8.1.1
2023-11-24 16:03:54,196:INFO:                tqdm: 4.66.1
2023-11-24 16:03:54,196:INFO:               numpy: 1.25.2
2023-11-24 16:03:54,196:INFO:              pandas: 1.5.3
2023-11-24 16:03:54,196:INFO:              jinja2: 3.1.2
2023-11-24 16:03:54,196:INFO:               scipy: 1.10.1
2023-11-24 16:03:54,196:INFO:              joblib: 1.3.2
2023-11-24 16:03:54,196:INFO:             sklearn: 1.2.2
2023-11-24 16:03:54,196:INFO:                pyod: 1.1.2
2023-11-24 16:03:54,196:INFO:            imblearn: 0.11.0
2023-11-24 16:03:54,196:INFO:   category_encoders: 2.6.3
2023-11-24 16:03:54,196:INFO:            lightgbm: 4.1.0
2023-11-24 16:03:54,196:INFO:               numba: 0.58.1
2023-11-24 16:03:54,196:INFO:            requests: 2.31.0
2023-11-24 16:03:54,196:INFO:          matplotlib: 3.6.0
2023-11-24 16:03:54,196:INFO:          scikitplot: 0.3.7
2023-11-24 16:03:54,196:INFO:         yellowbrick: 1.5
2023-11-24 16:03:54,196:INFO:              plotly: 5.18.0
2023-11-24 16:03:54,196:INFO:    plotly-resampler: Not installed
2023-11-24 16:03:54,196:INFO:             kaleido: 0.2.1
2023-11-24 16:03:54,196:INFO:           schemdraw: 0.15
2023-11-24 16:03:54,196:INFO:         statsmodels: 0.14.0
2023-11-24 16:03:54,196:INFO:              sktime: 0.21.1
2023-11-24 16:03:54,196:INFO:               tbats: 1.1.3
2023-11-24 16:03:54,196:INFO:            pmdarima: 2.0.4
2023-11-24 16:03:54,196:INFO:              psutil: 5.9.6
2023-11-24 16:03:54,196:INFO:          markupsafe: 2.1.3
2023-11-24 16:03:54,196:INFO:             pickle5: Not installed
2023-11-24 16:03:54,196:INFO:         cloudpickle: 3.0.0
2023-11-24 16:03:54,196:INFO:         deprecation: 2.1.0
2023-11-24 16:03:54,196:INFO:              xxhash: 3.4.1
2023-11-24 16:03:54,196:INFO:           wurlitzer: 3.0.3
2023-11-24 16:03:54,196:INFO:PyCaret optional dependencies:
2023-11-24 16:03:54,196:INFO:                shap: Not installed
2023-11-24 16:03:54,196:INFO:           interpret: Not installed
2023-11-24 16:03:54,196:INFO:                umap: Not installed
2023-11-24 16:03:54,196:INFO:     ydata_profiling: 4.6.2
2023-11-24 16:03:54,196:INFO:  explainerdashboard: Not installed
2023-11-24 16:03:54,196:INFO:             autoviz: Not installed
2023-11-24 16:03:54,196:INFO:           fairlearn: Not installed
2023-11-24 16:03:54,196:INFO:          deepchecks: Not installed
2023-11-24 16:03:54,196:INFO:             xgboost: Installed but version unavailable
2023-11-24 16:03:54,196:INFO:            catboost: Not installed
2023-11-24 16:03:54,196:INFO:              kmodes: Not installed
2023-11-24 16:03:54,196:INFO:             mlxtend: Not installed
2023-11-24 16:03:54,196:INFO:       statsforecast: Not installed
2023-11-24 16:03:54,196:INFO:        tune_sklearn: Not installed
2023-11-24 16:03:54,196:INFO:                 ray: Not installed
2023-11-24 16:03:54,196:INFO:            hyperopt: Not installed
2023-11-24 16:03:54,196:INFO:              optuna: Not installed
2023-11-24 16:03:54,196:INFO:               skopt: Not installed
2023-11-24 16:03:54,196:INFO:              mlflow: Not installed
2023-11-24 16:03:54,196:INFO:              gradio: Not installed
2023-11-24 16:03:54,196:INFO:             fastapi: Not installed
2023-11-24 16:03:54,196:INFO:             uvicorn: Not installed
2023-11-24 16:03:54,196:INFO:              m2cgen: Not installed
2023-11-24 16:03:54,196:INFO:           evidently: Not installed
2023-11-24 16:03:54,196:INFO:               fugue: Not installed
2023-11-24 16:03:54,196:INFO:           streamlit: 1.28.2
2023-11-24 16:03:54,197:INFO:             prophet: Not installed
2023-11-24 16:03:54,197:INFO:None
2023-11-24 16:03:54,197:INFO:Set up data.
2023-11-24 16:03:54,223:INFO:Set up folding strategy.
2023-11-24 16:03:54,223:INFO:Set up train/test split.
2023-11-24 16:03:54,227:INFO:Set up index.
2023-11-24 16:03:54,227:INFO:Assigning column types.
2023-11-24 16:03:54,228:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-24 16:03:54,228:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-11-24 16:03:54,230:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-24 16:03:54,232:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-24 16:03:54,254:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 16:03:54,270:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 16:03:54,270:INFO:Soft dependency imported: xgboost: None
2023-11-24 16:05:48,816:INFO:PyCaret ClassificationExperiment
2023-11-24 16:05:48,817:INFO:Logging name: clf-default-name
2023-11-24 16:05:48,817:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-11-24 16:05:48,817:INFO:version 3.2.0
2023-11-24 16:05:48,817:INFO:Initializing setup()
2023-11-24 16:05:48,817:INFO:self.USI: d06a
2023-11-24 16:05:48,817:INFO:self._variable_keys: {'y_test', 'seed', 'n_jobs_param', 'fold_shuffle_param', 'X_train', 'fold_generator', 'gpu_param', 'is_multiclass', '_available_plots', 'memory', 'exp_name_log', 'logging_param', 'y_train', 'fix_imbalance', 'html_param', 'log_plots_param', 'target_param', 'exp_id', '_ml_usecase', 'data', 'gpu_n_jobs_param', 'y', 'pipeline', 'X_test', 'USI', 'X', 'fold_groups_param', 'idx'}
2023-11-24 16:05:48,817:INFO:Checking environment
2023-11-24 16:05:48,817:INFO:python_version: 3.11.5
2023-11-24 16:05:48,817:INFO:python_build: ('main', 'Sep 11 2023 08:31:25')
2023-11-24 16:05:48,817:INFO:machine: arm64
2023-11-24 16:05:48,817:INFO:platform: macOS-14.0-arm64-arm-64bit
2023-11-24 16:05:48,817:INFO:Memory: svmem(total=17179869184, available=5406998528, percent=68.5, used=7456374784, free=50610176, active=5378129920, inactive=5342642176, wired=2078244864)
2023-11-24 16:05:48,817:INFO:Physical Core: 10
2023-11-24 16:05:48,817:INFO:Logical Core: 10
2023-11-24 16:05:48,817:INFO:Checking libraries
2023-11-24 16:05:48,817:INFO:System:
2023-11-24 16:05:48,817:INFO:    python: 3.11.5 (main, Sep 11 2023, 08:31:25) [Clang 14.0.6 ]
2023-11-24 16:05:48,818:INFO:executable: /Users/saiakhil/anaconda3/envs/mlauto/bin/python
2023-11-24 16:05:48,818:INFO:   machine: macOS-14.0-arm64-arm-64bit
2023-11-24 16:05:48,818:INFO:PyCaret required dependencies:
2023-11-24 16:05:48,818:INFO:                 pip: 23.3.1
2023-11-24 16:05:48,818:INFO:          setuptools: 68.0.0
2023-11-24 16:05:48,818:INFO:             pycaret: 3.2.0
2023-11-24 16:05:48,818:INFO:             IPython: 8.18.0
2023-11-24 16:05:48,818:INFO:          ipywidgets: 8.1.1
2023-11-24 16:05:48,818:INFO:                tqdm: 4.66.1
2023-11-24 16:05:48,818:INFO:               numpy: 1.25.2
2023-11-24 16:05:48,818:INFO:              pandas: 1.5.3
2023-11-24 16:05:48,818:INFO:              jinja2: 3.1.2
2023-11-24 16:05:48,818:INFO:               scipy: 1.10.1
2023-11-24 16:05:48,818:INFO:              joblib: 1.3.2
2023-11-24 16:05:48,818:INFO:             sklearn: 1.2.2
2023-11-24 16:05:48,818:INFO:                pyod: 1.1.2
2023-11-24 16:05:48,818:INFO:            imblearn: 0.11.0
2023-11-24 16:05:48,818:INFO:   category_encoders: 2.6.3
2023-11-24 16:05:48,818:INFO:            lightgbm: 4.1.0
2023-11-24 16:05:48,818:INFO:               numba: 0.58.1
2023-11-24 16:05:48,818:INFO:            requests: 2.31.0
2023-11-24 16:05:48,818:INFO:          matplotlib: 3.6.0
2023-11-24 16:05:48,818:INFO:          scikitplot: 0.3.7
2023-11-24 16:05:48,818:INFO:         yellowbrick: 1.5
2023-11-24 16:05:48,818:INFO:              plotly: 5.18.0
2023-11-24 16:05:48,818:INFO:    plotly-resampler: Not installed
2023-11-24 16:05:48,818:INFO:             kaleido: 0.2.1
2023-11-24 16:05:48,818:INFO:           schemdraw: 0.15
2023-11-24 16:05:48,818:INFO:         statsmodels: 0.14.0
2023-11-24 16:05:48,818:INFO:              sktime: 0.21.1
2023-11-24 16:05:48,818:INFO:               tbats: 1.1.3
2023-11-24 16:05:48,818:INFO:            pmdarima: 2.0.4
2023-11-24 16:05:48,818:INFO:              psutil: 5.9.6
2023-11-24 16:05:48,818:INFO:          markupsafe: 2.1.3
2023-11-24 16:05:48,818:INFO:             pickle5: Not installed
2023-11-24 16:05:48,818:INFO:         cloudpickle: 3.0.0
2023-11-24 16:05:48,818:INFO:         deprecation: 2.1.0
2023-11-24 16:05:48,818:INFO:              xxhash: 3.4.1
2023-11-24 16:05:48,818:INFO:           wurlitzer: 3.0.3
2023-11-24 16:05:48,818:INFO:PyCaret optional dependencies:
2023-11-24 16:05:48,818:INFO:                shap: Not installed
2023-11-24 16:05:48,818:INFO:           interpret: Not installed
2023-11-24 16:05:48,818:INFO:                umap: Not installed
2023-11-24 16:05:48,818:INFO:     ydata_profiling: 4.6.2
2023-11-24 16:05:48,818:INFO:  explainerdashboard: Not installed
2023-11-24 16:05:48,818:INFO:             autoviz: Not installed
2023-11-24 16:05:48,818:INFO:           fairlearn: Not installed
2023-11-24 16:05:48,818:INFO:          deepchecks: Not installed
2023-11-24 16:05:48,818:INFO:             xgboost: Installed but version unavailable
2023-11-24 16:05:48,818:INFO:            catboost: Not installed
2023-11-24 16:05:48,818:INFO:              kmodes: Not installed
2023-11-24 16:05:48,818:INFO:             mlxtend: Not installed
2023-11-24 16:05:48,818:INFO:       statsforecast: Not installed
2023-11-24 16:05:48,818:INFO:        tune_sklearn: Not installed
2023-11-24 16:05:48,818:INFO:                 ray: Not installed
2023-11-24 16:05:48,818:INFO:            hyperopt: Not installed
2023-11-24 16:05:48,818:INFO:              optuna: Not installed
2023-11-24 16:05:48,818:INFO:               skopt: Not installed
2023-11-24 16:05:48,818:INFO:              mlflow: Not installed
2023-11-24 16:05:48,818:INFO:              gradio: Not installed
2023-11-24 16:05:48,818:INFO:             fastapi: Not installed
2023-11-24 16:05:48,818:INFO:             uvicorn: Not installed
2023-11-24 16:05:48,818:INFO:              m2cgen: Not installed
2023-11-24 16:05:48,818:INFO:           evidently: Not installed
2023-11-24 16:05:48,818:INFO:               fugue: Not installed
2023-11-24 16:05:48,818:INFO:           streamlit: 1.28.2
2023-11-24 16:05:48,818:INFO:             prophet: Not installed
2023-11-24 16:05:48,818:INFO:None
2023-11-24 16:05:48,818:INFO:Set up data.
2023-11-24 16:05:48,844:INFO:Set up folding strategy.
2023-11-24 16:05:48,844:INFO:Set up train/test split.
2023-11-24 16:05:48,852:INFO:Set up index.
2023-11-24 16:05:48,852:INFO:Assigning column types.
2023-11-24 16:05:48,853:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-24 16:05:48,870:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 16:05:48,872:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:05:48,885:INFO:Soft dependency imported: xgboost: None
2023-11-24 16:14:36,770:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-24 16:14:36,770:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-24 16:14:36,770:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-24 16:14:36,770:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-24 16:14:44,589:INFO:PyCaret ClassificationExperiment
2023-11-24 16:14:44,589:INFO:Logging name: clf-default-name
2023-11-24 16:14:44,589:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-11-24 16:14:44,589:INFO:version 3.2.0
2023-11-24 16:14:44,589:INFO:Initializing setup()
2023-11-24 16:14:44,589:INFO:self.USI: 4594
2023-11-24 16:14:44,589:INFO:self._variable_keys: {'_available_plots', 'fix_imbalance', 'fold_shuffle_param', 'exp_id', 'y_test', 'y_train', 'n_jobs_param', 'memory', 'log_plots_param', 'html_param', 'gpu_param', '_ml_usecase', 'idx', 'pipeline', 'is_multiclass', 'seed', 'X_test', 'logging_param', 'data', 'fold_generator', 'exp_name_log', 'USI', 'X', 'fold_groups_param', 'X_train', 'y', 'gpu_n_jobs_param', 'target_param'}
2023-11-24 16:14:44,589:INFO:Checking environment
2023-11-24 16:14:44,589:INFO:python_version: 3.11.5
2023-11-24 16:14:44,589:INFO:python_build: ('main', 'Sep 11 2023 08:31:25')
2023-11-24 16:14:44,589:INFO:machine: arm64
2023-11-24 16:14:44,608:INFO:platform: macOS-14.0-arm64-arm-64bit
2023-11-24 16:14:44,608:INFO:Memory: svmem(total=17179869184, available=5684903936, percent=66.9, used=7326711808, free=430292992, active=5267636224, inactive=5084037120, wired=2059075584)
2023-11-24 16:14:44,608:INFO:Physical Core: 10
2023-11-24 16:14:44,608:INFO:Logical Core: 10
2023-11-24 16:14:44,608:INFO:Checking libraries
2023-11-24 16:14:44,608:INFO:System:
2023-11-24 16:14:44,608:INFO:    python: 3.11.5 (main, Sep 11 2023, 08:31:25) [Clang 14.0.6 ]
2023-11-24 16:14:44,608:INFO:executable: /Users/saiakhil/anaconda3/envs/mlauto/bin/python
2023-11-24 16:14:44,608:INFO:   machine: macOS-14.0-arm64-arm-64bit
2023-11-24 16:14:44,608:INFO:PyCaret required dependencies:
2023-11-24 16:14:44,625:INFO:                 pip: 23.3.1
2023-11-24 16:14:44,625:INFO:          setuptools: 68.0.0
2023-11-24 16:14:44,625:INFO:             pycaret: 3.2.0
2023-11-24 16:14:44,625:INFO:             IPython: 8.15.0
2023-11-24 16:14:44,625:INFO:          ipywidgets: 8.1.1
2023-11-24 16:14:44,625:INFO:                tqdm: 4.66.1
2023-11-24 16:14:44,625:INFO:               numpy: 1.25.2
2023-11-24 16:14:44,625:INFO:              pandas: 1.5.3
2023-11-24 16:14:44,625:INFO:              jinja2: 3.1.2
2023-11-24 16:14:44,625:INFO:               scipy: 1.11.3
2023-11-24 16:14:44,625:INFO:              joblib: 1.3.2
2023-11-24 16:14:44,625:INFO:             sklearn: 1.2.2
2023-11-24 16:14:44,625:INFO:                pyod: 1.1.2
2023-11-24 16:14:44,625:INFO:            imblearn: 0.11.0
2023-11-24 16:14:44,625:INFO:   category_encoders: 2.6.3
2023-11-24 16:14:44,625:INFO:            lightgbm: 4.1.0
2023-11-24 16:14:44,625:INFO:               numba: 0.58.1
2023-11-24 16:14:44,625:INFO:            requests: 2.31.0
2023-11-24 16:14:44,625:INFO:          matplotlib: 3.6.0
2023-11-24 16:14:44,625:INFO:          scikitplot: 0.3.7
2023-11-24 16:14:44,625:INFO:         yellowbrick: 1.5
2023-11-24 16:14:44,625:INFO:              plotly: 5.18.0
2023-11-24 16:14:44,625:INFO:    plotly-resampler: Not installed
2023-11-24 16:14:44,625:INFO:             kaleido: 0.2.1
2023-11-24 16:14:44,625:INFO:           schemdraw: 0.15
2023-11-24 16:14:44,625:INFO:         statsmodels: 0.14.0
2023-11-24 16:14:44,625:INFO:              sktime: 0.21.1
2023-11-24 16:14:44,625:INFO:               tbats: 1.1.3
2023-11-24 16:14:44,625:INFO:            pmdarima: 2.0.4
2023-11-24 16:14:44,625:INFO:              psutil: 5.9.6
2023-11-24 16:14:44,625:INFO:          markupsafe: 2.1.3
2023-11-24 16:14:44,625:INFO:             pickle5: Not installed
2023-11-24 16:14:44,625:INFO:         cloudpickle: 3.0.0
2023-11-24 16:14:44,625:INFO:         deprecation: 2.1.0
2023-11-24 16:14:44,625:INFO:              xxhash: 3.4.1
2023-11-24 16:14:44,625:INFO:           wurlitzer: 3.0.3
2023-11-24 16:14:44,625:INFO:PyCaret optional dependencies:
2023-11-24 16:14:44,630:INFO:                shap: Not installed
2023-11-24 16:14:44,630:INFO:           interpret: Not installed
2023-11-24 16:14:44,630:INFO:                umap: Not installed
2023-11-24 16:14:44,630:INFO:     ydata_profiling: 4.6.2
2023-11-24 16:14:44,630:INFO:  explainerdashboard: Not installed
2023-11-24 16:14:44,630:INFO:             autoviz: Not installed
2023-11-24 16:14:44,630:INFO:           fairlearn: Not installed
2023-11-24 16:14:44,630:INFO:          deepchecks: Not installed
2023-11-24 16:14:44,630:INFO:             xgboost: 1.7.3
2023-11-24 16:14:44,630:INFO:            catboost: Not installed
2023-11-24 16:14:44,630:INFO:              kmodes: Not installed
2023-11-24 16:14:44,630:INFO:             mlxtend: Not installed
2023-11-24 16:14:44,630:INFO:       statsforecast: Not installed
2023-11-24 16:14:44,630:INFO:        tune_sklearn: Not installed
2023-11-24 16:14:44,630:INFO:                 ray: Not installed
2023-11-24 16:14:44,630:INFO:            hyperopt: Not installed
2023-11-24 16:14:44,630:INFO:              optuna: Not installed
2023-11-24 16:14:44,630:INFO:               skopt: Not installed
2023-11-24 16:14:44,630:INFO:              mlflow: Not installed
2023-11-24 16:14:44,630:INFO:              gradio: Not installed
2023-11-24 16:14:44,631:INFO:             fastapi: Not installed
2023-11-24 16:14:44,631:INFO:             uvicorn: Not installed
2023-11-24 16:14:44,631:INFO:              m2cgen: Not installed
2023-11-24 16:14:44,631:INFO:           evidently: Not installed
2023-11-24 16:14:44,631:INFO:               fugue: Not installed
2023-11-24 16:14:44,631:INFO:           streamlit: 1.28.2
2023-11-24 16:14:44,631:INFO:             prophet: Not installed
2023-11-24 16:14:44,631:INFO:None
2023-11-24 16:14:44,631:INFO:Set up data.
2023-11-24 16:14:44,658:INFO:Set up folding strategy.
2023-11-24 16:14:44,659:INFO:Set up train/test split.
2023-11-24 16:14:44,667:INFO:Set up index.
2023-11-24 16:14:44,667:INFO:Assigning column types.
2023-11-24 16:14:44,668:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-24 16:14:44,685:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 16:14:44,687:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:14:44,700:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:14:44,713:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:14:44,730:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 16:14:44,730:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:14:44,741:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:14:44,742:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:14:44,742:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-11-24 16:14:44,759:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:14:44,770:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:14:44,771:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:14:44,789:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:14:44,800:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:14:44,801:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:14:44,801:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-11-24 16:14:44,829:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:14:44,830:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:14:44,859:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:14:44,860:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:14:44,862:INFO:Preparing preprocessing pipeline...
2023-11-24 16:14:44,863:INFO:Set up label encoding.
2023-11-24 16:14:44,863:INFO:Set up simple imputation.
2023-11-24 16:14:44,865:INFO:Set up encoding of categorical features.
2023-11-24 16:14:45,238:INFO:Finished creating preprocessing pipeline.
2023-11-24 16:14:45,241:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/46/tcczvndd7xj_pqs5r176bl600000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Number_of_vehicles_involved',
                                             'Number_of_casualties'],
                                    transformer=SimpleImputer(add_i...
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['Time'],
                                    transformer=TargetEncoder(cols=['Time'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2023-11-24 16:14:45,241:INFO:Creating final display dataframe.
2023-11-24 16:14:45,684:INFO:Setup _display_container:                     Description                                              Value
0                    Session id                                               6429
1                        Target                                  Accident_severity
2                   Target type                                         Multiclass
3                Target mapping  Fatal injury: 0, Serious Injury: 1, Slight Inj...
4           Original data shape                                        (12316, 32)
5        Transformed data shape                                       (12316, 207)
6   Transformed train set shape                                        (8621, 207)
7    Transformed test set shape                                        (3695, 207)
8              Numeric features                                                  2
9          Categorical features                                                 29
10     Rows with missing values                                              76.5%
11                   Preprocess                                               True
12              Imputation type                                             simple
13           Numeric imputation                                               mean
14       Categorical imputation                                               mode
15     Maximum one-hot encoding                                                 25
16              Encoding method                                               None
17               Fold Generator                                    StratifiedKFold
18                  Fold Number                                                 10
19                     CPU Jobs                                                 -1
20                      Use GPU                                              False
21               Log Experiment                                              False
22              Experiment Name                                   clf-default-name
23                          USI                                               4594
2023-11-24 16:14:45,713:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:14:45,714:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:14:45,742:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:14:45,743:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:14:45,743:INFO:setup() successfully completed in 1.16s...............
2023-11-24 16:14:45,749:INFO:Initializing compare_models()
2023-11-24 16:14:45,749:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x152c637d0>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x152c637d0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2023-11-24 16:14:45,749:INFO:Checking exceptions
2023-11-24 16:14:45,751:INFO:Preparing display monitor
2023-11-24 16:14:45,762:INFO:Initializing Logistic Regression
2023-11-24 16:14:45,762:INFO:Total runtime is 3.715356190999349e-06 minutes
2023-11-24 16:14:45,762:INFO:SubProcess create_model() called ==================================
2023-11-24 16:14:45,763:INFO:Initializing create_model()
2023-11-24 16:14:45,763:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x152c637d0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x153aa0210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:14:45,763:INFO:Checking exceptions
2023-11-24 16:14:45,763:INFO:Importing libraries
2023-11-24 16:14:45,763:INFO:Copying training dataset
2023-11-24 16:14:45,766:INFO:Defining folds
2023-11-24 16:14:45,766:INFO:Declaring metric variables
2023-11-24 16:14:45,766:INFO:Importing untrained model
2023-11-24 16:14:45,766:INFO:Logistic Regression Imported successfully
2023-11-24 16:14:45,766:INFO:Starting cross validation
2023-11-24 16:14:45,768:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:14:52,204:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:52,207:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:52,210:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:52,216:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:52,225:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:52,227:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:14:52,228:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:52,302:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:52,305:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:52,308:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:52,474:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:52,476:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:52,479:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:52,705:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:52,708:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:52,710:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:52,780:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:52,781:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:52,783:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:52,784:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:52,786:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:52,786:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:52,827:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:52,829:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:52,832:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:52,955:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:52,957:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:52,958:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:14:52,959:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:53,099:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:53,101:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:53,103:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:14:53,104:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:53,108:INFO:Calculating mean and std
2023-11-24 16:14:53,109:INFO:Creating metrics dataframe
2023-11-24 16:14:53,113:INFO:Uploading results into container
2023-11-24 16:14:53,114:INFO:Uploading model into container now
2023-11-24 16:14:53,114:INFO:_master_model_container: 1
2023-11-24 16:14:53,114:INFO:_display_container: 2
2023-11-24 16:14:53,115:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6429, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-11-24 16:14:53,115:INFO:create_model() successfully completed......................................
2023-11-24 16:14:53,205:INFO:SubProcess create_model() end ==================================
2023-11-24 16:14:53,205:INFO:Creating metrics dataframe
2023-11-24 16:14:53,206:INFO:Initializing K Neighbors Classifier
2023-11-24 16:14:53,206:INFO:Total runtime is 0.12406799793243407 minutes
2023-11-24 16:14:53,206:INFO:SubProcess create_model() called ==================================
2023-11-24 16:14:53,206:INFO:Initializing create_model()
2023-11-24 16:14:53,206:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x152c637d0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x153aa0210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:14:53,206:INFO:Checking exceptions
2023-11-24 16:14:53,206:INFO:Importing libraries
2023-11-24 16:14:53,206:INFO:Copying training dataset
2023-11-24 16:14:53,209:INFO:Defining folds
2023-11-24 16:14:53,209:INFO:Declaring metric variables
2023-11-24 16:14:53,209:INFO:Importing untrained model
2023-11-24 16:14:53,209:INFO:K Neighbors Classifier Imported successfully
2023-11-24 16:14:53,209:INFO:Starting cross validation
2023-11-24 16:14:53,210:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:14:54,191:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:54,194:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:54,196:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:54,198:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:14:54,198:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:54,199:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:54,200:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:14:54,201:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:54,209:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:54,212:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:54,214:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:54,214:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:54,215:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:14:54,216:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:54,217:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:54,222:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:54,225:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:54,226:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:14:54,227:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:54,231:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:54,231:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:54,233:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:54,234:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:54,235:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:14:54,236:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:54,236:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:54,237:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:54,239:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:54,242:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:54,256:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:54,258:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:54,260:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:54,289:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:54,291:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:54,293:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:54,297:INFO:Calculating mean and std
2023-11-24 16:14:54,297:INFO:Creating metrics dataframe
2023-11-24 16:14:54,299:INFO:Uploading results into container
2023-11-24 16:14:54,299:INFO:Uploading model into container now
2023-11-24 16:14:54,299:INFO:_master_model_container: 2
2023-11-24 16:14:54,299:INFO:_display_container: 2
2023-11-24 16:14:54,299:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-11-24 16:14:54,299:INFO:create_model() successfully completed......................................
2023-11-24 16:14:54,354:INFO:SubProcess create_model() end ==================================
2023-11-24 16:14:54,354:INFO:Creating metrics dataframe
2023-11-24 16:14:54,356:INFO:Initializing Naive Bayes
2023-11-24 16:14:54,356:INFO:Total runtime is 0.14323278665542602 minutes
2023-11-24 16:14:54,356:INFO:SubProcess create_model() called ==================================
2023-11-24 16:14:54,356:INFO:Initializing create_model()
2023-11-24 16:14:54,356:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x152c637d0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x153aa0210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:14:54,356:INFO:Checking exceptions
2023-11-24 16:14:54,356:INFO:Importing libraries
2023-11-24 16:14:54,356:INFO:Copying training dataset
2023-11-24 16:14:54,359:INFO:Defining folds
2023-11-24 16:14:54,359:INFO:Declaring metric variables
2023-11-24 16:14:54,359:INFO:Importing untrained model
2023-11-24 16:14:54,359:INFO:Naive Bayes Imported successfully
2023-11-24 16:14:54,359:INFO:Starting cross validation
2023-11-24 16:14:54,360:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:14:54,980:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:54,982:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:54,983:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:54,985:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:54,985:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:54,987:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:55,035:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:55,037:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:55,037:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:55,038:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:55,039:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:55,040:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:55,041:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:55,042:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:55,043:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:55,067:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:55,070:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:55,072:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:55,083:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:55,084:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:55,087:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:55,088:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:55,090:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:55,090:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:55,109:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:55,111:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:55,113:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:55,115:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:55,117:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:55,120:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:55,123:INFO:Calculating mean and std
2023-11-24 16:14:55,123:INFO:Creating metrics dataframe
2023-11-24 16:14:55,125:INFO:Uploading results into container
2023-11-24 16:14:55,125:INFO:Uploading model into container now
2023-11-24 16:14:55,125:INFO:_master_model_container: 3
2023-11-24 16:14:55,125:INFO:_display_container: 2
2023-11-24 16:14:55,125:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-11-24 16:14:55,125:INFO:create_model() successfully completed......................................
2023-11-24 16:14:55,174:INFO:SubProcess create_model() end ==================================
2023-11-24 16:14:55,174:INFO:Creating metrics dataframe
2023-11-24 16:14:55,176:INFO:Initializing Decision Tree Classifier
2023-11-24 16:14:55,176:INFO:Total runtime is 0.15689395268758138 minutes
2023-11-24 16:14:55,176:INFO:SubProcess create_model() called ==================================
2023-11-24 16:14:55,176:INFO:Initializing create_model()
2023-11-24 16:14:55,176:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x152c637d0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x153aa0210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:14:55,176:INFO:Checking exceptions
2023-11-24 16:14:55,176:INFO:Importing libraries
2023-11-24 16:14:55,176:INFO:Copying training dataset
2023-11-24 16:14:55,178:INFO:Defining folds
2023-11-24 16:14:55,178:INFO:Declaring metric variables
2023-11-24 16:14:55,178:INFO:Importing untrained model
2023-11-24 16:14:55,178:INFO:Decision Tree Classifier Imported successfully
2023-11-24 16:14:55,179:INFO:Starting cross validation
2023-11-24 16:14:55,179:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:14:55,889:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:55,892:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:55,898:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:55,906:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:55,908:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:55,911:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:55,931:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:55,933:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:55,935:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:55,969:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:55,972:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:55,973:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:55,974:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:55,975:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:55,977:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:55,989:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:55,990:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:55,991:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:55,992:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:55,992:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:55,993:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:55,994:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:55,995:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:55,996:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:56,003:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:56,006:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:56,008:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:56,094:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:56,096:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:56,099:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:56,102:INFO:Calculating mean and std
2023-11-24 16:14:56,102:INFO:Creating metrics dataframe
2023-11-24 16:14:56,104:INFO:Uploading results into container
2023-11-24 16:14:56,104:INFO:Uploading model into container now
2023-11-24 16:14:56,104:INFO:_master_model_container: 4
2023-11-24 16:14:56,104:INFO:_display_container: 2
2023-11-24 16:14:56,104:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6429, splitter='best')
2023-11-24 16:14:56,104:INFO:create_model() successfully completed......................................
2023-11-24 16:14:56,154:INFO:SubProcess create_model() end ==================================
2023-11-24 16:14:56,154:INFO:Creating metrics dataframe
2023-11-24 16:14:56,156:INFO:Initializing SVM - Linear Kernel
2023-11-24 16:14:56,156:INFO:Total runtime is 0.17322468360265098 minutes
2023-11-24 16:14:56,156:INFO:SubProcess create_model() called ==================================
2023-11-24 16:14:56,156:INFO:Initializing create_model()
2023-11-24 16:14:56,156:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x152c637d0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x153aa0210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:14:56,156:INFO:Checking exceptions
2023-11-24 16:14:56,156:INFO:Importing libraries
2023-11-24 16:14:56,156:INFO:Copying training dataset
2023-11-24 16:14:56,158:INFO:Defining folds
2023-11-24 16:14:56,158:INFO:Declaring metric variables
2023-11-24 16:14:56,158:INFO:Importing untrained model
2023-11-24 16:14:56,158:INFO:SVM - Linear Kernel Imported successfully
2023-11-24 16:14:56,158:INFO:Starting cross validation
2023-11-24 16:14:56,159:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:14:57,430:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:14:57,431:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:57,434:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:57,437:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:14:57,439:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:57,624:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:14:57,625:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:57,627:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:57,629:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:57,661:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:14:57,662:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:57,664:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:57,667:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:57,705:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:14:57,706:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:57,708:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:57,711:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:57,719:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:14:57,719:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:14:57,720:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:57,720:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:57,722:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:57,722:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:57,725:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:57,725:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:57,741:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:14:57,742:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:57,744:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:57,745:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:14:57,746:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:57,747:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:57,748:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:57,749:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:14:57,750:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:57,752:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:14:57,753:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:57,755:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:57,756:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:14:57,757:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:57,791:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:14:57,792:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:57,794:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:57,795:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:14:57,796:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:57,799:INFO:Calculating mean and std
2023-11-24 16:14:57,800:INFO:Creating metrics dataframe
2023-11-24 16:14:57,801:INFO:Uploading results into container
2023-11-24 16:14:57,801:INFO:Uploading model into container now
2023-11-24 16:14:57,801:INFO:_master_model_container: 5
2023-11-24 16:14:57,801:INFO:_display_container: 2
2023-11-24 16:14:57,802:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=6429, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-11-24 16:14:57,802:INFO:create_model() successfully completed......................................
2023-11-24 16:14:57,853:INFO:SubProcess create_model() end ==================================
2023-11-24 16:14:57,853:INFO:Creating metrics dataframe
2023-11-24 16:14:57,855:INFO:Initializing Ridge Classifier
2023-11-24 16:14:57,855:INFO:Total runtime is 0.2015400846799215 minutes
2023-11-24 16:14:57,855:INFO:SubProcess create_model() called ==================================
2023-11-24 16:14:57,855:INFO:Initializing create_model()
2023-11-24 16:14:57,855:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x152c637d0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x153aa0210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:14:57,855:INFO:Checking exceptions
2023-11-24 16:14:57,855:INFO:Importing libraries
2023-11-24 16:14:57,855:INFO:Copying training dataset
2023-11-24 16:14:57,857:INFO:Defining folds
2023-11-24 16:14:57,857:INFO:Declaring metric variables
2023-11-24 16:14:57,857:INFO:Importing untrained model
2023-11-24 16:14:57,857:INFO:Ridge Classifier Imported successfully
2023-11-24 16:14:57,857:INFO:Starting cross validation
2023-11-24 16:14:57,859:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:14:58,485:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:14:58,486:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:58,497:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:14:58,498:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:58,499:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:58,500:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:58,500:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:14:58,501:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:58,502:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:14:58,503:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:58,504:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:14:58,506:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:58,507:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:14:58,510:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:58,511:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:14:58,512:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:58,513:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:14:58,514:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:58,516:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:58,516:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:58,517:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:14:58,518:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:58,518:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:58,519:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:14:58,520:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:14:58,520:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:58,521:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:58,522:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:58,523:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:14:58,524:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:58,525:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:14:58,526:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:58,528:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:58,529:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:14:58,530:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:58,534:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:14:58,535:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:58,537:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:58,539:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:14:58,539:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:14:58,539:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:58,540:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:58,542:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:58,543:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:14:58,544:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:58,544:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:14:58,545:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:58,547:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:58,549:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:14:58,550:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:58,554:INFO:Calculating mean and std
2023-11-24 16:14:58,554:INFO:Creating metrics dataframe
2023-11-24 16:14:58,555:INFO:Uploading results into container
2023-11-24 16:14:58,555:INFO:Uploading model into container now
2023-11-24 16:14:58,556:INFO:_master_model_container: 6
2023-11-24 16:14:58,556:INFO:_display_container: 2
2023-11-24 16:14:58,556:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=6429, solver='auto',
                tol=0.0001)
2023-11-24 16:14:58,556:INFO:create_model() successfully completed......................................
2023-11-24 16:14:58,605:INFO:SubProcess create_model() end ==================================
2023-11-24 16:14:58,605:INFO:Creating metrics dataframe
2023-11-24 16:14:58,606:INFO:Initializing Random Forest Classifier
2023-11-24 16:14:58,606:INFO:Total runtime is 0.21406623125076296 minutes
2023-11-24 16:14:58,606:INFO:SubProcess create_model() called ==================================
2023-11-24 16:14:58,606:INFO:Initializing create_model()
2023-11-24 16:14:58,606:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x152c637d0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x153aa0210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:14:58,606:INFO:Checking exceptions
2023-11-24 16:14:58,606:INFO:Importing libraries
2023-11-24 16:14:58,606:INFO:Copying training dataset
2023-11-24 16:14:58,609:INFO:Defining folds
2023-11-24 16:14:58,609:INFO:Declaring metric variables
2023-11-24 16:14:58,609:INFO:Importing untrained model
2023-11-24 16:14:58,609:INFO:Random Forest Classifier Imported successfully
2023-11-24 16:14:58,609:INFO:Starting cross validation
2023-11-24 16:14:58,610:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:14:59,877:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:59,880:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:59,881:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:14:59,882:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:59,885:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:59,887:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:14:59,888:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:14:59,889:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:00,008:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:00,011:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:00,012:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:15:00,013:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:00,119:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:00,122:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:00,124:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:15:00,125:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:00,180:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:00,182:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:00,184:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:00,265:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:00,266:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:00,268:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:00,268:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:00,269:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:00,269:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:15:00,270:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:00,270:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:00,270:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:00,270:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:00,271:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:00,272:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:00,272:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:00,272:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:00,273:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:15:00,273:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:15:00,274:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:00,274:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:00,278:INFO:Calculating mean and std
2023-11-24 16:15:00,278:INFO:Creating metrics dataframe
2023-11-24 16:15:00,280:INFO:Uploading results into container
2023-11-24 16:15:00,280:INFO:Uploading model into container now
2023-11-24 16:15:00,280:INFO:_master_model_container: 7
2023-11-24 16:15:00,280:INFO:_display_container: 2
2023-11-24 16:15:00,280:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=6429, verbose=0, warm_start=False)
2023-11-24 16:15:00,280:INFO:create_model() successfully completed......................................
2023-11-24 16:15:00,330:INFO:SubProcess create_model() end ==================================
2023-11-24 16:15:00,330:INFO:Creating metrics dataframe
2023-11-24 16:15:00,332:INFO:Initializing Quadratic Discriminant Analysis
2023-11-24 16:15:00,332:INFO:Total runtime is 0.24282758633295698 minutes
2023-11-24 16:15:00,332:INFO:SubProcess create_model() called ==================================
2023-11-24 16:15:00,332:INFO:Initializing create_model()
2023-11-24 16:15:00,332:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x152c637d0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x153aa0210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:15:00,332:INFO:Checking exceptions
2023-11-24 16:15:00,332:INFO:Importing libraries
2023-11-24 16:15:00,332:INFO:Copying training dataset
2023-11-24 16:15:00,334:INFO:Defining folds
2023-11-24 16:15:00,334:INFO:Declaring metric variables
2023-11-24 16:15:00,334:INFO:Importing untrained model
2023-11-24 16:15:00,334:INFO:Quadratic Discriminant Analysis Imported successfully
2023-11-24 16:15:00,334:INFO:Starting cross validation
2023-11-24 16:15:00,335:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:15:00,835:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 16:15:00,855:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 16:15:00,903:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 16:15:00,906:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 16:15:00,921:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 16:15:00,950:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 16:15:00,958:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 16:15:00,984:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 16:15:01,006:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 16:15:01,061:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 16:15:01,137:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:01,143:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:01,145:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:01,147:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:15:01,148:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:01,148:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:01,149:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:15:01,150:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:01,157:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:01,162:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:01,163:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:01,164:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:01,165:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:01,166:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:01,166:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:15:01,167:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:15:01,167:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:01,167:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:15:01,168:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:01,170:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:01,188:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:01,190:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:01,192:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:15:01,193:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:01,197:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:01,200:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:01,201:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:15:01,202:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:01,216:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:01,218:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:01,219:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:15:01,220:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:01,224:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:01,226:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:01,228:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:15:01,229:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:01,265:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:01,268:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:01,269:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:15:01,270:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:01,274:INFO:Calculating mean and std
2023-11-24 16:15:01,274:INFO:Creating metrics dataframe
2023-11-24 16:15:01,275:INFO:Uploading results into container
2023-11-24 16:15:01,275:INFO:Uploading model into container now
2023-11-24 16:15:01,275:INFO:_master_model_container: 8
2023-11-24 16:15:01,275:INFO:_display_container: 2
2023-11-24 16:15:01,275:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-11-24 16:15:01,275:INFO:create_model() successfully completed......................................
2023-11-24 16:15:01,324:INFO:SubProcess create_model() end ==================================
2023-11-24 16:15:01,324:INFO:Creating metrics dataframe
2023-11-24 16:15:01,326:INFO:Initializing Ada Boost Classifier
2023-11-24 16:15:01,326:INFO:Total runtime is 0.2593986511230469 minutes
2023-11-24 16:15:01,326:INFO:SubProcess create_model() called ==================================
2023-11-24 16:15:01,326:INFO:Initializing create_model()
2023-11-24 16:15:01,326:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x152c637d0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x153aa0210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:15:01,326:INFO:Checking exceptions
2023-11-24 16:15:01,326:INFO:Importing libraries
2023-11-24 16:15:01,326:INFO:Copying training dataset
2023-11-24 16:15:01,329:INFO:Defining folds
2023-11-24 16:15:01,329:INFO:Declaring metric variables
2023-11-24 16:15:01,329:INFO:Importing untrained model
2023-11-24 16:15:01,329:INFO:Ada Boost Classifier Imported successfully
2023-11-24 16:15:01,329:INFO:Starting cross validation
2023-11-24 16:15:01,330:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:15:02,522:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:02,524:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:02,527:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:02,566:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:02,568:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:02,573:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:02,643:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:02,645:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:02,646:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:02,647:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:02,649:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:02,649:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:02,660:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:02,663:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:02,665:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:02,668:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:02,671:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:02,673:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:02,673:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:02,676:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:02,677:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:02,678:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:02,679:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:02,681:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:02,728:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:02,730:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:02,731:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:02,732:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:02,733:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:02,734:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:02,738:INFO:Calculating mean and std
2023-11-24 16:15:02,738:INFO:Creating metrics dataframe
2023-11-24 16:15:02,739:INFO:Uploading results into container
2023-11-24 16:15:02,739:INFO:Uploading model into container now
2023-11-24 16:15:02,740:INFO:_master_model_container: 9
2023-11-24 16:15:02,740:INFO:_display_container: 2
2023-11-24 16:15:02,740:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=6429)
2023-11-24 16:15:02,740:INFO:create_model() successfully completed......................................
2023-11-24 16:15:02,789:INFO:SubProcess create_model() end ==================================
2023-11-24 16:15:02,790:INFO:Creating metrics dataframe
2023-11-24 16:15:02,791:INFO:Initializing Gradient Boosting Classifier
2023-11-24 16:15:02,791:INFO:Total runtime is 0.28381641705830896 minutes
2023-11-24 16:15:02,791:INFO:SubProcess create_model() called ==================================
2023-11-24 16:15:02,791:INFO:Initializing create_model()
2023-11-24 16:15:02,791:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x152c637d0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x153aa0210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:15:02,791:INFO:Checking exceptions
2023-11-24 16:15:02,791:INFO:Importing libraries
2023-11-24 16:15:02,791:INFO:Copying training dataset
2023-11-24 16:15:02,794:INFO:Defining folds
2023-11-24 16:15:02,794:INFO:Declaring metric variables
2023-11-24 16:15:02,794:INFO:Importing untrained model
2023-11-24 16:15:02,794:INFO:Gradient Boosting Classifier Imported successfully
2023-11-24 16:15:02,794:INFO:Starting cross validation
2023-11-24 16:15:02,795:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:15:10,180:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:10,183:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:10,185:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:10,185:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:10,187:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:10,194:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:10,195:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:10,198:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:10,200:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:10,247:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:10,252:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:10,257:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:10,257:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:10,260:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:10,263:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:10,263:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:10,265:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:10,267:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:10,267:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:10,269:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:10,272:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:10,276:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:10,279:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:10,280:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:10,281:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:10,283:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:10,285:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:10,299:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:10,301:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:10,303:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:10,307:INFO:Calculating mean and std
2023-11-24 16:15:10,307:INFO:Creating metrics dataframe
2023-11-24 16:15:10,308:INFO:Uploading results into container
2023-11-24 16:15:10,308:INFO:Uploading model into container now
2023-11-24 16:15:10,309:INFO:_master_model_container: 10
2023-11-24 16:15:10,309:INFO:_display_container: 2
2023-11-24 16:15:10,309:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=6429, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-11-24 16:15:10,309:INFO:create_model() successfully completed......................................
2023-11-24 16:15:10,362:INFO:SubProcess create_model() end ==================================
2023-11-24 16:15:10,362:INFO:Creating metrics dataframe
2023-11-24 16:15:10,363:INFO:Initializing Linear Discriminant Analysis
2023-11-24 16:15:10,363:INFO:Total runtime is 0.41002173423767097 minutes
2023-11-24 16:15:10,364:INFO:SubProcess create_model() called ==================================
2023-11-24 16:15:10,364:INFO:Initializing create_model()
2023-11-24 16:15:10,364:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x152c637d0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x153aa0210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:15:10,364:INFO:Checking exceptions
2023-11-24 16:15:10,364:INFO:Importing libraries
2023-11-24 16:15:10,364:INFO:Copying training dataset
2023-11-24 16:15:10,366:INFO:Defining folds
2023-11-24 16:15:10,366:INFO:Declaring metric variables
2023-11-24 16:15:10,366:INFO:Importing untrained model
2023-11-24 16:15:10,366:INFO:Linear Discriminant Analysis Imported successfully
2023-11-24 16:15:10,366:INFO:Starting cross validation
2023-11-24 16:15:10,367:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:15:11,133:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:11,135:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:11,143:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:11,156:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:11,157:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:11,159:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:11,161:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:11,162:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:11,165:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:11,166:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:11,167:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:11,170:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:11,180:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:11,181:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:11,182:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:11,184:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:11,185:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:11,185:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:11,186:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:11,188:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:11,190:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:11,190:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:11,192:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:11,194:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:11,209:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:11,211:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:11,212:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:11,213:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:11,214:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:11,215:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:11,218:INFO:Calculating mean and std
2023-11-24 16:15:11,218:INFO:Creating metrics dataframe
2023-11-24 16:15:11,220:INFO:Uploading results into container
2023-11-24 16:15:11,220:INFO:Uploading model into container now
2023-11-24 16:15:11,220:INFO:_master_model_container: 11
2023-11-24 16:15:11,220:INFO:_display_container: 2
2023-11-24 16:15:11,220:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-11-24 16:15:11,220:INFO:create_model() successfully completed......................................
2023-11-24 16:15:11,270:INFO:SubProcess create_model() end ==================================
2023-11-24 16:15:11,271:INFO:Creating metrics dataframe
2023-11-24 16:15:11,272:INFO:Initializing Extra Trees Classifier
2023-11-24 16:15:11,272:INFO:Total runtime is 0.42516618172327686 minutes
2023-11-24 16:15:11,272:INFO:SubProcess create_model() called ==================================
2023-11-24 16:15:11,272:INFO:Initializing create_model()
2023-11-24 16:15:11,272:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x152c637d0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x153aa0210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:15:11,272:INFO:Checking exceptions
2023-11-24 16:15:11,272:INFO:Importing libraries
2023-11-24 16:15:11,272:INFO:Copying training dataset
2023-11-24 16:15:11,275:INFO:Defining folds
2023-11-24 16:15:11,275:INFO:Declaring metric variables
2023-11-24 16:15:11,275:INFO:Importing untrained model
2023-11-24 16:15:11,275:INFO:Extra Trees Classifier Imported successfully
2023-11-24 16:15:11,275:INFO:Starting cross validation
2023-11-24 16:15:11,276:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:15:12,691:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:12,694:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:12,695:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:15:12,696:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:12,909:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:12,911:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:12,913:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:15:12,914:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:12,933:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:12,936:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:12,937:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:15:12,938:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:13,215:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:13,218:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:13,220:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:13,324:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:13,326:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:13,327:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:13,328:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:15:13,329:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:13,329:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:13,330:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:15:13,331:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:13,332:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:13,333:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:13,333:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:13,334:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:13,335:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:13,336:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:15:13,336:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:13,337:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:13,337:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:15:13,337:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:13,338:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:13,338:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:13,341:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:13,343:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:13,347:INFO:Calculating mean and std
2023-11-24 16:15:13,347:INFO:Creating metrics dataframe
2023-11-24 16:15:13,348:INFO:Uploading results into container
2023-11-24 16:15:13,348:INFO:Uploading model into container now
2023-11-24 16:15:13,348:INFO:_master_model_container: 12
2023-11-24 16:15:13,348:INFO:_display_container: 2
2023-11-24 16:15:13,349:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=6429, verbose=0, warm_start=False)
2023-11-24 16:15:13,349:INFO:create_model() successfully completed......................................
2023-11-24 16:15:13,398:INFO:SubProcess create_model() end ==================================
2023-11-24 16:15:13,398:INFO:Creating metrics dataframe
2023-11-24 16:15:13,400:INFO:Initializing Extreme Gradient Boosting
2023-11-24 16:15:13,400:INFO:Total runtime is 0.46062310139338186 minutes
2023-11-24 16:15:13,400:INFO:SubProcess create_model() called ==================================
2023-11-24 16:15:13,400:INFO:Initializing create_model()
2023-11-24 16:15:13,400:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x152c637d0>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x153aa0210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:15:13,400:INFO:Checking exceptions
2023-11-24 16:15:13,400:INFO:Importing libraries
2023-11-24 16:15:13,400:INFO:Copying training dataset
2023-11-24 16:15:13,402:INFO:Defining folds
2023-11-24 16:15:13,402:INFO:Declaring metric variables
2023-11-24 16:15:13,402:INFO:Importing untrained model
2023-11-24 16:15:13,402:INFO:Extreme Gradient Boosting Imported successfully
2023-11-24 16:15:13,402:INFO:Starting cross validation
2023-11-24 16:15:13,403:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:15:30,024:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:30,027:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:30,029:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:30,328:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:30,330:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:30,332:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:30,336:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:30,338:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:30,340:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:30,347:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:30,349:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:30,352:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:30,373:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:30,376:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:30,378:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:30,379:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:30,381:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:30,381:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:30,384:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:30,384:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:30,385:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:30,386:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:30,387:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:30,389:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:30,423:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:30,426:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:30,428:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:30,593:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:30,595:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:30,597:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:30,601:INFO:Calculating mean and std
2023-11-24 16:15:30,601:INFO:Creating metrics dataframe
2023-11-24 16:15:30,602:INFO:Uploading results into container
2023-11-24 16:15:30,602:INFO:Uploading model into container now
2023-11-24 16:15:30,602:INFO:_master_model_container: 13
2023-11-24 16:15:30,602:INFO:_display_container: 2
2023-11-24 16:15:30,603:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', predictor=None, ...)
2023-11-24 16:15:30,603:INFO:create_model() successfully completed......................................
2023-11-24 16:15:30,655:INFO:SubProcess create_model() end ==================================
2023-11-24 16:15:30,655:INFO:Creating metrics dataframe
2023-11-24 16:15:30,656:INFO:Initializing Light Gradient Boosting Machine
2023-11-24 16:15:30,656:INFO:Total runtime is 0.7482370694478354 minutes
2023-11-24 16:15:30,656:INFO:SubProcess create_model() called ==================================
2023-11-24 16:15:30,657:INFO:Initializing create_model()
2023-11-24 16:15:30,657:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x152c637d0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x153aa0210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:15:30,657:INFO:Checking exceptions
2023-11-24 16:15:30,657:INFO:Importing libraries
2023-11-24 16:15:30,657:INFO:Copying training dataset
2023-11-24 16:15:30,659:INFO:Defining folds
2023-11-24 16:15:30,659:INFO:Declaring metric variables
2023-11-24 16:15:30,659:INFO:Importing untrained model
2023-11-24 16:15:30,659:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-24 16:15:30,659:INFO:Starting cross validation
2023-11-24 16:15:30,660:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:15:31,306:WARNING:create_model() for lightgbm raised an exception or returned all 0.0, trying without fit_kwargs:
2023-11-24 16:15:31,309:WARNING:Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/sklearn.py", line 1142, in fit
    super().fit(
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/sklearn.py", line 842, in fit
    self._Booster = train(
                    ^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/engine.py", line 255, in train
    booster = Booster(params=params, train_set=train_set)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 3200, in __init__
    train_set.construct()
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 2276, in construct
    self._lazy_init(data=self.data, label=self.label, reference=None,
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 1959, in _lazy_init
    return self.set_feature_name(feature_name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 2639, in set_feature_name
    _safe_call(_LIB.LGBM_DatasetSetFeatureNames(
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 242, in _safe_call
    raise LightGBMError(_LIB.LGBM_GetLastError().decode('utf-8'))
lightgbm.basic.LightGBMError: Do not support special JSON characters in feature name.


2023-11-24 16:15:31,309:INFO:Initializing create_model()
2023-11-24 16:15:31,309:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x152c637d0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x153aa0210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:15:31,309:INFO:Checking exceptions
2023-11-24 16:15:31,309:INFO:Importing libraries
2023-11-24 16:15:31,309:INFO:Copying training dataset
2023-11-24 16:15:31,312:INFO:Defining folds
2023-11-24 16:15:31,312:INFO:Declaring metric variables
2023-11-24 16:15:31,312:INFO:Importing untrained model
2023-11-24 16:15:31,312:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-24 16:15:31,312:INFO:Starting cross validation
2023-11-24 16:15:31,314:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:15:31,973:ERROR:create_model() for lightgbm raised an exception or returned all 0.0:
2023-11-24 16:15:31,974:ERROR:Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/sklearn.py", line 1142, in fit
    super().fit(
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/sklearn.py", line 842, in fit
    self._Booster = train(
                    ^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/engine.py", line 255, in train
    booster = Booster(params=params, train_set=train_set)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 3200, in __init__
    train_set.construct()
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 2276, in construct
    self._lazy_init(data=self.data, label=self.label, reference=None,
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 1959, in _lazy_init
    return self.set_feature_name(feature_name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 2639, in set_feature_name
    _safe_call(_LIB.LGBM_DatasetSetFeatureNames(
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 242, in _safe_call
    raise LightGBMError(_LIB.LGBM_GetLastError().decode('utf-8'))
lightgbm.basic.LightGBMError: Do not support special JSON characters in feature name.


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/sklearn.py", line 1142, in fit
    super().fit(
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/sklearn.py", line 842, in fit
    self._Booster = train(
                    ^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/engine.py", line 255, in train
    booster = Booster(params=params, train_set=train_set)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 3200, in __init__
    train_set.construct()
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 2276, in construct
    self._lazy_init(data=self.data, label=self.label, reference=None,
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 1959, in _lazy_init
    return self.set_feature_name(feature_name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 2639, in set_feature_name
    _safe_call(_LIB.LGBM_DatasetSetFeatureNames(
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 242, in _safe_call
    raise LightGBMError(_LIB.LGBM_GetLastError().decode('utf-8'))
lightgbm.basic.LightGBMError: Do not support special JSON characters in feature name.


2023-11-24 16:15:31,975:INFO:Initializing Dummy Classifier
2023-11-24 16:15:31,975:INFO:Total runtime is 0.7702108343442282 minutes
2023-11-24 16:15:31,975:INFO:SubProcess create_model() called ==================================
2023-11-24 16:15:31,975:INFO:Initializing create_model()
2023-11-24 16:15:31,975:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x152c637d0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x153aa0210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:15:31,975:INFO:Checking exceptions
2023-11-24 16:15:31,975:INFO:Importing libraries
2023-11-24 16:15:31,975:INFO:Copying training dataset
2023-11-24 16:15:31,978:INFO:Defining folds
2023-11-24 16:15:31,978:INFO:Declaring metric variables
2023-11-24 16:15:31,978:INFO:Importing untrained model
2023-11-24 16:15:31,978:INFO:Dummy Classifier Imported successfully
2023-11-24 16:15:31,978:INFO:Starting cross validation
2023-11-24 16:15:31,979:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:15:32,525:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:32,530:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:32,536:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:15:32,538:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:32,541:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:32,545:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:32,551:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:15:32,553:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:32,566:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:32,575:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:32,579:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:15:32,580:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:32,597:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:32,600:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:32,603:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:15:32,604:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:32,605:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:32,606:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:32,608:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:32,610:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:15:32,611:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:32,611:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:32,611:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:32,613:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:32,614:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:15:32,615:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:15:32,615:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:32,615:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:32,626:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:32,628:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:32,630:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:15:32,631:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:32,655:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:32,657:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:32,657:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:32,658:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:15:32,659:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:32,659:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:32,661:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:15:32,662:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:15:32,666:INFO:Calculating mean and std
2023-11-24 16:15:32,666:INFO:Creating metrics dataframe
2023-11-24 16:15:32,668:INFO:Uploading results into container
2023-11-24 16:15:32,668:INFO:Uploading model into container now
2023-11-24 16:15:32,669:INFO:_master_model_container: 14
2023-11-24 16:15:32,669:INFO:_display_container: 2
2023-11-24 16:15:32,669:INFO:DummyClassifier(constant=None, random_state=6429, strategy='prior')
2023-11-24 16:15:32,669:INFO:create_model() successfully completed......................................
2023-11-24 16:15:32,745:INFO:SubProcess create_model() end ==================================
2023-11-24 16:15:32,745:INFO:Creating metrics dataframe
2023-11-24 16:15:32,748:INFO:Initializing create_model()
2023-11-24 16:15:32,748:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x152c637d0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=6429, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:15:32,748:INFO:Checking exceptions
2023-11-24 16:15:32,748:INFO:Importing libraries
2023-11-24 16:15:32,748:INFO:Copying training dataset
2023-11-24 16:15:32,751:INFO:Defining folds
2023-11-24 16:15:32,751:INFO:Declaring metric variables
2023-11-24 16:15:32,751:INFO:Importing untrained model
2023-11-24 16:15:32,751:INFO:Declaring custom model
2023-11-24 16:15:32,751:INFO:Random Forest Classifier Imported successfully
2023-11-24 16:15:32,752:INFO:Cross validation set to False
2023-11-24 16:15:32,752:INFO:Fitting Model
2023-11-24 16:15:33,235:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=6429, verbose=0, warm_start=False)
2023-11-24 16:15:33,236:INFO:create_model() successfully completed......................................
2023-11-24 16:15:33,294:INFO:_master_model_container: 14
2023-11-24 16:15:33,294:INFO:_display_container: 2
2023-11-24 16:15:33,294:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=6429, verbose=0, warm_start=False)
2023-11-24 16:15:33,294:INFO:compare_models() successfully completed......................................
2023-11-24 16:15:33,299:INFO:Initializing save_model()
2023-11-24 16:15:33,299:INFO:save_model(model=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=6429, verbose=0, warm_start=False), model_name=best_model, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/46/tcczvndd7xj_pqs5r176bl600000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Number_of_vehicles_involved',
                                             'Number_of_casualties'],
                                    transformer=SimpleImputer(add_i...
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['Time'],
                                    transformer=TargetEncoder(cols=['Time'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-11-24 16:15:33,299:INFO:Adding model into prep_pipe
2023-11-24 16:15:33,328:INFO:best_model.pkl saved in current working directory
2023-11-24 16:15:33,331:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Number_of_vehicles_involved',
                                             'Number_of_casualties'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_fea...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        n_estimators=100, n_jobs=-1,
                                        oob_score=False, random_state=6429,
                                        verbose=0, warm_start=False))],
         verbose=False)
2023-11-24 16:15:33,331:INFO:save_model() successfully completed......................................
2023-11-24 16:18:41,940:INFO:PyCaret ClassificationExperiment
2023-11-24 16:18:41,941:INFO:Logging name: clf-default-name
2023-11-24 16:18:41,941:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-11-24 16:18:41,941:INFO:version 3.2.0
2023-11-24 16:18:41,941:INFO:Initializing setup()
2023-11-24 16:18:41,941:INFO:self.USI: acfb
2023-11-24 16:18:41,941:INFO:self._variable_keys: {'_available_plots', 'fix_imbalance', 'fold_shuffle_param', 'exp_id', 'y_test', 'y_train', 'n_jobs_param', 'memory', 'log_plots_param', 'html_param', 'gpu_param', '_ml_usecase', 'idx', 'pipeline', 'is_multiclass', 'seed', 'X_test', 'logging_param', 'data', 'fold_generator', 'exp_name_log', 'USI', 'X', 'fold_groups_param', 'X_train', 'y', 'gpu_n_jobs_param', 'target_param'}
2023-11-24 16:18:41,941:INFO:Checking environment
2023-11-24 16:18:41,941:INFO:python_version: 3.11.5
2023-11-24 16:18:41,941:INFO:python_build: ('main', 'Sep 11 2023 08:31:25')
2023-11-24 16:18:41,941:INFO:machine: arm64
2023-11-24 16:18:41,941:INFO:platform: macOS-14.0-arm64-arm-64bit
2023-11-24 16:18:41,941:INFO:Memory: svmem(total=17179869184, available=4721295360, percent=72.5, used=6791086080, free=53510144, active=4686266368, inactive=4666556416, wired=2104819712)
2023-11-24 16:18:41,941:INFO:Physical Core: 10
2023-11-24 16:18:41,941:INFO:Logical Core: 10
2023-11-24 16:18:41,941:INFO:Checking libraries
2023-11-24 16:18:41,941:INFO:System:
2023-11-24 16:18:41,941:INFO:    python: 3.11.5 (main, Sep 11 2023, 08:31:25) [Clang 14.0.6 ]
2023-11-24 16:18:41,941:INFO:executable: /Users/saiakhil/anaconda3/envs/mlauto/bin/python
2023-11-24 16:18:41,941:INFO:   machine: macOS-14.0-arm64-arm-64bit
2023-11-24 16:18:41,941:INFO:PyCaret required dependencies:
2023-11-24 16:18:41,941:INFO:                 pip: 23.3.1
2023-11-24 16:18:41,942:INFO:          setuptools: 68.0.0
2023-11-24 16:18:41,942:INFO:             pycaret: 3.2.0
2023-11-24 16:18:41,942:INFO:             IPython: 8.15.0
2023-11-24 16:18:41,942:INFO:          ipywidgets: 8.1.1
2023-11-24 16:18:41,942:INFO:                tqdm: 4.66.1
2023-11-24 16:18:41,942:INFO:               numpy: 1.25.2
2023-11-24 16:18:41,942:INFO:              pandas: 1.5.3
2023-11-24 16:18:41,942:INFO:              jinja2: 3.1.2
2023-11-24 16:18:41,942:INFO:               scipy: 1.11.3
2023-11-24 16:18:41,942:INFO:              joblib: 1.3.2
2023-11-24 16:18:41,942:INFO:             sklearn: 1.2.2
2023-11-24 16:18:41,942:INFO:                pyod: 1.1.2
2023-11-24 16:18:41,942:INFO:            imblearn: 0.11.0
2023-11-24 16:18:41,942:INFO:   category_encoders: 2.6.3
2023-11-24 16:18:41,942:INFO:            lightgbm: 4.1.0
2023-11-24 16:18:41,942:INFO:               numba: 0.58.1
2023-11-24 16:18:41,942:INFO:            requests: 2.31.0
2023-11-24 16:18:41,942:INFO:          matplotlib: 3.6.0
2023-11-24 16:18:41,942:INFO:          scikitplot: 0.3.7
2023-11-24 16:18:41,942:INFO:         yellowbrick: 1.5
2023-11-24 16:18:41,942:INFO:              plotly: 5.18.0
2023-11-24 16:18:41,942:INFO:    plotly-resampler: Not installed
2023-11-24 16:18:41,942:INFO:             kaleido: 0.2.1
2023-11-24 16:18:41,942:INFO:           schemdraw: 0.15
2023-11-24 16:18:41,942:INFO:         statsmodels: 0.14.0
2023-11-24 16:18:41,942:INFO:              sktime: 0.21.1
2023-11-24 16:18:41,942:INFO:               tbats: 1.1.3
2023-11-24 16:18:41,942:INFO:            pmdarima: 2.0.4
2023-11-24 16:18:41,942:INFO:              psutil: 5.9.6
2023-11-24 16:18:41,942:INFO:          markupsafe: 2.1.3
2023-11-24 16:18:41,942:INFO:             pickle5: Not installed
2023-11-24 16:18:41,942:INFO:         cloudpickle: 3.0.0
2023-11-24 16:18:41,942:INFO:         deprecation: 2.1.0
2023-11-24 16:18:41,942:INFO:              xxhash: 3.4.1
2023-11-24 16:18:41,942:INFO:           wurlitzer: 3.0.3
2023-11-24 16:18:41,942:INFO:PyCaret optional dependencies:
2023-11-24 16:18:41,942:INFO:                shap: Not installed
2023-11-24 16:18:41,942:INFO:           interpret: Not installed
2023-11-24 16:18:41,942:INFO:                umap: Not installed
2023-11-24 16:18:41,942:INFO:     ydata_profiling: 4.6.2
2023-11-24 16:18:41,942:INFO:  explainerdashboard: Not installed
2023-11-24 16:18:41,942:INFO:             autoviz: Not installed
2023-11-24 16:18:41,942:INFO:           fairlearn: Not installed
2023-11-24 16:18:41,942:INFO:          deepchecks: Not installed
2023-11-24 16:18:41,942:INFO:             xgboost: 1.7.3
2023-11-24 16:18:41,942:INFO:            catboost: Not installed
2023-11-24 16:18:41,942:INFO:              kmodes: Not installed
2023-11-24 16:18:41,942:INFO:             mlxtend: Not installed
2023-11-24 16:18:41,942:INFO:       statsforecast: Not installed
2023-11-24 16:18:41,942:INFO:        tune_sklearn: Not installed
2023-11-24 16:18:41,942:INFO:                 ray: Not installed
2023-11-24 16:18:41,942:INFO:            hyperopt: Not installed
2023-11-24 16:18:41,942:INFO:              optuna: Not installed
2023-11-24 16:18:41,942:INFO:               skopt: Not installed
2023-11-24 16:18:41,942:INFO:              mlflow: Not installed
2023-11-24 16:18:41,942:INFO:              gradio: Not installed
2023-11-24 16:18:41,942:INFO:             fastapi: Not installed
2023-11-24 16:18:41,942:INFO:             uvicorn: Not installed
2023-11-24 16:18:41,942:INFO:              m2cgen: Not installed
2023-11-24 16:18:41,942:INFO:           evidently: Not installed
2023-11-24 16:18:41,942:INFO:               fugue: Not installed
2023-11-24 16:18:41,942:INFO:           streamlit: 1.28.2
2023-11-24 16:18:41,942:INFO:             prophet: Not installed
2023-11-24 16:18:41,942:INFO:None
2023-11-24 16:18:41,942:INFO:Set up data.
2023-11-24 16:18:41,969:INFO:Set up folding strategy.
2023-11-24 16:18:41,969:INFO:Set up train/test split.
2023-11-24 16:18:41,979:INFO:Set up index.
2023-11-24 16:18:41,979:INFO:Assigning column types.
2023-11-24 16:18:41,980:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-24 16:18:41,998:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 16:18:41,999:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:18:42,010:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:18:42,011:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:18:42,029:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 16:18:42,029:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:18:42,040:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:18:42,041:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:18:42,041:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-11-24 16:18:42,059:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:18:42,069:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:18:42,070:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:18:42,088:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:18:42,099:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:18:42,100:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:18:42,100:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-11-24 16:18:42,129:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:18:42,130:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:18:42,159:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:18:42,160:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:18:42,161:INFO:Preparing preprocessing pipeline...
2023-11-24 16:18:42,161:INFO:Set up label encoding.
2023-11-24 16:18:42,161:INFO:Set up simple imputation.
2023-11-24 16:18:42,165:INFO:Set up encoding of categorical features.
2023-11-24 16:18:42,626:INFO:Finished creating preprocessing pipeline.
2023-11-24 16:18:42,629:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/46/tcczvndd7xj_pqs5r176bl600000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Number_of_vehicles_involved',
                                             'Number_of_casualties'],
                                    transformer=SimpleImputer(add_i...
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['Time'],
                                    transformer=TargetEncoder(cols=['Time'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2023-11-24 16:18:42,629:INFO:Creating final display dataframe.
2023-11-24 16:18:42,992:INFO:Setup _display_container:                     Description                                              Value
0                    Session id                                               1556
1                        Target                                  Accident_severity
2                   Target type                                         Multiclass
3                Target mapping  Fatal injury: 0, Serious Injury: 1, Slight Inj...
4           Original data shape                                        (12316, 32)
5        Transformed data shape                                       (12316, 208)
6   Transformed train set shape                                        (8621, 208)
7    Transformed test set shape                                        (3695, 208)
8              Numeric features                                                  2
9          Categorical features                                                 29
10     Rows with missing values                                              76.5%
11                   Preprocess                                               True
12              Imputation type                                             simple
13           Numeric imputation                                               mean
14       Categorical imputation                                               mode
15     Maximum one-hot encoding                                                 25
16              Encoding method                                               None
17               Fold Generator                                    StratifiedKFold
18                  Fold Number                                                 10
19                     CPU Jobs                                                 -1
20                      Use GPU                                              False
21               Log Experiment                                              False
22              Experiment Name                                   clf-default-name
23                          USI                                               acfb
2023-11-24 16:18:43,021:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:18:43,022:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:18:43,049:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:18:43,050:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:18:43,051:INFO:setup() successfully completed in 1.11s...............
2023-11-24 16:18:43,104:INFO:Initializing compare_models()
2023-11-24 16:18:43,104:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x14780ebd0>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x14780ebd0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2023-11-24 16:18:43,104:INFO:Checking exceptions
2023-11-24 16:18:43,106:INFO:Preparing display monitor
2023-11-24 16:18:43,107:INFO:Initializing Logistic Regression
2023-11-24 16:18:43,107:INFO:Total runtime is 5.642573038736979e-07 minutes
2023-11-24 16:18:43,107:INFO:SubProcess create_model() called ==================================
2023-11-24 16:18:43,108:INFO:Initializing create_model()
2023-11-24 16:18:43,108:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x14780ebd0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x153a8ccd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:18:43,108:INFO:Checking exceptions
2023-11-24 16:18:43,108:INFO:Importing libraries
2023-11-24 16:18:43,108:INFO:Copying training dataset
2023-11-24 16:18:43,110:INFO:Defining folds
2023-11-24 16:18:43,110:INFO:Declaring metric variables
2023-11-24 16:18:43,110:INFO:Importing untrained model
2023-11-24 16:18:43,110:INFO:Logistic Regression Imported successfully
2023-11-24 16:18:43,110:INFO:Starting cross validation
2023-11-24 16:18:43,112:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:18:48,031:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:48,037:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:48,040:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:48,072:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:48,075:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:48,077:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:48,081:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:48,084:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:48,085:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:18:48,086:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:48,135:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:48,138:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:48,140:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:48,198:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:48,201:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:48,203:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:18:48,204:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:48,230:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:48,233:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:48,236:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:48,342:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:48,345:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:48,347:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:48,585:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:48,587:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:48,588:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:18:48,589:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:48,605:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:48,608:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:48,610:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:48,705:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:48,707:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:48,709:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:48,715:INFO:Calculating mean and std
2023-11-24 16:18:48,716:INFO:Creating metrics dataframe
2023-11-24 16:18:48,718:INFO:Uploading results into container
2023-11-24 16:18:48,719:INFO:Uploading model into container now
2023-11-24 16:18:48,719:INFO:_master_model_container: 1
2023-11-24 16:18:48,719:INFO:_display_container: 2
2023-11-24 16:18:48,719:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1556, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-11-24 16:18:48,719:INFO:create_model() successfully completed......................................
2023-11-24 16:18:48,811:INFO:SubProcess create_model() end ==================================
2023-11-24 16:18:48,811:INFO:Creating metrics dataframe
2023-11-24 16:18:48,813:INFO:Initializing K Neighbors Classifier
2023-11-24 16:18:48,813:INFO:Total runtime is 0.09509174823760985 minutes
2023-11-24 16:18:48,813:INFO:SubProcess create_model() called ==================================
2023-11-24 16:18:48,813:INFO:Initializing create_model()
2023-11-24 16:18:48,813:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x14780ebd0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x153a8ccd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:18:48,813:INFO:Checking exceptions
2023-11-24 16:18:48,813:INFO:Importing libraries
2023-11-24 16:18:48,813:INFO:Copying training dataset
2023-11-24 16:18:48,815:INFO:Defining folds
2023-11-24 16:18:48,815:INFO:Declaring metric variables
2023-11-24 16:18:48,815:INFO:Importing untrained model
2023-11-24 16:18:48,816:INFO:K Neighbors Classifier Imported successfully
2023-11-24 16:18:48,816:INFO:Starting cross validation
2023-11-24 16:18:48,817:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:18:49,772:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:49,774:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:49,776:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:49,778:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:49,780:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:49,786:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:49,790:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:49,792:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:49,795:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:49,795:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:49,796:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:18:49,796:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:49,797:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:49,798:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:18:49,798:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:49,799:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:49,799:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:49,801:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:49,801:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:49,803:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:49,826:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:49,828:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:49,829:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:49,830:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:49,831:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:49,832:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:18:49,833:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:49,852:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:49,854:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:49,855:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:49,856:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:49,857:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:49,859:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:49,864:INFO:Calculating mean and std
2023-11-24 16:18:49,864:INFO:Creating metrics dataframe
2023-11-24 16:18:49,865:INFO:Uploading results into container
2023-11-24 16:18:49,865:INFO:Uploading model into container now
2023-11-24 16:18:49,865:INFO:_master_model_container: 2
2023-11-24 16:18:49,865:INFO:_display_container: 2
2023-11-24 16:18:49,866:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-11-24 16:18:49,866:INFO:create_model() successfully completed......................................
2023-11-24 16:18:49,917:INFO:SubProcess create_model() end ==================================
2023-11-24 16:18:49,917:INFO:Creating metrics dataframe
2023-11-24 16:18:49,919:INFO:Initializing Naive Bayes
2023-11-24 16:18:49,919:INFO:Total runtime is 0.11352834701538085 minutes
2023-11-24 16:18:49,919:INFO:SubProcess create_model() called ==================================
2023-11-24 16:18:49,919:INFO:Initializing create_model()
2023-11-24 16:18:49,919:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x14780ebd0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x153a8ccd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:18:49,919:INFO:Checking exceptions
2023-11-24 16:18:49,919:INFO:Importing libraries
2023-11-24 16:18:49,919:INFO:Copying training dataset
2023-11-24 16:18:49,922:INFO:Defining folds
2023-11-24 16:18:49,922:INFO:Declaring metric variables
2023-11-24 16:18:49,922:INFO:Importing untrained model
2023-11-24 16:18:49,922:INFO:Naive Bayes Imported successfully
2023-11-24 16:18:49,922:INFO:Starting cross validation
2023-11-24 16:18:49,923:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:18:50,603:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:50,603:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:50,606:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:50,606:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:50,608:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:50,608:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:50,611:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:50,613:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:50,622:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:50,625:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:50,625:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:50,627:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:50,653:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:50,654:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:50,655:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:50,657:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:50,658:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:50,659:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:50,668:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:50,671:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:50,673:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:50,679:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:50,682:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:50,684:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:50,688:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:50,688:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:50,691:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:50,691:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:50,693:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:50,693:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:50,697:INFO:Calculating mean and std
2023-11-24 16:18:50,697:INFO:Creating metrics dataframe
2023-11-24 16:18:50,699:INFO:Uploading results into container
2023-11-24 16:18:50,699:INFO:Uploading model into container now
2023-11-24 16:18:50,699:INFO:_master_model_container: 3
2023-11-24 16:18:50,699:INFO:_display_container: 2
2023-11-24 16:18:50,699:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-11-24 16:18:50,699:INFO:create_model() successfully completed......................................
2023-11-24 16:18:50,751:INFO:SubProcess create_model() end ==================================
2023-11-24 16:18:50,751:INFO:Creating metrics dataframe
2023-11-24 16:18:50,752:INFO:Initializing Decision Tree Classifier
2023-11-24 16:18:50,752:INFO:Total runtime is 0.12741658290227253 minutes
2023-11-24 16:18:50,752:INFO:SubProcess create_model() called ==================================
2023-11-24 16:18:50,752:INFO:Initializing create_model()
2023-11-24 16:18:50,752:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x14780ebd0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x153a8ccd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:18:50,752:INFO:Checking exceptions
2023-11-24 16:18:50,753:INFO:Importing libraries
2023-11-24 16:18:50,753:INFO:Copying training dataset
2023-11-24 16:18:50,755:INFO:Defining folds
2023-11-24 16:18:50,755:INFO:Declaring metric variables
2023-11-24 16:18:50,755:INFO:Importing untrained model
2023-11-24 16:18:50,755:INFO:Decision Tree Classifier Imported successfully
2023-11-24 16:18:50,755:INFO:Starting cross validation
2023-11-24 16:18:50,756:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:18:51,463:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:51,465:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:51,467:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:51,529:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:51,531:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:51,534:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:51,564:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:51,566:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:51,567:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:51,569:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:51,570:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:51,571:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:51,581:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:51,584:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:51,585:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:51,587:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:51,587:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:51,587:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:51,588:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:51,589:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:51,589:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:51,590:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:51,590:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:51,590:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:51,591:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:51,592:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:51,593:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:51,613:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:51,616:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:51,618:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:51,622:INFO:Calculating mean and std
2023-11-24 16:18:51,622:INFO:Creating metrics dataframe
2023-11-24 16:18:51,624:INFO:Uploading results into container
2023-11-24 16:18:51,624:INFO:Uploading model into container now
2023-11-24 16:18:51,624:INFO:_master_model_container: 4
2023-11-24 16:18:51,624:INFO:_display_container: 2
2023-11-24 16:18:51,624:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1556, splitter='best')
2023-11-24 16:18:51,624:INFO:create_model() successfully completed......................................
2023-11-24 16:18:51,675:INFO:SubProcess create_model() end ==================================
2023-11-24 16:18:51,675:INFO:Creating metrics dataframe
2023-11-24 16:18:51,677:INFO:Initializing SVM - Linear Kernel
2023-11-24 16:18:51,677:INFO:Total runtime is 0.14282323519388834 minutes
2023-11-24 16:18:51,677:INFO:SubProcess create_model() called ==================================
2023-11-24 16:18:51,677:INFO:Initializing create_model()
2023-11-24 16:18:51,677:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x14780ebd0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x153a8ccd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:18:51,677:INFO:Checking exceptions
2023-11-24 16:18:51,677:INFO:Importing libraries
2023-11-24 16:18:51,677:INFO:Copying training dataset
2023-11-24 16:18:51,679:INFO:Defining folds
2023-11-24 16:18:51,679:INFO:Declaring metric variables
2023-11-24 16:18:51,679:INFO:Importing untrained model
2023-11-24 16:18:51,679:INFO:SVM - Linear Kernel Imported successfully
2023-11-24 16:18:51,679:INFO:Starting cross validation
2023-11-24 16:18:51,680:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:18:52,740:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:18:52,741:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:52,743:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:52,746:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:53,074:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:18:53,075:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:53,077:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:18:53,078:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:53,078:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:53,079:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:18:53,080:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:53,081:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:53,082:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:18:53,083:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:53,137:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:18:53,138:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:53,141:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:53,143:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:53,170:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:18:53,171:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:53,172:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:18:53,173:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:53,173:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:53,176:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:53,176:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:53,177:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:18:53,177:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:18:53,178:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:53,178:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:53,180:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:53,181:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:18:53,182:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:53,191:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:18:53,192:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:53,194:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:53,196:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:18:53,197:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:53,199:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:18:53,200:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:53,202:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:53,203:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:18:53,204:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:53,242:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:18:53,243:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:53,245:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:53,246:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:18:53,247:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:53,251:INFO:Calculating mean and std
2023-11-24 16:18:53,251:INFO:Creating metrics dataframe
2023-11-24 16:18:53,252:INFO:Uploading results into container
2023-11-24 16:18:53,252:INFO:Uploading model into container now
2023-11-24 16:18:53,253:INFO:_master_model_container: 5
2023-11-24 16:18:53,253:INFO:_display_container: 2
2023-11-24 16:18:53,253:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=1556, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-11-24 16:18:53,253:INFO:create_model() successfully completed......................................
2023-11-24 16:18:53,304:INFO:SubProcess create_model() end ==================================
2023-11-24 16:18:53,304:INFO:Creating metrics dataframe
2023-11-24 16:18:53,306:INFO:Initializing Ridge Classifier
2023-11-24 16:18:53,306:INFO:Total runtime is 0.16997393369674682 minutes
2023-11-24 16:18:53,306:INFO:SubProcess create_model() called ==================================
2023-11-24 16:18:53,306:INFO:Initializing create_model()
2023-11-24 16:18:53,306:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x14780ebd0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x153a8ccd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:18:53,306:INFO:Checking exceptions
2023-11-24 16:18:53,306:INFO:Importing libraries
2023-11-24 16:18:53,306:INFO:Copying training dataset
2023-11-24 16:18:53,308:INFO:Defining folds
2023-11-24 16:18:53,308:INFO:Declaring metric variables
2023-11-24 16:18:53,309:INFO:Importing untrained model
2023-11-24 16:18:53,309:INFO:Ridge Classifier Imported successfully
2023-11-24 16:18:53,309:INFO:Starting cross validation
2023-11-24 16:18:53,310:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:18:53,904:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:18:53,906:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:53,912:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:53,914:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:18:53,915:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:53,961:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:18:53,962:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:53,965:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:53,966:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:18:53,967:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:53,998:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:18:53,999:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:54,001:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:54,002:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:18:54,003:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:54,026:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:18:54,027:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:54,029:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:18:54,030:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:54,030:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:54,031:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:18:54,032:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:54,032:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:54,033:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:18:54,034:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:54,035:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:18:54,036:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:54,038:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:54,038:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:18:54,039:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:54,039:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:18:54,040:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:54,042:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:54,043:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:18:54,043:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:18:54,044:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:54,044:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:54,046:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:54,048:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:18:54,049:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:54,053:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:18:54,054:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:54,057:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:54,057:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:18:54,058:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:18:54,058:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:54,059:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:54,061:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:54,062:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:18:54,063:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:54,067:INFO:Calculating mean and std
2023-11-24 16:18:54,068:INFO:Creating metrics dataframe
2023-11-24 16:18:54,069:INFO:Uploading results into container
2023-11-24 16:18:54,069:INFO:Uploading model into container now
2023-11-24 16:18:54,069:INFO:_master_model_container: 6
2023-11-24 16:18:54,069:INFO:_display_container: 2
2023-11-24 16:18:54,069:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=1556, solver='auto',
                tol=0.0001)
2023-11-24 16:18:54,069:INFO:create_model() successfully completed......................................
2023-11-24 16:18:54,122:INFO:SubProcess create_model() end ==================================
2023-11-24 16:18:54,122:INFO:Creating metrics dataframe
2023-11-24 16:18:54,124:INFO:Initializing Random Forest Classifier
2023-11-24 16:18:54,124:INFO:Total runtime is 0.18360920349756876 minutes
2023-11-24 16:18:54,124:INFO:SubProcess create_model() called ==================================
2023-11-24 16:18:54,124:INFO:Initializing create_model()
2023-11-24 16:18:54,124:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x14780ebd0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x153a8ccd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:18:54,124:INFO:Checking exceptions
2023-11-24 16:18:54,124:INFO:Importing libraries
2023-11-24 16:18:54,124:INFO:Copying training dataset
2023-11-24 16:18:54,126:INFO:Defining folds
2023-11-24 16:18:54,126:INFO:Declaring metric variables
2023-11-24 16:18:54,126:INFO:Importing untrained model
2023-11-24 16:18:54,127:INFO:Random Forest Classifier Imported successfully
2023-11-24 16:18:54,127:INFO:Starting cross validation
2023-11-24 16:18:54,128:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:18:55,394:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:55,397:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:55,398:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:18:55,399:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:55,509:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:55,512:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:55,514:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:18:55,517:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:55,874:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:55,876:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:55,878:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:18:55,879:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:55,905:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:55,908:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:55,910:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:18:55,910:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:55,911:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:55,914:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:55,915:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:18:55,916:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:55,931:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:55,932:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:55,934:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:55,934:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:55,935:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:55,935:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:55,936:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:18:55,936:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:18:55,936:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:55,937:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:55,937:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:55,937:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:55,938:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:18:55,938:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:18:55,939:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:55,939:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:55,942:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:55,946:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:55,947:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:18:55,948:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:55,952:INFO:Calculating mean and std
2023-11-24 16:18:55,952:INFO:Creating metrics dataframe
2023-11-24 16:18:55,953:INFO:Uploading results into container
2023-11-24 16:18:55,954:INFO:Uploading model into container now
2023-11-24 16:18:55,954:INFO:_master_model_container: 7
2023-11-24 16:18:55,954:INFO:_display_container: 2
2023-11-24 16:18:55,954:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=1556, verbose=0, warm_start=False)
2023-11-24 16:18:55,954:INFO:create_model() successfully completed......................................
2023-11-24 16:18:56,005:INFO:SubProcess create_model() end ==================================
2023-11-24 16:18:56,006:INFO:Creating metrics dataframe
2023-11-24 16:18:56,007:INFO:Initializing Quadratic Discriminant Analysis
2023-11-24 16:18:56,008:INFO:Total runtime is 0.21500326792399088 minutes
2023-11-24 16:18:56,008:INFO:SubProcess create_model() called ==================================
2023-11-24 16:18:56,008:INFO:Initializing create_model()
2023-11-24 16:18:56,008:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x14780ebd0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x153a8ccd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:18:56,008:INFO:Checking exceptions
2023-11-24 16:18:56,008:INFO:Importing libraries
2023-11-24 16:18:56,008:INFO:Copying training dataset
2023-11-24 16:18:56,010:INFO:Defining folds
2023-11-24 16:18:56,010:INFO:Declaring metric variables
2023-11-24 16:18:56,010:INFO:Importing untrained model
2023-11-24 16:18:56,010:INFO:Quadratic Discriminant Analysis Imported successfully
2023-11-24 16:18:56,010:INFO:Starting cross validation
2023-11-24 16:18:56,011:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:18:56,529:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 16:18:56,554:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 16:18:56,556:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 16:18:56,563:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 16:18:56,577:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 16:18:56,597:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 16:18:56,624:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 16:18:56,661:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 16:18:56,724:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 16:18:56,744:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 16:18:56,830:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:56,834:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:56,835:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:18:56,836:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:56,843:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:56,846:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:56,846:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:56,847:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:18:56,848:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:56,848:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:56,850:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:18:56,851:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:56,857:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:56,859:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:56,860:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:56,860:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:18:56,861:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:56,863:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:56,864:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:18:56,865:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:56,880:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:56,883:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:56,884:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:56,885:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:56,887:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:56,888:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:18:56,889:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:56,910:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:56,913:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:56,914:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:18:56,915:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:56,933:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:56,936:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:56,937:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:18:56,938:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:56,953:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:56,956:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:56,957:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:18:56,958:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:56,962:INFO:Calculating mean and std
2023-11-24 16:18:56,963:INFO:Creating metrics dataframe
2023-11-24 16:18:56,964:INFO:Uploading results into container
2023-11-24 16:18:56,964:INFO:Uploading model into container now
2023-11-24 16:18:56,964:INFO:_master_model_container: 8
2023-11-24 16:18:56,964:INFO:_display_container: 2
2023-11-24 16:18:56,964:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-11-24 16:18:56,965:INFO:create_model() successfully completed......................................
2023-11-24 16:18:57,018:INFO:SubProcess create_model() end ==================================
2023-11-24 16:18:57,018:INFO:Creating metrics dataframe
2023-11-24 16:18:57,020:INFO:Initializing Ada Boost Classifier
2023-11-24 16:18:57,020:INFO:Total runtime is 0.23187199831008912 minutes
2023-11-24 16:18:57,020:INFO:SubProcess create_model() called ==================================
2023-11-24 16:18:57,020:INFO:Initializing create_model()
2023-11-24 16:18:57,020:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x14780ebd0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x153a8ccd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:18:57,020:INFO:Checking exceptions
2023-11-24 16:18:57,020:INFO:Importing libraries
2023-11-24 16:18:57,020:INFO:Copying training dataset
2023-11-24 16:18:57,022:INFO:Defining folds
2023-11-24 16:18:57,022:INFO:Declaring metric variables
2023-11-24 16:18:57,022:INFO:Importing untrained model
2023-11-24 16:18:57,022:INFO:Ada Boost Classifier Imported successfully
2023-11-24 16:18:57,023:INFO:Starting cross validation
2023-11-24 16:18:57,024:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:18:58,391:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:58,394:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:58,396:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:58,399:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:58,401:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:58,404:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:58,404:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:58,407:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:58,409:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:58,440:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:58,442:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:58,444:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:58,444:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:58,446:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:58,450:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:58,454:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:58,455:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:58,457:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:58,457:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:58,459:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:58,459:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:58,459:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:58,461:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:58,463:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:58,484:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:58,486:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:58,488:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:58,498:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:58,501:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:58,503:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:18:58,507:INFO:Calculating mean and std
2023-11-24 16:18:58,507:INFO:Creating metrics dataframe
2023-11-24 16:18:58,508:INFO:Uploading results into container
2023-11-24 16:18:58,508:INFO:Uploading model into container now
2023-11-24 16:18:58,508:INFO:_master_model_container: 9
2023-11-24 16:18:58,508:INFO:_display_container: 2
2023-11-24 16:18:58,509:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=1556)
2023-11-24 16:18:58,509:INFO:create_model() successfully completed......................................
2023-11-24 16:18:58,559:INFO:SubProcess create_model() end ==================================
2023-11-24 16:18:58,559:INFO:Creating metrics dataframe
2023-11-24 16:18:58,561:INFO:Initializing Gradient Boosting Classifier
2023-11-24 16:18:58,561:INFO:Total runtime is 0.25756059885025023 minutes
2023-11-24 16:18:58,561:INFO:SubProcess create_model() called ==================================
2023-11-24 16:18:58,561:INFO:Initializing create_model()
2023-11-24 16:18:58,561:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x14780ebd0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x153a8ccd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:18:58,561:INFO:Checking exceptions
2023-11-24 16:18:58,561:INFO:Importing libraries
2023-11-24 16:18:58,561:INFO:Copying training dataset
2023-11-24 16:18:58,564:INFO:Defining folds
2023-11-24 16:18:58,564:INFO:Declaring metric variables
2023-11-24 16:18:58,564:INFO:Importing untrained model
2023-11-24 16:18:58,564:INFO:Gradient Boosting Classifier Imported successfully
2023-11-24 16:18:58,564:INFO:Starting cross validation
2023-11-24 16:18:58,565:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:19:06,505:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:06,509:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:06,511:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:06,536:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:06,538:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:06,540:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:06,561:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:06,563:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:06,566:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:06,627:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:06,629:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:06,632:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:06,642:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:06,643:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:06,645:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:06,645:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:06,647:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:06,647:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:06,664:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:06,664:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:06,665:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:06,666:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:06,667:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:06,667:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:06,668:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:06,668:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:06,669:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:06,669:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:06,670:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:06,672:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:06,675:INFO:Calculating mean and std
2023-11-24 16:19:06,676:INFO:Creating metrics dataframe
2023-11-24 16:19:06,677:INFO:Uploading results into container
2023-11-24 16:19:06,677:INFO:Uploading model into container now
2023-11-24 16:19:06,677:INFO:_master_model_container: 10
2023-11-24 16:19:06,677:INFO:_display_container: 2
2023-11-24 16:19:06,677:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=1556, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-11-24 16:19:06,677:INFO:create_model() successfully completed......................................
2023-11-24 16:19:06,730:INFO:SubProcess create_model() end ==================================
2023-11-24 16:19:06,730:INFO:Creating metrics dataframe
2023-11-24 16:19:06,732:INFO:Initializing Linear Discriminant Analysis
2023-11-24 16:19:06,732:INFO:Total runtime is 0.3937456488609314 minutes
2023-11-24 16:19:06,732:INFO:SubProcess create_model() called ==================================
2023-11-24 16:19:06,732:INFO:Initializing create_model()
2023-11-24 16:19:06,732:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x14780ebd0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x153a8ccd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:19:06,732:INFO:Checking exceptions
2023-11-24 16:19:06,732:INFO:Importing libraries
2023-11-24 16:19:06,732:INFO:Copying training dataset
2023-11-24 16:19:06,734:INFO:Defining folds
2023-11-24 16:19:06,734:INFO:Declaring metric variables
2023-11-24 16:19:06,734:INFO:Importing untrained model
2023-11-24 16:19:06,735:INFO:Linear Discriminant Analysis Imported successfully
2023-11-24 16:19:06,735:INFO:Starting cross validation
2023-11-24 16:19:06,736:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:19:07,537:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:07,539:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:07,542:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:07,589:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:07,591:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:07,592:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:07,594:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:07,595:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:07,597:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:07,614:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:07,616:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:07,617:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:07,618:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:07,620:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:07,622:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:07,625:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:07,627:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:07,629:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:07,651:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:07,652:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:07,654:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:07,654:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:07,656:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:07,656:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:07,665:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:07,667:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:07,669:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:07,743:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:07,745:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:07,747:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:07,752:INFO:Calculating mean and std
2023-11-24 16:19:07,752:INFO:Creating metrics dataframe
2023-11-24 16:19:07,754:INFO:Uploading results into container
2023-11-24 16:19:07,754:INFO:Uploading model into container now
2023-11-24 16:19:07,754:INFO:_master_model_container: 11
2023-11-24 16:19:07,754:INFO:_display_container: 2
2023-11-24 16:19:07,754:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-11-24 16:19:07,754:INFO:create_model() successfully completed......................................
2023-11-24 16:19:07,808:INFO:SubProcess create_model() end ==================================
2023-11-24 16:19:07,808:INFO:Creating metrics dataframe
2023-11-24 16:19:07,809:INFO:Initializing Extra Trees Classifier
2023-11-24 16:19:07,809:INFO:Total runtime is 0.41169986724853513 minutes
2023-11-24 16:19:07,809:INFO:SubProcess create_model() called ==================================
2023-11-24 16:19:07,809:INFO:Initializing create_model()
2023-11-24 16:19:07,809:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x14780ebd0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x153a8ccd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:19:07,809:INFO:Checking exceptions
2023-11-24 16:19:07,810:INFO:Importing libraries
2023-11-24 16:19:07,810:INFO:Copying training dataset
2023-11-24 16:19:07,812:INFO:Defining folds
2023-11-24 16:19:07,812:INFO:Declaring metric variables
2023-11-24 16:19:07,812:INFO:Importing untrained model
2023-11-24 16:19:07,812:INFO:Extra Trees Classifier Imported successfully
2023-11-24 16:19:07,812:INFO:Starting cross validation
2023-11-24 16:19:07,813:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:19:09,126:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:09,128:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:09,130:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:19:09,131:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:09,776:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:09,778:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:09,780:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:19:09,780:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:09,839:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:09,841:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:09,842:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:19:09,843:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:09,960:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:09,962:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:09,964:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:19:09,965:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:10,049:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:10,049:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:10,052:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:10,052:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:10,053:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:19:10,054:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:19:10,054:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:10,055:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:10,057:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:10,057:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:10,058:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:10,059:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:10,060:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:10,060:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:19:10,060:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:10,061:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:19:10,061:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:10,062:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:19:10,062:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:10,063:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:10,063:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:10,065:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:10,067:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:19:10,068:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:10,072:INFO:Calculating mean and std
2023-11-24 16:19:10,072:INFO:Creating metrics dataframe
2023-11-24 16:19:10,073:INFO:Uploading results into container
2023-11-24 16:19:10,073:INFO:Uploading model into container now
2023-11-24 16:19:10,073:INFO:_master_model_container: 12
2023-11-24 16:19:10,073:INFO:_display_container: 2
2023-11-24 16:19:10,073:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=1556, verbose=0, warm_start=False)
2023-11-24 16:19:10,073:INFO:create_model() successfully completed......................................
2023-11-24 16:19:10,124:INFO:SubProcess create_model() end ==================================
2023-11-24 16:19:10,125:INFO:Creating metrics dataframe
2023-11-24 16:19:10,126:INFO:Initializing Extreme Gradient Boosting
2023-11-24 16:19:10,126:INFO:Total runtime is 0.450315781434377 minutes
2023-11-24 16:19:10,126:INFO:SubProcess create_model() called ==================================
2023-11-24 16:19:10,126:INFO:Initializing create_model()
2023-11-24 16:19:10,126:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x14780ebd0>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x153a8ccd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:19:10,126:INFO:Checking exceptions
2023-11-24 16:19:10,126:INFO:Importing libraries
2023-11-24 16:19:10,126:INFO:Copying training dataset
2023-11-24 16:19:10,129:INFO:Defining folds
2023-11-24 16:19:10,129:INFO:Declaring metric variables
2023-11-24 16:19:10,129:INFO:Importing untrained model
2023-11-24 16:19:10,129:INFO:Extreme Gradient Boosting Imported successfully
2023-11-24 16:19:10,129:INFO:Starting cross validation
2023-11-24 16:19:10,130:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:19:26,617:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:26,622:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:26,628:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:26,780:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:26,783:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:26,785:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:26,908:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:26,914:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:26,918:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:27,105:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:27,107:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:27,109:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:27,137:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:27,139:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:27,141:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:27,176:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:27,178:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:27,181:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:27,182:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:27,184:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:27,186:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:27,268:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:27,270:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:27,272:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:27,322:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:27,325:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:27,327:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:27,336:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:27,338:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:27,340:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:27,345:INFO:Calculating mean and std
2023-11-24 16:19:27,345:INFO:Creating metrics dataframe
2023-11-24 16:19:27,346:INFO:Uploading results into container
2023-11-24 16:19:27,347:INFO:Uploading model into container now
2023-11-24 16:19:27,347:INFO:_master_model_container: 13
2023-11-24 16:19:27,347:INFO:_display_container: 2
2023-11-24 16:19:27,347:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', predictor=None, ...)
2023-11-24 16:19:27,347:INFO:create_model() successfully completed......................................
2023-11-24 16:19:27,398:INFO:SubProcess create_model() end ==================================
2023-11-24 16:19:27,398:INFO:Creating metrics dataframe
2023-11-24 16:19:27,400:INFO:Initializing Light Gradient Boosting Machine
2023-11-24 16:19:27,400:INFO:Total runtime is 0.7382057507832844 minutes
2023-11-24 16:19:27,400:INFO:SubProcess create_model() called ==================================
2023-11-24 16:19:27,400:INFO:Initializing create_model()
2023-11-24 16:19:27,400:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x14780ebd0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x153a8ccd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:19:27,400:INFO:Checking exceptions
2023-11-24 16:19:27,400:INFO:Importing libraries
2023-11-24 16:19:27,400:INFO:Copying training dataset
2023-11-24 16:19:27,402:INFO:Defining folds
2023-11-24 16:19:27,402:INFO:Declaring metric variables
2023-11-24 16:19:27,402:INFO:Importing untrained model
2023-11-24 16:19:27,402:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-24 16:19:27,402:INFO:Starting cross validation
2023-11-24 16:19:27,403:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:19:28,148:WARNING:create_model() for lightgbm raised an exception or returned all 0.0, trying without fit_kwargs:
2023-11-24 16:19:28,149:WARNING:Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/sklearn.py", line 1142, in fit
    super().fit(
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/sklearn.py", line 842, in fit
    self._Booster = train(
                    ^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/engine.py", line 255, in train
    booster = Booster(params=params, train_set=train_set)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 3200, in __init__
    train_set.construct()
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 2276, in construct
    self._lazy_init(data=self.data, label=self.label, reference=None,
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 1959, in _lazy_init
    return self.set_feature_name(feature_name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 2639, in set_feature_name
    _safe_call(_LIB.LGBM_DatasetSetFeatureNames(
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 242, in _safe_call
    raise LightGBMError(_LIB.LGBM_GetLastError().decode('utf-8'))
lightgbm.basic.LightGBMError: Do not support special JSON characters in feature name.


2023-11-24 16:19:28,149:INFO:Initializing create_model()
2023-11-24 16:19:28,149:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x14780ebd0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x153a8ccd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:19:28,149:INFO:Checking exceptions
2023-11-24 16:19:28,149:INFO:Importing libraries
2023-11-24 16:19:28,150:INFO:Copying training dataset
2023-11-24 16:19:28,154:INFO:Defining folds
2023-11-24 16:19:28,154:INFO:Declaring metric variables
2023-11-24 16:19:28,154:INFO:Importing untrained model
2023-11-24 16:19:28,154:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-24 16:19:28,154:INFO:Starting cross validation
2023-11-24 16:19:28,156:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:19:28,842:ERROR:create_model() for lightgbm raised an exception or returned all 0.0:
2023-11-24 16:19:28,843:ERROR:Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/sklearn.py", line 1142, in fit
    super().fit(
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/sklearn.py", line 842, in fit
    self._Booster = train(
                    ^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/engine.py", line 255, in train
    booster = Booster(params=params, train_set=train_set)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 3200, in __init__
    train_set.construct()
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 2276, in construct
    self._lazy_init(data=self.data, label=self.label, reference=None,
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 1959, in _lazy_init
    return self.set_feature_name(feature_name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 2639, in set_feature_name
    _safe_call(_LIB.LGBM_DatasetSetFeatureNames(
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 242, in _safe_call
    raise LightGBMError(_LIB.LGBM_GetLastError().decode('utf-8'))
lightgbm.basic.LightGBMError: Do not support special JSON characters in feature name.


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/sklearn.py", line 1142, in fit
    super().fit(
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/sklearn.py", line 842, in fit
    self._Booster = train(
                    ^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/engine.py", line 255, in train
    booster = Booster(params=params, train_set=train_set)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 3200, in __init__
    train_set.construct()
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 2276, in construct
    self._lazy_init(data=self.data, label=self.label, reference=None,
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 1959, in _lazy_init
    return self.set_feature_name(feature_name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 2639, in set_feature_name
    _safe_call(_LIB.LGBM_DatasetSetFeatureNames(
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 242, in _safe_call
    raise LightGBMError(_LIB.LGBM_GetLastError().decode('utf-8'))
lightgbm.basic.LightGBMError: Do not support special JSON characters in feature name.


2023-11-24 16:19:28,843:INFO:Initializing Dummy Classifier
2023-11-24 16:19:28,843:INFO:Total runtime is 0.7622678796450296 minutes
2023-11-24 16:19:28,844:INFO:SubProcess create_model() called ==================================
2023-11-24 16:19:28,844:INFO:Initializing create_model()
2023-11-24 16:19:28,844:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x14780ebd0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x153a8ccd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:19:28,844:INFO:Checking exceptions
2023-11-24 16:19:28,844:INFO:Importing libraries
2023-11-24 16:19:28,844:INFO:Copying training dataset
2023-11-24 16:19:28,846:INFO:Defining folds
2023-11-24 16:19:28,846:INFO:Declaring metric variables
2023-11-24 16:19:28,846:INFO:Importing untrained model
2023-11-24 16:19:28,847:INFO:Dummy Classifier Imported successfully
2023-11-24 16:19:28,847:INFO:Starting cross validation
2023-11-24 16:19:28,848:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:19:29,442:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:29,447:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:29,448:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:19:29,449:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:29,465:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:29,468:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:29,472:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:19:29,474:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:29,486:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:29,488:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:29,493:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:19:29,494:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:29,506:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:29,508:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:29,510:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:19:29,511:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:29,526:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:29,528:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:29,528:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:29,530:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:19:29,530:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:29,531:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:29,530:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:29,532:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:19:29,533:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:29,533:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:29,534:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:19:29,535:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:29,541:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:29,543:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:29,544:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:19:29,545:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:29,552:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:29,555:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:29,556:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:19:29,557:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:29,558:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:29,560:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:29,561:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:19:29,562:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:19:29,566:INFO:Calculating mean and std
2023-11-24 16:19:29,566:INFO:Creating metrics dataframe
2023-11-24 16:19:29,568:INFO:Uploading results into container
2023-11-24 16:19:29,568:INFO:Uploading model into container now
2023-11-24 16:19:29,568:INFO:_master_model_container: 14
2023-11-24 16:19:29,568:INFO:_display_container: 2
2023-11-24 16:19:29,568:INFO:DummyClassifier(constant=None, random_state=1556, strategy='prior')
2023-11-24 16:19:29,568:INFO:create_model() successfully completed......................................
2023-11-24 16:19:29,649:INFO:SubProcess create_model() end ==================================
2023-11-24 16:19:29,650:INFO:Creating metrics dataframe
2023-11-24 16:19:29,652:INFO:Initializing create_model()
2023-11-24 16:19:29,652:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x14780ebd0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', predictor=None, ...), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:19:29,652:INFO:Checking exceptions
2023-11-24 16:19:29,652:INFO:Importing libraries
2023-11-24 16:19:29,652:INFO:Copying training dataset
2023-11-24 16:19:29,654:INFO:Defining folds
2023-11-24 16:19:29,654:INFO:Declaring metric variables
2023-11-24 16:19:29,655:INFO:Importing untrained model
2023-11-24 16:19:29,655:INFO:Declaring custom model
2023-11-24 16:19:29,655:INFO:Extreme Gradient Boosting Imported successfully
2023-11-24 16:19:29,656:INFO:Cross validation set to False
2023-11-24 16:19:29,656:INFO:Fitting Model
2023-11-24 16:19:32,231:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='multi:softprob', predictor=None, ...)
2023-11-24 16:19:32,231:INFO:create_model() successfully completed......................................
2023-11-24 16:19:32,285:INFO:_master_model_container: 14
2023-11-24 16:19:32,286:INFO:_display_container: 2
2023-11-24 16:19:32,286:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='multi:softprob', predictor=None, ...)
2023-11-24 16:19:32,286:INFO:compare_models() successfully completed......................................
2023-11-24 16:19:32,290:INFO:Initializing save_model()
2023-11-24 16:19:32,290:INFO:save_model(model=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='multi:softprob', predictor=None, ...), model_name=best_model, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/46/tcczvndd7xj_pqs5r176bl600000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Number_of_vehicles_involved',
                                             'Number_of_casualties'],
                                    transformer=SimpleImputer(add_i...
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['Time'],
                                    transformer=TargetEncoder(cols=['Time'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-11-24 16:19:32,290:INFO:Adding model into prep_pipe
2023-11-24 16:19:32,304:INFO:best_model.pkl saved in current working directory
2023-11-24 16:19:32,309:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Number_of_vehicles_involved',
                                             'Number_of_casualties'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_fea...
                               grow_policy=None, importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, n_estimators=100,
                               n_jobs=-1, num_parallel_tree=None,
                               objective='multi:softprob', predictor=None, ...))],
         verbose=False)
2023-11-24 16:19:32,309:INFO:save_model() successfully completed......................................
2023-11-24 16:21:12,895:INFO:PyCaret ClassificationExperiment
2023-11-24 16:21:12,896:INFO:Logging name: clf-default-name
2023-11-24 16:21:12,896:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-11-24 16:21:12,896:INFO:version 3.2.0
2023-11-24 16:21:12,896:INFO:Initializing setup()
2023-11-24 16:21:12,896:INFO:self.USI: 10d9
2023-11-24 16:21:12,896:INFO:self._variable_keys: {'_available_plots', 'fix_imbalance', 'fold_shuffle_param', 'exp_id', 'y_test', 'y_train', 'n_jobs_param', 'memory', 'log_plots_param', 'html_param', 'gpu_param', '_ml_usecase', 'idx', 'pipeline', 'is_multiclass', 'seed', 'X_test', 'logging_param', 'data', 'fold_generator', 'exp_name_log', 'USI', 'X', 'fold_groups_param', 'X_train', 'y', 'gpu_n_jobs_param', 'target_param'}
2023-11-24 16:21:12,896:INFO:Checking environment
2023-11-24 16:21:12,896:INFO:python_version: 3.11.5
2023-11-24 16:21:12,896:INFO:python_build: ('main', 'Sep 11 2023 08:31:25')
2023-11-24 16:21:12,896:INFO:machine: arm64
2023-11-24 16:21:12,896:INFO:platform: macOS-14.0-arm64-arm-64bit
2023-11-24 16:21:12,896:INFO:Memory: svmem(total=17179869184, available=4705435648, percent=72.6, used=6646136832, free=46825472, active=4679319552, inactive=4653563904, wired=1966817280)
2023-11-24 16:21:12,896:INFO:Physical Core: 10
2023-11-24 16:21:12,896:INFO:Logical Core: 10
2023-11-24 16:21:12,896:INFO:Checking libraries
2023-11-24 16:21:12,896:INFO:System:
2023-11-24 16:21:12,896:INFO:    python: 3.11.5 (main, Sep 11 2023, 08:31:25) [Clang 14.0.6 ]
2023-11-24 16:21:12,896:INFO:executable: /Users/saiakhil/anaconda3/envs/mlauto/bin/python
2023-11-24 16:21:12,896:INFO:   machine: macOS-14.0-arm64-arm-64bit
2023-11-24 16:21:12,896:INFO:PyCaret required dependencies:
2023-11-24 16:21:12,896:INFO:                 pip: 23.3.1
2023-11-24 16:21:12,896:INFO:          setuptools: 68.0.0
2023-11-24 16:21:12,896:INFO:             pycaret: 3.2.0
2023-11-24 16:21:12,896:INFO:             IPython: 8.15.0
2023-11-24 16:21:12,896:INFO:          ipywidgets: 8.1.1
2023-11-24 16:21:12,896:INFO:                tqdm: 4.66.1
2023-11-24 16:21:12,896:INFO:               numpy: 1.25.2
2023-11-24 16:21:12,896:INFO:              pandas: 1.5.3
2023-11-24 16:21:12,896:INFO:              jinja2: 3.1.2
2023-11-24 16:21:12,896:INFO:               scipy: 1.11.3
2023-11-24 16:21:12,896:INFO:              joblib: 1.3.2
2023-11-24 16:21:12,896:INFO:             sklearn: 1.2.2
2023-11-24 16:21:12,896:INFO:                pyod: 1.1.2
2023-11-24 16:21:12,896:INFO:            imblearn: 0.11.0
2023-11-24 16:21:12,896:INFO:   category_encoders: 2.6.3
2023-11-24 16:21:12,896:INFO:            lightgbm: 4.1.0
2023-11-24 16:21:12,896:INFO:               numba: 0.58.1
2023-11-24 16:21:12,896:INFO:            requests: 2.31.0
2023-11-24 16:21:12,896:INFO:          matplotlib: 3.6.0
2023-11-24 16:21:12,896:INFO:          scikitplot: 0.3.7
2023-11-24 16:21:12,896:INFO:         yellowbrick: 1.5
2023-11-24 16:21:12,896:INFO:              plotly: 5.18.0
2023-11-24 16:21:12,896:INFO:    plotly-resampler: Not installed
2023-11-24 16:21:12,896:INFO:             kaleido: 0.2.1
2023-11-24 16:21:12,896:INFO:           schemdraw: 0.15
2023-11-24 16:21:12,896:INFO:         statsmodels: 0.14.0
2023-11-24 16:21:12,896:INFO:              sktime: 0.21.1
2023-11-24 16:21:12,896:INFO:               tbats: 1.1.3
2023-11-24 16:21:12,896:INFO:            pmdarima: 2.0.4
2023-11-24 16:21:12,896:INFO:              psutil: 5.9.6
2023-11-24 16:21:12,896:INFO:          markupsafe: 2.1.3
2023-11-24 16:21:12,896:INFO:             pickle5: Not installed
2023-11-24 16:21:12,896:INFO:         cloudpickle: 3.0.0
2023-11-24 16:21:12,896:INFO:         deprecation: 2.1.0
2023-11-24 16:21:12,896:INFO:              xxhash: 3.4.1
2023-11-24 16:21:12,896:INFO:           wurlitzer: 3.0.3
2023-11-24 16:21:12,896:INFO:PyCaret optional dependencies:
2023-11-24 16:21:12,896:INFO:                shap: Not installed
2023-11-24 16:21:12,896:INFO:           interpret: Not installed
2023-11-24 16:21:12,896:INFO:                umap: Not installed
2023-11-24 16:21:12,896:INFO:     ydata_profiling: 4.6.2
2023-11-24 16:21:12,896:INFO:  explainerdashboard: Not installed
2023-11-24 16:21:12,896:INFO:             autoviz: Not installed
2023-11-24 16:21:12,896:INFO:           fairlearn: Not installed
2023-11-24 16:21:12,896:INFO:          deepchecks: Not installed
2023-11-24 16:21:12,896:INFO:             xgboost: 1.7.3
2023-11-24 16:21:12,896:INFO:            catboost: Not installed
2023-11-24 16:21:12,896:INFO:              kmodes: Not installed
2023-11-24 16:21:12,896:INFO:             mlxtend: Not installed
2023-11-24 16:21:12,896:INFO:       statsforecast: Not installed
2023-11-24 16:21:12,896:INFO:        tune_sklearn: Not installed
2023-11-24 16:21:12,896:INFO:                 ray: Not installed
2023-11-24 16:21:12,896:INFO:            hyperopt: Not installed
2023-11-24 16:21:12,896:INFO:              optuna: Not installed
2023-11-24 16:21:12,896:INFO:               skopt: Not installed
2023-11-24 16:21:12,896:INFO:              mlflow: Not installed
2023-11-24 16:21:12,897:INFO:              gradio: Not installed
2023-11-24 16:21:12,897:INFO:             fastapi: Not installed
2023-11-24 16:21:12,897:INFO:             uvicorn: Not installed
2023-11-24 16:21:12,897:INFO:              m2cgen: Not installed
2023-11-24 16:21:12,897:INFO:           evidently: Not installed
2023-11-24 16:21:12,897:INFO:               fugue: Not installed
2023-11-24 16:21:12,897:INFO:           streamlit: 1.28.2
2023-11-24 16:21:12,897:INFO:             prophet: Not installed
2023-11-24 16:21:12,897:INFO:None
2023-11-24 16:21:12,897:INFO:Set up data.
2023-11-24 16:21:12,922:INFO:Set up folding strategy.
2023-11-24 16:21:12,922:INFO:Set up train/test split.
2023-11-24 16:21:20,460:INFO:PyCaret ClassificationExperiment
2023-11-24 16:21:20,460:INFO:Logging name: clf-default-name
2023-11-24 16:21:20,460:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-11-24 16:21:20,460:INFO:version 3.2.0
2023-11-24 16:21:20,460:INFO:Initializing setup()
2023-11-24 16:21:20,460:INFO:self.USI: afe4
2023-11-24 16:21:20,460:INFO:self._variable_keys: {'_available_plots', 'fix_imbalance', 'fold_shuffle_param', 'exp_id', 'y_test', 'y_train', 'n_jobs_param', 'memory', 'log_plots_param', 'html_param', 'gpu_param', '_ml_usecase', 'idx', 'pipeline', 'is_multiclass', 'seed', 'X_test', 'logging_param', 'data', 'fold_generator', 'exp_name_log', 'USI', 'X', 'fold_groups_param', 'X_train', 'y', 'gpu_n_jobs_param', 'target_param'}
2023-11-24 16:21:20,460:INFO:Checking environment
2023-11-24 16:21:20,460:INFO:python_version: 3.11.5
2023-11-24 16:21:20,460:INFO:python_build: ('main', 'Sep 11 2023 08:31:25')
2023-11-24 16:21:20,460:INFO:machine: arm64
2023-11-24 16:21:20,460:INFO:platform: macOS-14.0-arm64-arm-64bit
2023-11-24 16:21:20,460:INFO:Memory: svmem(total=17179869184, available=4726095872, percent=72.5, used=6624083968, free=77086720, active=4662738944, inactive=4644126720, wired=1961345024)
2023-11-24 16:21:20,460:INFO:Physical Core: 10
2023-11-24 16:21:20,460:INFO:Logical Core: 10
2023-11-24 16:21:20,460:INFO:Checking libraries
2023-11-24 16:21:20,460:INFO:System:
2023-11-24 16:21:20,460:INFO:    python: 3.11.5 (main, Sep 11 2023, 08:31:25) [Clang 14.0.6 ]
2023-11-24 16:21:20,460:INFO:executable: /Users/saiakhil/anaconda3/envs/mlauto/bin/python
2023-11-24 16:21:20,460:INFO:   machine: macOS-14.0-arm64-arm-64bit
2023-11-24 16:21:20,460:INFO:PyCaret required dependencies:
2023-11-24 16:21:20,460:INFO:                 pip: 23.3.1
2023-11-24 16:21:20,460:INFO:          setuptools: 68.0.0
2023-11-24 16:21:20,460:INFO:             pycaret: 3.2.0
2023-11-24 16:21:20,460:INFO:             IPython: 8.15.0
2023-11-24 16:21:20,460:INFO:          ipywidgets: 8.1.1
2023-11-24 16:21:20,460:INFO:                tqdm: 4.66.1
2023-11-24 16:21:20,460:INFO:               numpy: 1.25.2
2023-11-24 16:21:20,460:INFO:              pandas: 1.5.3
2023-11-24 16:21:20,460:INFO:              jinja2: 3.1.2
2023-11-24 16:21:20,460:INFO:               scipy: 1.11.3
2023-11-24 16:21:20,460:INFO:              joblib: 1.3.2
2023-11-24 16:21:20,460:INFO:             sklearn: 1.2.2
2023-11-24 16:21:20,460:INFO:                pyod: 1.1.2
2023-11-24 16:21:20,460:INFO:            imblearn: 0.11.0
2023-11-24 16:21:20,460:INFO:   category_encoders: 2.6.3
2023-11-24 16:21:20,460:INFO:            lightgbm: 4.1.0
2023-11-24 16:21:20,460:INFO:               numba: 0.58.1
2023-11-24 16:21:20,460:INFO:            requests: 2.31.0
2023-11-24 16:21:20,460:INFO:          matplotlib: 3.6.0
2023-11-24 16:21:20,460:INFO:          scikitplot: 0.3.7
2023-11-24 16:21:20,460:INFO:         yellowbrick: 1.5
2023-11-24 16:21:20,460:INFO:              plotly: 5.18.0
2023-11-24 16:21:20,460:INFO:    plotly-resampler: Not installed
2023-11-24 16:21:20,460:INFO:             kaleido: 0.2.1
2023-11-24 16:21:20,460:INFO:           schemdraw: 0.15
2023-11-24 16:21:20,460:INFO:         statsmodels: 0.14.0
2023-11-24 16:21:20,460:INFO:              sktime: 0.21.1
2023-11-24 16:21:20,460:INFO:               tbats: 1.1.3
2023-11-24 16:21:20,460:INFO:            pmdarima: 2.0.4
2023-11-24 16:21:20,460:INFO:              psutil: 5.9.6
2023-11-24 16:21:20,460:INFO:          markupsafe: 2.1.3
2023-11-24 16:21:20,460:INFO:             pickle5: Not installed
2023-11-24 16:21:20,460:INFO:         cloudpickle: 3.0.0
2023-11-24 16:21:20,460:INFO:         deprecation: 2.1.0
2023-11-24 16:21:20,460:INFO:              xxhash: 3.4.1
2023-11-24 16:21:20,460:INFO:           wurlitzer: 3.0.3
2023-11-24 16:21:20,460:INFO:PyCaret optional dependencies:
2023-11-24 16:21:20,460:INFO:                shap: Not installed
2023-11-24 16:21:20,460:INFO:           interpret: Not installed
2023-11-24 16:21:20,460:INFO:                umap: Not installed
2023-11-24 16:21:20,460:INFO:     ydata_profiling: 4.6.2
2023-11-24 16:21:20,460:INFO:  explainerdashboard: Not installed
2023-11-24 16:21:20,460:INFO:             autoviz: Not installed
2023-11-24 16:21:20,460:INFO:           fairlearn: Not installed
2023-11-24 16:21:20,460:INFO:          deepchecks: Not installed
2023-11-24 16:21:20,460:INFO:             xgboost: 1.7.3
2023-11-24 16:21:20,460:INFO:            catboost: Not installed
2023-11-24 16:21:20,460:INFO:              kmodes: Not installed
2023-11-24 16:21:20,460:INFO:             mlxtend: Not installed
2023-11-24 16:21:20,460:INFO:       statsforecast: Not installed
2023-11-24 16:21:20,460:INFO:        tune_sklearn: Not installed
2023-11-24 16:21:20,460:INFO:                 ray: Not installed
2023-11-24 16:21:20,460:INFO:            hyperopt: Not installed
2023-11-24 16:21:20,460:INFO:              optuna: Not installed
2023-11-24 16:21:20,460:INFO:               skopt: Not installed
2023-11-24 16:21:20,460:INFO:              mlflow: Not installed
2023-11-24 16:21:20,460:INFO:              gradio: Not installed
2023-11-24 16:21:20,460:INFO:             fastapi: Not installed
2023-11-24 16:21:20,460:INFO:             uvicorn: Not installed
2023-11-24 16:21:20,460:INFO:              m2cgen: Not installed
2023-11-24 16:21:20,460:INFO:           evidently: Not installed
2023-11-24 16:21:20,460:INFO:               fugue: Not installed
2023-11-24 16:21:20,460:INFO:           streamlit: 1.28.2
2023-11-24 16:21:20,461:INFO:             prophet: Not installed
2023-11-24 16:21:20,461:INFO:None
2023-11-24 16:21:20,461:INFO:Set up data.
2023-11-24 16:21:20,486:INFO:Set up folding strategy.
2023-11-24 16:21:20,486:INFO:Set up train/test split.
2023-11-24 16:21:20,494:INFO:Set up index.
2023-11-24 16:21:20,494:INFO:Assigning column types.
2023-11-24 16:21:20,495:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-24 16:21:20,512:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 16:21:20,513:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:21:20,524:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:21:20,525:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:21:20,542:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 16:21:20,543:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:21:20,554:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:21:20,555:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:21:20,555:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-11-24 16:21:20,573:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:21:20,584:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:21:20,585:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:21:20,603:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:21:20,614:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:21:20,615:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:21:20,615:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-11-24 16:21:20,644:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:21:20,645:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:21:20,673:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:21:20,674:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:21:20,674:INFO:Preparing preprocessing pipeline...
2023-11-24 16:21:20,674:INFO:Set up label encoding.
2023-11-24 16:21:20,674:INFO:Set up simple imputation.
2023-11-24 16:21:20,677:INFO:Set up encoding of categorical features.
2023-11-24 16:21:21,046:INFO:Finished creating preprocessing pipeline.
2023-11-24 16:21:21,049:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/46/tcczvndd7xj_pqs5r176bl600000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Number_of_vehicles_involved',
                                             'Number_of_casualties'],
                                    transformer=SimpleImputer(add_i...
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['Time'],
                                    transformer=TargetEncoder(cols=['Time'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2023-11-24 16:21:21,049:INFO:Creating final display dataframe.
2023-11-24 16:21:21,536:INFO:Setup _display_container:                     Description                                              Value
0                    Session id                                               4746
1                        Target                                  Accident_severity
2                   Target type                                         Multiclass
3                Target mapping  Fatal injury: 0, Serious Injury: 1, Slight Inj...
4           Original data shape                                        (12316, 32)
5        Transformed data shape                                       (12316, 208)
6   Transformed train set shape                                        (8621, 208)
7    Transformed test set shape                                        (3695, 208)
8              Numeric features                                                  2
9          Categorical features                                                 29
10     Rows with missing values                                              76.5%
11                   Preprocess                                               True
12              Imputation type                                             simple
13           Numeric imputation                                               mean
14       Categorical imputation                                               mode
15     Maximum one-hot encoding                                                 25
16              Encoding method                                               None
17               Fold Generator                                    StratifiedKFold
18                  Fold Number                                                 10
19                     CPU Jobs                                                 -1
20                      Use GPU                                              False
21               Log Experiment                                              False
22              Experiment Name                                   clf-default-name
23                          USI                                               afe4
2023-11-24 16:21:21,566:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:21:21,566:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:21:21,594:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:21:21,595:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:21:21,595:INFO:setup() successfully completed in 1.14s...............
2023-11-24 16:21:21,597:INFO:Initializing compare_models()
2023-11-24 16:21:21,597:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1516f64d0>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x1516f64d0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2023-11-24 16:21:21,597:INFO:Checking exceptions
2023-11-24 16:21:21,599:INFO:Preparing display monitor
2023-11-24 16:21:21,600:INFO:Initializing Logistic Regression
2023-11-24 16:21:21,600:INFO:Total runtime is 4.6491622924804686e-07 minutes
2023-11-24 16:21:21,600:INFO:SubProcess create_model() called ==================================
2023-11-24 16:21:21,600:INFO:Initializing create_model()
2023-11-24 16:21:21,600:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1516f64d0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x152ac06d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:21:21,600:INFO:Checking exceptions
2023-11-24 16:21:21,600:INFO:Importing libraries
2023-11-24 16:21:21,600:INFO:Copying training dataset
2023-11-24 16:21:21,602:INFO:Defining folds
2023-11-24 16:21:21,602:INFO:Declaring metric variables
2023-11-24 16:21:21,602:INFO:Importing untrained model
2023-11-24 16:21:21,602:INFO:Logistic Regression Imported successfully
2023-11-24 16:21:21,602:INFO:Starting cross validation
2023-11-24 16:21:21,603:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:21:26,574:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:26,576:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:26,577:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:26,578:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:26,581:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:26,588:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:26,728:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:26,730:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:26,735:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:26,766:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:26,769:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:26,771:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:26,793:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:26,796:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:26,798:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:26,929:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:26,932:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:26,934:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:27,152:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:27,154:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:27,157:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:27,274:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:27,276:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:27,277:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:21:27,278:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:27,289:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:27,291:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:27,293:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:27,407:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:27,409:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:27,411:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:27,418:INFO:Calculating mean and std
2023-11-24 16:21:27,419:INFO:Creating metrics dataframe
2023-11-24 16:21:27,422:INFO:Uploading results into container
2023-11-24 16:21:27,422:INFO:Uploading model into container now
2023-11-24 16:21:27,422:INFO:_master_model_container: 1
2023-11-24 16:21:27,422:INFO:_display_container: 2
2023-11-24 16:21:27,423:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4746, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-11-24 16:21:27,423:INFO:create_model() successfully completed......................................
2023-11-24 16:21:27,518:INFO:SubProcess create_model() end ==================================
2023-11-24 16:21:27,518:INFO:Creating metrics dataframe
2023-11-24 16:21:27,520:INFO:Initializing K Neighbors Classifier
2023-11-24 16:21:27,520:INFO:Total runtime is 0.0986736019452413 minutes
2023-11-24 16:21:27,520:INFO:SubProcess create_model() called ==================================
2023-11-24 16:21:27,520:INFO:Initializing create_model()
2023-11-24 16:21:27,520:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1516f64d0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x152ac06d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:21:27,520:INFO:Checking exceptions
2023-11-24 16:21:27,520:INFO:Importing libraries
2023-11-24 16:21:27,520:INFO:Copying training dataset
2023-11-24 16:21:27,523:INFO:Defining folds
2023-11-24 16:21:27,523:INFO:Declaring metric variables
2023-11-24 16:21:27,523:INFO:Importing untrained model
2023-11-24 16:21:27,523:INFO:K Neighbors Classifier Imported successfully
2023-11-24 16:21:27,523:INFO:Starting cross validation
2023-11-24 16:21:27,524:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:21:28,492:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:28,495:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:28,498:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:21:28,499:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:28,503:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:28,506:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:28,509:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:28,535:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:28,538:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:28,540:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:28,547:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:28,550:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:28,551:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:21:28,552:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:28,553:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:28,556:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:28,557:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:21:28,558:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:28,561:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:28,561:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:28,563:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:28,564:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:28,564:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:28,566:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:28,566:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:28,567:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:28,569:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:21:28,570:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:28,589:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:28,591:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:28,593:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:28,605:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:28,607:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:28,610:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:28,615:INFO:Calculating mean and std
2023-11-24 16:21:28,615:INFO:Creating metrics dataframe
2023-11-24 16:21:28,617:INFO:Uploading results into container
2023-11-24 16:21:28,617:INFO:Uploading model into container now
2023-11-24 16:21:28,617:INFO:_master_model_container: 2
2023-11-24 16:21:28,617:INFO:_display_container: 2
2023-11-24 16:21:28,617:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-11-24 16:21:28,617:INFO:create_model() successfully completed......................................
2023-11-24 16:21:28,674:INFO:SubProcess create_model() end ==================================
2023-11-24 16:21:28,674:INFO:Creating metrics dataframe
2023-11-24 16:21:28,676:INFO:Initializing Naive Bayes
2023-11-24 16:21:28,676:INFO:Total runtime is 0.1179449995358785 minutes
2023-11-24 16:21:28,676:INFO:SubProcess create_model() called ==================================
2023-11-24 16:21:28,676:INFO:Initializing create_model()
2023-11-24 16:21:28,676:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1516f64d0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x152ac06d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:21:28,676:INFO:Checking exceptions
2023-11-24 16:21:28,676:INFO:Importing libraries
2023-11-24 16:21:28,676:INFO:Copying training dataset
2023-11-24 16:21:28,679:INFO:Defining folds
2023-11-24 16:21:28,679:INFO:Declaring metric variables
2023-11-24 16:21:28,679:INFO:Importing untrained model
2023-11-24 16:21:28,679:INFO:Naive Bayes Imported successfully
2023-11-24 16:21:28,680:INFO:Starting cross validation
2023-11-24 16:21:28,681:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:21:29,452:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:29,460:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:29,460:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:29,463:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:29,466:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:29,467:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:29,471:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:29,472:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:29,474:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:29,476:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:29,476:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:29,480:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:29,495:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:29,497:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:29,498:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:29,498:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:29,500:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:29,500:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:29,500:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:29,503:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:29,503:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:29,527:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:29,529:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:29,530:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:29,531:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:29,532:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:29,534:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:29,555:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:29,557:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:29,560:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:29,564:INFO:Calculating mean and std
2023-11-24 16:21:29,564:INFO:Creating metrics dataframe
2023-11-24 16:21:29,565:INFO:Uploading results into container
2023-11-24 16:21:29,566:INFO:Uploading model into container now
2023-11-24 16:21:29,566:INFO:_master_model_container: 3
2023-11-24 16:21:29,566:INFO:_display_container: 2
2023-11-24 16:21:29,566:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-11-24 16:21:29,566:INFO:create_model() successfully completed......................................
2023-11-24 16:21:29,623:INFO:SubProcess create_model() end ==================================
2023-11-24 16:21:29,623:INFO:Creating metrics dataframe
2023-11-24 16:21:29,625:INFO:Initializing Decision Tree Classifier
2023-11-24 16:21:29,625:INFO:Total runtime is 0.13375933567682902 minutes
2023-11-24 16:21:29,625:INFO:SubProcess create_model() called ==================================
2023-11-24 16:21:29,625:INFO:Initializing create_model()
2023-11-24 16:21:29,625:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1516f64d0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x152ac06d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:21:29,625:INFO:Checking exceptions
2023-11-24 16:21:29,625:INFO:Importing libraries
2023-11-24 16:21:29,625:INFO:Copying training dataset
2023-11-24 16:21:29,628:INFO:Defining folds
2023-11-24 16:21:29,628:INFO:Declaring metric variables
2023-11-24 16:21:29,628:INFO:Importing untrained model
2023-11-24 16:21:29,628:INFO:Decision Tree Classifier Imported successfully
2023-11-24 16:21:29,628:INFO:Starting cross validation
2023-11-24 16:21:29,629:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:21:30,437:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:30,437:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:30,440:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:30,441:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:30,443:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:30,444:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:30,446:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:30,448:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:30,450:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:30,452:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:30,454:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:30,456:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:30,479:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:30,480:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:30,481:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:30,481:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:30,483:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:30,483:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:30,483:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:30,485:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:30,486:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:30,494:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:30,496:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:30,499:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:30,504:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:30,506:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:30,508:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:30,509:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:30,511:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:30,513:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:30,518:INFO:Calculating mean and std
2023-11-24 16:21:30,518:INFO:Creating metrics dataframe
2023-11-24 16:21:30,519:INFO:Uploading results into container
2023-11-24 16:21:30,519:INFO:Uploading model into container now
2023-11-24 16:21:30,519:INFO:_master_model_container: 4
2023-11-24 16:21:30,519:INFO:_display_container: 2
2023-11-24 16:21:30,519:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=4746, splitter='best')
2023-11-24 16:21:30,519:INFO:create_model() successfully completed......................................
2023-11-24 16:21:30,572:INFO:SubProcess create_model() end ==================================
2023-11-24 16:21:30,572:INFO:Creating metrics dataframe
2023-11-24 16:21:30,574:INFO:Initializing SVM - Linear Kernel
2023-11-24 16:21:30,574:INFO:Total runtime is 0.1495674173037211 minutes
2023-11-24 16:21:30,574:INFO:SubProcess create_model() called ==================================
2023-11-24 16:21:30,574:INFO:Initializing create_model()
2023-11-24 16:21:30,574:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1516f64d0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x152ac06d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:21:30,574:INFO:Checking exceptions
2023-11-24 16:21:30,574:INFO:Importing libraries
2023-11-24 16:21:30,574:INFO:Copying training dataset
2023-11-24 16:21:30,576:INFO:Defining folds
2023-11-24 16:21:30,576:INFO:Declaring metric variables
2023-11-24 16:21:30,576:INFO:Importing untrained model
2023-11-24 16:21:30,576:INFO:SVM - Linear Kernel Imported successfully
2023-11-24 16:21:30,576:INFO:Starting cross validation
2023-11-24 16:21:30,577:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:21:31,710:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:21:31,711:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:31,714:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:31,715:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:21:31,716:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:32,000:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:21:32,001:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:32,004:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:32,006:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:32,025:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:21:32,026:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:32,028:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:32,029:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:21:32,030:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:32,033:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:21:32,034:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:32,036:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:32,038:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:32,051:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:21:32,052:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:32,054:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:32,054:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:21:32,055:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:21:32,055:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:32,056:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:32,056:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:32,057:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:32,058:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:32,059:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:21:32,059:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:21:32,060:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:32,060:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:21:32,060:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:32,061:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:32,063:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:32,065:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:21:32,066:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:32,078:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:21:32,079:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:32,081:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:32,083:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:21:32,083:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:32,088:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:21:32,089:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:32,091:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:32,092:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:21:32,093:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:32,097:INFO:Calculating mean and std
2023-11-24 16:21:32,098:INFO:Creating metrics dataframe
2023-11-24 16:21:32,099:INFO:Uploading results into container
2023-11-24 16:21:32,099:INFO:Uploading model into container now
2023-11-24 16:21:32,099:INFO:_master_model_container: 5
2023-11-24 16:21:32,099:INFO:_display_container: 2
2023-11-24 16:21:32,099:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=4746, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-11-24 16:21:32,099:INFO:create_model() successfully completed......................................
2023-11-24 16:21:32,151:INFO:SubProcess create_model() end ==================================
2023-11-24 16:21:32,151:INFO:Creating metrics dataframe
2023-11-24 16:21:32,152:INFO:Initializing Ridge Classifier
2023-11-24 16:21:32,153:INFO:Total runtime is 0.17588258186976116 minutes
2023-11-24 16:21:32,153:INFO:SubProcess create_model() called ==================================
2023-11-24 16:21:32,153:INFO:Initializing create_model()
2023-11-24 16:21:32,153:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1516f64d0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x152ac06d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:21:32,153:INFO:Checking exceptions
2023-11-24 16:21:32,153:INFO:Importing libraries
2023-11-24 16:21:32,153:INFO:Copying training dataset
2023-11-24 16:21:32,155:INFO:Defining folds
2023-11-24 16:21:32,155:INFO:Declaring metric variables
2023-11-24 16:21:32,155:INFO:Importing untrained model
2023-11-24 16:21:32,155:INFO:Ridge Classifier Imported successfully
2023-11-24 16:21:32,155:INFO:Starting cross validation
2023-11-24 16:21:32,156:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:21:32,795:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:21:32,796:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:32,798:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:32,799:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:21:32,801:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:32,825:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:21:32,826:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:32,829:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:32,830:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:21:32,831:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:32,840:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:21:32,841:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:32,844:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:32,845:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:21:32,846:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:32,847:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:21:32,848:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:21:32,849:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:32,849:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:32,852:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:32,853:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:21:32,854:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:32,855:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:32,856:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:21:32,856:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:21:32,856:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:21:32,857:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:32,857:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:32,857:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:32,859:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:21:32,860:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:32,860:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:32,860:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:32,861:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:21:32,861:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:21:32,862:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:32,862:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:32,862:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:32,863:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:21:32,864:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:32,880:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:21:32,881:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:32,883:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:32,884:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:21:32,885:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:32,887:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:21:32,888:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:32,890:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:32,891:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:21:32,892:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:32,896:INFO:Calculating mean and std
2023-11-24 16:21:32,897:INFO:Creating metrics dataframe
2023-11-24 16:21:32,898:INFO:Uploading results into container
2023-11-24 16:21:32,898:INFO:Uploading model into container now
2023-11-24 16:21:32,898:INFO:_master_model_container: 6
2023-11-24 16:21:32,898:INFO:_display_container: 2
2023-11-24 16:21:32,898:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=4746, solver='auto',
                tol=0.0001)
2023-11-24 16:21:32,898:INFO:create_model() successfully completed......................................
2023-11-24 16:21:32,950:INFO:SubProcess create_model() end ==================================
2023-11-24 16:21:32,950:INFO:Creating metrics dataframe
2023-11-24 16:21:32,952:INFO:Initializing Random Forest Classifier
2023-11-24 16:21:32,952:INFO:Total runtime is 0.18920251925786338 minutes
2023-11-24 16:21:32,952:INFO:SubProcess create_model() called ==================================
2023-11-24 16:21:32,952:INFO:Initializing create_model()
2023-11-24 16:21:32,952:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1516f64d0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x152ac06d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:21:32,952:INFO:Checking exceptions
2023-11-24 16:21:32,952:INFO:Importing libraries
2023-11-24 16:21:32,952:INFO:Copying training dataset
2023-11-24 16:21:32,954:INFO:Defining folds
2023-11-24 16:21:32,954:INFO:Declaring metric variables
2023-11-24 16:21:32,954:INFO:Importing untrained model
2023-11-24 16:21:32,954:INFO:Random Forest Classifier Imported successfully
2023-11-24 16:21:32,954:INFO:Starting cross validation
2023-11-24 16:21:32,955:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:21:34,339:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:34,341:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:34,342:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:21:34,343:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:34,562:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:34,565:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:34,566:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:21:34,567:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:34,736:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:34,739:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:34,740:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:21:34,741:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:34,762:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:34,762:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:34,763:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:34,764:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:34,764:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:34,765:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:34,765:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:21:34,766:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:21:34,766:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:34,766:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:21:34,767:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:34,767:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:34,767:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:34,767:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:34,767:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:34,770:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:34,770:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:34,770:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:34,771:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:21:34,771:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:21:34,771:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:21:34,772:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:34,772:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:34,772:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:34,774:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:34,776:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:34,778:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:21:34,779:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:34,783:INFO:Calculating mean and std
2023-11-24 16:21:34,783:INFO:Creating metrics dataframe
2023-11-24 16:21:34,784:INFO:Uploading results into container
2023-11-24 16:21:34,785:INFO:Uploading model into container now
2023-11-24 16:21:34,785:INFO:_master_model_container: 7
2023-11-24 16:21:34,785:INFO:_display_container: 2
2023-11-24 16:21:34,785:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=4746, verbose=0, warm_start=False)
2023-11-24 16:21:34,785:INFO:create_model() successfully completed......................................
2023-11-24 16:21:34,836:INFO:SubProcess create_model() end ==================================
2023-11-24 16:21:34,836:INFO:Creating metrics dataframe
2023-11-24 16:21:34,838:INFO:Initializing Quadratic Discriminant Analysis
2023-11-24 16:21:34,838:INFO:Total runtime is 0.22064038515090945 minutes
2023-11-24 16:21:34,838:INFO:SubProcess create_model() called ==================================
2023-11-24 16:21:34,838:INFO:Initializing create_model()
2023-11-24 16:21:34,838:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1516f64d0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x152ac06d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:21:34,839:INFO:Checking exceptions
2023-11-24 16:21:34,839:INFO:Importing libraries
2023-11-24 16:21:34,839:INFO:Copying training dataset
2023-11-24 16:21:34,841:INFO:Defining folds
2023-11-24 16:21:34,841:INFO:Declaring metric variables
2023-11-24 16:21:34,841:INFO:Importing untrained model
2023-11-24 16:21:34,841:INFO:Quadratic Discriminant Analysis Imported successfully
2023-11-24 16:21:34,841:INFO:Starting cross validation
2023-11-24 16:21:34,842:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:21:35,367:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 16:21:35,382:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 16:21:35,393:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 16:21:35,402:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 16:21:35,446:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 16:21:35,447:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 16:21:35,460:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 16:21:35,476:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 16:21:35,482:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 16:21:35,577:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 16:21:35,594:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:35,596:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:35,597:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:21:35,598:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:35,666:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:35,675:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:35,676:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:21:35,677:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:35,685:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:35,691:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:35,693:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:35,709:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:35,710:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:35,711:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:35,713:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:21:35,714:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:35,715:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:35,717:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:21:35,718:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:35,718:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:35,720:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:35,721:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:35,721:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:21:35,722:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:35,724:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:35,726:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:35,726:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:35,728:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:35,730:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:21:35,730:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:35,731:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:35,732:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:35,734:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:21:35,735:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:35,794:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:35,796:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:35,797:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:21:35,798:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:35,802:INFO:Calculating mean and std
2023-11-24 16:21:35,803:INFO:Creating metrics dataframe
2023-11-24 16:21:35,804:INFO:Uploading results into container
2023-11-24 16:21:35,804:INFO:Uploading model into container now
2023-11-24 16:21:35,804:INFO:_master_model_container: 8
2023-11-24 16:21:35,804:INFO:_display_container: 2
2023-11-24 16:21:35,805:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-11-24 16:21:35,805:INFO:create_model() successfully completed......................................
2023-11-24 16:21:35,857:INFO:SubProcess create_model() end ==================================
2023-11-24 16:21:35,858:INFO:Creating metrics dataframe
2023-11-24 16:21:35,859:INFO:Initializing Ada Boost Classifier
2023-11-24 16:21:35,859:INFO:Total runtime is 0.2376591483751933 minutes
2023-11-24 16:21:35,859:INFO:SubProcess create_model() called ==================================
2023-11-24 16:21:35,859:INFO:Initializing create_model()
2023-11-24 16:21:35,859:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1516f64d0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x152ac06d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:21:35,859:INFO:Checking exceptions
2023-11-24 16:21:35,859:INFO:Importing libraries
2023-11-24 16:21:35,859:INFO:Copying training dataset
2023-11-24 16:21:35,862:INFO:Defining folds
2023-11-24 16:21:35,862:INFO:Declaring metric variables
2023-11-24 16:21:35,862:INFO:Importing untrained model
2023-11-24 16:21:35,862:INFO:Ada Boost Classifier Imported successfully
2023-11-24 16:21:35,862:INFO:Starting cross validation
2023-11-24 16:21:35,863:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:21:37,124:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:37,127:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:37,129:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:37,179:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:37,182:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:37,184:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:37,199:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:37,202:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:37,205:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:37,207:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:37,210:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:37,212:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:37,228:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:37,230:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:37,233:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:37,239:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:37,242:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:37,244:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:37,249:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:37,251:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:37,251:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:37,253:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:37,253:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:37,255:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:37,291:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:37,293:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:37,295:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:37,337:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:37,340:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:37,342:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:37,346:INFO:Calculating mean and std
2023-11-24 16:21:37,346:INFO:Creating metrics dataframe
2023-11-24 16:21:37,347:INFO:Uploading results into container
2023-11-24 16:21:37,347:INFO:Uploading model into container now
2023-11-24 16:21:37,347:INFO:_master_model_container: 9
2023-11-24 16:21:37,347:INFO:_display_container: 2
2023-11-24 16:21:37,347:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=4746)
2023-11-24 16:21:37,347:INFO:create_model() successfully completed......................................
2023-11-24 16:21:37,399:INFO:SubProcess create_model() end ==================================
2023-11-24 16:21:37,399:INFO:Creating metrics dataframe
2023-11-24 16:21:37,400:INFO:Initializing Gradient Boosting Classifier
2023-11-24 16:21:37,400:INFO:Total runtime is 0.2633461674054464 minutes
2023-11-24 16:21:37,400:INFO:SubProcess create_model() called ==================================
2023-11-24 16:21:37,400:INFO:Initializing create_model()
2023-11-24 16:21:37,400:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1516f64d0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x152ac06d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:21:37,401:INFO:Checking exceptions
2023-11-24 16:21:37,401:INFO:Importing libraries
2023-11-24 16:21:37,401:INFO:Copying training dataset
2023-11-24 16:21:37,403:INFO:Defining folds
2023-11-24 16:21:37,403:INFO:Declaring metric variables
2023-11-24 16:21:37,403:INFO:Importing untrained model
2023-11-24 16:21:37,403:INFO:Gradient Boosting Classifier Imported successfully
2023-11-24 16:21:37,403:INFO:Starting cross validation
2023-11-24 16:21:37,404:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:21:45,288:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:45,292:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:45,294:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:45,331:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:45,336:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:45,338:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:45,370:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:45,373:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:45,375:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:45,376:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:45,378:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:45,388:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:45,393:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:45,395:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:45,398:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:45,400:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:45,402:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:45,404:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:45,462:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:45,464:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:45,467:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:45,474:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:45,476:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:45,478:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:45,479:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:45,481:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:45,483:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:45,532:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:45,534:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:45,536:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:45,540:INFO:Calculating mean and std
2023-11-24 16:21:45,540:INFO:Creating metrics dataframe
2023-11-24 16:21:45,541:INFO:Uploading results into container
2023-11-24 16:21:45,541:INFO:Uploading model into container now
2023-11-24 16:21:45,542:INFO:_master_model_container: 10
2023-11-24 16:21:45,542:INFO:_display_container: 2
2023-11-24 16:21:45,542:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=4746, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-11-24 16:21:45,542:INFO:create_model() successfully completed......................................
2023-11-24 16:21:45,593:INFO:SubProcess create_model() end ==================================
2023-11-24 16:21:45,593:INFO:Creating metrics dataframe
2023-11-24 16:21:45,595:INFO:Initializing Linear Discriminant Analysis
2023-11-24 16:21:45,595:INFO:Total runtime is 0.39992586771647143 minutes
2023-11-24 16:21:45,595:INFO:SubProcess create_model() called ==================================
2023-11-24 16:21:45,595:INFO:Initializing create_model()
2023-11-24 16:21:45,595:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1516f64d0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x152ac06d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:21:45,595:INFO:Checking exceptions
2023-11-24 16:21:45,595:INFO:Importing libraries
2023-11-24 16:21:45,595:INFO:Copying training dataset
2023-11-24 16:21:45,598:INFO:Defining folds
2023-11-24 16:21:45,598:INFO:Declaring metric variables
2023-11-24 16:21:45,598:INFO:Importing untrained model
2023-11-24 16:21:45,598:INFO:Linear Discriminant Analysis Imported successfully
2023-11-24 16:21:45,598:INFO:Starting cross validation
2023-11-24 16:21:45,599:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:21:46,356:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:46,358:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:46,363:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:46,382:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:46,385:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:46,391:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:46,417:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:46,427:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:46,429:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:46,435:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:46,438:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:46,440:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:46,453:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:46,456:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:46,456:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:46,458:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:46,458:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:46,458:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:46,460:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:46,461:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:46,463:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:46,469:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:46,471:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:46,472:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:46,473:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:46,474:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:46,477:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:46,496:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:46,498:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:46,500:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:46,504:INFO:Calculating mean and std
2023-11-24 16:21:46,504:INFO:Creating metrics dataframe
2023-11-24 16:21:46,505:INFO:Uploading results into container
2023-11-24 16:21:46,505:INFO:Uploading model into container now
2023-11-24 16:21:46,506:INFO:_master_model_container: 11
2023-11-24 16:21:46,506:INFO:_display_container: 2
2023-11-24 16:21:46,506:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-11-24 16:21:46,506:INFO:create_model() successfully completed......................................
2023-11-24 16:21:46,561:INFO:SubProcess create_model() end ==================================
2023-11-24 16:21:46,561:INFO:Creating metrics dataframe
2023-11-24 16:21:46,563:INFO:Initializing Extra Trees Classifier
2023-11-24 16:21:46,563:INFO:Total runtime is 0.416052532196045 minutes
2023-11-24 16:21:46,563:INFO:SubProcess create_model() called ==================================
2023-11-24 16:21:46,563:INFO:Initializing create_model()
2023-11-24 16:21:46,563:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1516f64d0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x152ac06d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:21:46,563:INFO:Checking exceptions
2023-11-24 16:21:46,563:INFO:Importing libraries
2023-11-24 16:21:46,563:INFO:Copying training dataset
2023-11-24 16:21:46,565:INFO:Defining folds
2023-11-24 16:21:46,565:INFO:Declaring metric variables
2023-11-24 16:21:46,565:INFO:Importing untrained model
2023-11-24 16:21:46,565:INFO:Extra Trees Classifier Imported successfully
2023-11-24 16:21:46,565:INFO:Starting cross validation
2023-11-24 16:21:46,566:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:21:47,987:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:47,989:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:47,992:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:48,342:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:48,344:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:48,345:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:21:48,346:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:48,782:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:48,785:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:48,787:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:48,794:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:48,796:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:48,798:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:48,805:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:48,807:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:48,808:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:21:48,810:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:48,812:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:48,814:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:48,815:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:48,817:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:48,817:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:48,818:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:21:48,819:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:48,819:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:48,822:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:48,823:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:21:48,824:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:48,824:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:48,827:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:48,828:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:21:48,828:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:48,829:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:48,831:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:48,832:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:21:48,833:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:21:48,837:INFO:Calculating mean and std
2023-11-24 16:21:48,837:INFO:Creating metrics dataframe
2023-11-24 16:21:48,838:INFO:Uploading results into container
2023-11-24 16:21:48,839:INFO:Uploading model into container now
2023-11-24 16:21:48,839:INFO:_master_model_container: 12
2023-11-24 16:21:48,839:INFO:_display_container: 2
2023-11-24 16:21:48,839:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=4746, verbose=0, warm_start=False)
2023-11-24 16:21:48,839:INFO:create_model() successfully completed......................................
2023-11-24 16:21:48,890:INFO:SubProcess create_model() end ==================================
2023-11-24 16:21:48,890:INFO:Creating metrics dataframe
2023-11-24 16:21:48,891:INFO:Initializing Extreme Gradient Boosting
2023-11-24 16:21:48,891:INFO:Total runtime is 0.4548608342806499 minutes
2023-11-24 16:21:48,891:INFO:SubProcess create_model() called ==================================
2023-11-24 16:21:48,891:INFO:Initializing create_model()
2023-11-24 16:21:48,891:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1516f64d0>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x152ac06d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:21:48,891:INFO:Checking exceptions
2023-11-24 16:21:48,891:INFO:Importing libraries
2023-11-24 16:21:48,891:INFO:Copying training dataset
2023-11-24 16:21:48,894:INFO:Defining folds
2023-11-24 16:21:48,894:INFO:Declaring metric variables
2023-11-24 16:21:48,894:INFO:Importing untrained model
2023-11-24 16:21:48,894:INFO:Extreme Gradient Boosting Imported successfully
2023-11-24 16:21:48,894:INFO:Starting cross validation
2023-11-24 16:21:48,895:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:22:03,992:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:22:03,995:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:22:03,998:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:22:04,397:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:22:04,400:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:22:04,402:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:22:05,786:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:22:05,789:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:22:05,795:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:22:05,946:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:22:05,948:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:22:05,950:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:22:05,991:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:22:05,993:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:22:05,995:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:22:06,055:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:22:06,057:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:22:06,060:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:22:06,153:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:22:06,155:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:22:06,157:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:22:06,268:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:22:06,270:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:22:06,273:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:22:06,287:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:22:06,288:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:22:06,290:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:22:06,290:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:22:06,292:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:22:06,292:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:22:06,299:INFO:Calculating mean and std
2023-11-24 16:22:06,299:INFO:Creating metrics dataframe
2023-11-24 16:22:06,300:INFO:Uploading results into container
2023-11-24 16:22:06,300:INFO:Uploading model into container now
2023-11-24 16:22:06,301:INFO:_master_model_container: 13
2023-11-24 16:22:06,301:INFO:_display_container: 2
2023-11-24 16:22:06,301:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', predictor=None, ...)
2023-11-24 16:22:06,301:INFO:create_model() successfully completed......................................
2023-11-24 16:22:06,353:INFO:SubProcess create_model() end ==================================
2023-11-24 16:22:06,353:INFO:Creating metrics dataframe
2023-11-24 16:22:06,355:INFO:Initializing Light Gradient Boosting Machine
2023-11-24 16:22:06,355:INFO:Total runtime is 0.745926316579183 minutes
2023-11-24 16:22:06,355:INFO:SubProcess create_model() called ==================================
2023-11-24 16:22:06,355:INFO:Initializing create_model()
2023-11-24 16:22:06,355:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1516f64d0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x152ac06d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:22:06,355:INFO:Checking exceptions
2023-11-24 16:22:06,355:INFO:Importing libraries
2023-11-24 16:22:06,355:INFO:Copying training dataset
2023-11-24 16:22:06,358:INFO:Defining folds
2023-11-24 16:22:06,358:INFO:Declaring metric variables
2023-11-24 16:22:06,358:INFO:Importing untrained model
2023-11-24 16:22:06,358:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-24 16:22:06,358:INFO:Starting cross validation
2023-11-24 16:22:06,359:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:22:07,007:WARNING:create_model() for lightgbm raised an exception or returned all 0.0, trying without fit_kwargs:
2023-11-24 16:22:07,008:WARNING:Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/sklearn.py", line 1142, in fit
    super().fit(
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/sklearn.py", line 842, in fit
    self._Booster = train(
                    ^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/engine.py", line 255, in train
    booster = Booster(params=params, train_set=train_set)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 3200, in __init__
    train_set.construct()
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 2276, in construct
    self._lazy_init(data=self.data, label=self.label, reference=None,
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 1959, in _lazy_init
    return self.set_feature_name(feature_name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 2639, in set_feature_name
    _safe_call(_LIB.LGBM_DatasetSetFeatureNames(
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 242, in _safe_call
    raise LightGBMError(_LIB.LGBM_GetLastError().decode('utf-8'))
lightgbm.basic.LightGBMError: Do not support special JSON characters in feature name.


2023-11-24 16:22:07,008:INFO:Initializing create_model()
2023-11-24 16:22:07,008:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1516f64d0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x152ac06d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:22:07,008:INFO:Checking exceptions
2023-11-24 16:22:07,008:INFO:Importing libraries
2023-11-24 16:22:07,008:INFO:Copying training dataset
2023-11-24 16:22:07,011:INFO:Defining folds
2023-11-24 16:22:07,011:INFO:Declaring metric variables
2023-11-24 16:22:07,011:INFO:Importing untrained model
2023-11-24 16:22:07,011:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-24 16:22:07,011:INFO:Starting cross validation
2023-11-24 16:22:07,012:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:22:07,802:ERROR:create_model() for lightgbm raised an exception or returned all 0.0:
2023-11-24 16:22:07,803:ERROR:Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/sklearn.py", line 1142, in fit
    super().fit(
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/sklearn.py", line 842, in fit
    self._Booster = train(
                    ^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/engine.py", line 255, in train
    booster = Booster(params=params, train_set=train_set)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 3200, in __init__
    train_set.construct()
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 2276, in construct
    self._lazy_init(data=self.data, label=self.label, reference=None,
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 1959, in _lazy_init
    return self.set_feature_name(feature_name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 2639, in set_feature_name
    _safe_call(_LIB.LGBM_DatasetSetFeatureNames(
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 242, in _safe_call
    raise LightGBMError(_LIB.LGBM_GetLastError().decode('utf-8'))
lightgbm.basic.LightGBMError: Do not support special JSON characters in feature name.


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/sklearn.py", line 1142, in fit
    super().fit(
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/sklearn.py", line 842, in fit
    self._Booster = train(
                    ^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/engine.py", line 255, in train
    booster = Booster(params=params, train_set=train_set)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 3200, in __init__
    train_set.construct()
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 2276, in construct
    self._lazy_init(data=self.data, label=self.label, reference=None,
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 1959, in _lazy_init
    return self.set_feature_name(feature_name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 2639, in set_feature_name
    _safe_call(_LIB.LGBM_DatasetSetFeatureNames(
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 242, in _safe_call
    raise LightGBMError(_LIB.LGBM_GetLastError().decode('utf-8'))
lightgbm.basic.LightGBMError: Do not support special JSON characters in feature name.


2023-11-24 16:22:07,803:INFO:Initializing Dummy Classifier
2023-11-24 16:22:07,803:INFO:Total runtime is 0.7700608174006144 minutes
2023-11-24 16:22:07,803:INFO:SubProcess create_model() called ==================================
2023-11-24 16:22:07,804:INFO:Initializing create_model()
2023-11-24 16:22:07,804:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1516f64d0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x152ac06d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:22:07,804:INFO:Checking exceptions
2023-11-24 16:22:07,804:INFO:Importing libraries
2023-11-24 16:22:07,804:INFO:Copying training dataset
2023-11-24 16:22:07,807:INFO:Defining folds
2023-11-24 16:22:07,807:INFO:Declaring metric variables
2023-11-24 16:22:07,807:INFO:Importing untrained model
2023-11-24 16:22:07,807:INFO:Dummy Classifier Imported successfully
2023-11-24 16:22:07,807:INFO:Starting cross validation
2023-11-24 16:22:07,808:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:22:08,352:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:22:08,357:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:22:08,362:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:22:08,365:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:22:08,419:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:22:08,430:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:22:08,435:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:22:08,437:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:22:08,461:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:22:08,464:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:22:08,466:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:22:08,467:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:22:08,480:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:22:08,483:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:22:08,484:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:22:08,485:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:22:08,489:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:22:08,491:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:22:08,492:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:22:08,493:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:22:08,502:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:22:08,504:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:22:08,506:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:22:08,507:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:22:08,517:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:22:08,519:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:22:08,520:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:22:08,521:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:22:08,521:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:22:08,522:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:22:08,523:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:22:08,523:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:22:08,524:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:22:08,524:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:22:08,525:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:22:08,525:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:22:08,525:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:22:08,528:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:22:08,530:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:22:08,531:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:22:08,535:INFO:Calculating mean and std
2023-11-24 16:22:08,536:INFO:Creating metrics dataframe
2023-11-24 16:22:08,537:INFO:Uploading results into container
2023-11-24 16:22:08,537:INFO:Uploading model into container now
2023-11-24 16:22:08,537:INFO:_master_model_container: 14
2023-11-24 16:22:08,537:INFO:_display_container: 2
2023-11-24 16:22:08,538:INFO:DummyClassifier(constant=None, random_state=4746, strategy='prior')
2023-11-24 16:22:08,538:INFO:create_model() successfully completed......................................
2023-11-24 16:22:08,628:INFO:SubProcess create_model() end ==================================
2023-11-24 16:22:08,628:INFO:Creating metrics dataframe
2023-11-24 16:22:08,632:INFO:Initializing create_model()
2023-11-24 16:22:08,632:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1516f64d0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', predictor=None, ...), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:22:08,632:INFO:Checking exceptions
2023-11-24 16:22:08,632:INFO:Importing libraries
2023-11-24 16:22:08,632:INFO:Copying training dataset
2023-11-24 16:22:08,635:INFO:Defining folds
2023-11-24 16:22:08,635:INFO:Declaring metric variables
2023-11-24 16:22:08,635:INFO:Importing untrained model
2023-11-24 16:22:08,635:INFO:Declaring custom model
2023-11-24 16:22:08,636:INFO:Extreme Gradient Boosting Imported successfully
2023-11-24 16:22:08,637:INFO:Cross validation set to False
2023-11-24 16:22:08,637:INFO:Fitting Model
2023-11-24 16:22:11,336:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='multi:softprob', predictor=None, ...)
2023-11-24 16:22:11,337:INFO:create_model() successfully completed......................................
2023-11-24 16:22:11,398:INFO:_master_model_container: 14
2023-11-24 16:22:11,399:INFO:_display_container: 2
2023-11-24 16:22:11,399:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='multi:softprob', predictor=None, ...)
2023-11-24 16:22:11,399:INFO:compare_models() successfully completed......................................
2023-11-24 16:22:11,404:INFO:Initializing save_model()
2023-11-24 16:22:11,404:INFO:save_model(model=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='multi:softprob', predictor=None, ...), model_name=best_model, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/46/tcczvndd7xj_pqs5r176bl600000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Number_of_vehicles_involved',
                                             'Number_of_casualties'],
                                    transformer=SimpleImputer(add_i...
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['Time'],
                                    transformer=TargetEncoder(cols=['Time'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-11-24 16:22:11,404:INFO:Adding model into prep_pipe
2023-11-24 16:22:11,427:INFO:best_model.pkl saved in current working directory
2023-11-24 16:22:11,432:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Number_of_vehicles_involved',
                                             'Number_of_casualties'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_fea...
                               grow_policy=None, importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, n_estimators=100,
                               n_jobs=-1, num_parallel_tree=None,
                               objective='multi:softprob', predictor=None, ...))],
         verbose=False)
2023-11-24 16:22:11,432:INFO:save_model() successfully completed......................................
2023-11-24 16:24:39,948:INFO:PyCaret ClassificationExperiment
2023-11-24 16:24:39,949:INFO:Logging name: clf-default-name
2023-11-24 16:24:39,949:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-11-24 16:24:39,949:INFO:version 3.2.0
2023-11-24 16:24:39,949:INFO:Initializing setup()
2023-11-24 16:24:39,949:INFO:self.USI: 82c1
2023-11-24 16:24:39,949:INFO:self._variable_keys: {'_available_plots', 'fix_imbalance', 'fold_shuffle_param', 'exp_id', 'y_test', 'y_train', 'n_jobs_param', 'memory', 'log_plots_param', 'html_param', 'gpu_param', '_ml_usecase', 'idx', 'pipeline', 'is_multiclass', 'seed', 'X_test', 'logging_param', 'data', 'fold_generator', 'exp_name_log', 'USI', 'X', 'fold_groups_param', 'X_train', 'y', 'gpu_n_jobs_param', 'target_param'}
2023-11-24 16:24:39,949:INFO:Checking environment
2023-11-24 16:24:39,949:INFO:python_version: 3.11.5
2023-11-24 16:24:39,949:INFO:python_build: ('main', 'Sep 11 2023 08:31:25')
2023-11-24 16:24:39,949:INFO:machine: arm64
2023-11-24 16:24:39,949:INFO:platform: macOS-14.0-arm64-arm-64bit
2023-11-24 16:24:39,949:INFO:Memory: svmem(total=17179869184, available=4538007552, percent=73.6, used=6481657856, free=42074112, active=4517953536, inactive=4492410880, wired=1963704320)
2023-11-24 16:24:39,949:INFO:Physical Core: 10
2023-11-24 16:24:39,949:INFO:Logical Core: 10
2023-11-24 16:24:39,949:INFO:Checking libraries
2023-11-24 16:24:39,949:INFO:System:
2023-11-24 16:24:39,949:INFO:    python: 3.11.5 (main, Sep 11 2023, 08:31:25) [Clang 14.0.6 ]
2023-11-24 16:24:39,949:INFO:executable: /Users/saiakhil/anaconda3/envs/mlauto/bin/python
2023-11-24 16:24:39,949:INFO:   machine: macOS-14.0-arm64-arm-64bit
2023-11-24 16:24:39,949:INFO:PyCaret required dependencies:
2023-11-24 16:24:39,949:INFO:                 pip: 23.3.1
2023-11-24 16:24:39,949:INFO:          setuptools: 68.0.0
2023-11-24 16:24:39,949:INFO:             pycaret: 3.2.0
2023-11-24 16:24:39,949:INFO:             IPython: 8.15.0
2023-11-24 16:24:39,949:INFO:          ipywidgets: 8.1.1
2023-11-24 16:24:39,949:INFO:                tqdm: 4.66.1
2023-11-24 16:24:39,949:INFO:               numpy: 1.25.2
2023-11-24 16:24:39,949:INFO:              pandas: 1.5.3
2023-11-24 16:24:39,949:INFO:              jinja2: 3.1.2
2023-11-24 16:24:39,949:INFO:               scipy: 1.11.3
2023-11-24 16:24:39,949:INFO:              joblib: 1.3.2
2023-11-24 16:24:39,949:INFO:             sklearn: 1.2.2
2023-11-24 16:24:39,949:INFO:                pyod: 1.1.2
2023-11-24 16:24:39,949:INFO:            imblearn: 0.11.0
2023-11-24 16:24:39,949:INFO:   category_encoders: 2.6.3
2023-11-24 16:24:39,949:INFO:            lightgbm: 4.1.0
2023-11-24 16:24:39,949:INFO:               numba: 0.58.1
2023-11-24 16:24:39,949:INFO:            requests: 2.31.0
2023-11-24 16:24:39,949:INFO:          matplotlib: 3.6.0
2023-11-24 16:24:39,949:INFO:          scikitplot: 0.3.7
2023-11-24 16:24:39,949:INFO:         yellowbrick: 1.5
2023-11-24 16:24:39,949:INFO:              plotly: 5.18.0
2023-11-24 16:24:39,949:INFO:    plotly-resampler: Not installed
2023-11-24 16:24:39,949:INFO:             kaleido: 0.2.1
2023-11-24 16:24:39,949:INFO:           schemdraw: 0.15
2023-11-24 16:24:39,949:INFO:         statsmodels: 0.14.0
2023-11-24 16:24:39,949:INFO:              sktime: 0.21.1
2023-11-24 16:24:39,949:INFO:               tbats: 1.1.3
2023-11-24 16:24:39,949:INFO:            pmdarima: 2.0.4
2023-11-24 16:24:39,949:INFO:              psutil: 5.9.6
2023-11-24 16:24:39,949:INFO:          markupsafe: 2.1.3
2023-11-24 16:24:39,949:INFO:             pickle5: Not installed
2023-11-24 16:24:39,949:INFO:         cloudpickle: 3.0.0
2023-11-24 16:24:39,949:INFO:         deprecation: 2.1.0
2023-11-24 16:24:39,949:INFO:              xxhash: 3.4.1
2023-11-24 16:24:39,949:INFO:           wurlitzer: 3.0.3
2023-11-24 16:24:39,949:INFO:PyCaret optional dependencies:
2023-11-24 16:24:39,949:INFO:                shap: Not installed
2023-11-24 16:24:39,949:INFO:           interpret: Not installed
2023-11-24 16:24:39,949:INFO:                umap: Not installed
2023-11-24 16:24:39,949:INFO:     ydata_profiling: 4.6.2
2023-11-24 16:24:39,949:INFO:  explainerdashboard: Not installed
2023-11-24 16:24:39,949:INFO:             autoviz: Not installed
2023-11-24 16:24:39,949:INFO:           fairlearn: Not installed
2023-11-24 16:24:39,949:INFO:          deepchecks: Not installed
2023-11-24 16:24:39,949:INFO:             xgboost: 1.7.3
2023-11-24 16:24:39,949:INFO:            catboost: Not installed
2023-11-24 16:24:39,949:INFO:              kmodes: Not installed
2023-11-24 16:24:39,949:INFO:             mlxtend: Not installed
2023-11-24 16:24:39,949:INFO:       statsforecast: Not installed
2023-11-24 16:24:39,949:INFO:        tune_sklearn: Not installed
2023-11-24 16:24:39,949:INFO:                 ray: Not installed
2023-11-24 16:24:39,949:INFO:            hyperopt: Not installed
2023-11-24 16:24:39,949:INFO:              optuna: Not installed
2023-11-24 16:24:39,949:INFO:               skopt: Not installed
2023-11-24 16:24:39,949:INFO:              mlflow: Not installed
2023-11-24 16:24:39,949:INFO:              gradio: Not installed
2023-11-24 16:24:39,949:INFO:             fastapi: Not installed
2023-11-24 16:24:39,949:INFO:             uvicorn: Not installed
2023-11-24 16:24:39,949:INFO:              m2cgen: Not installed
2023-11-24 16:24:39,949:INFO:           evidently: Not installed
2023-11-24 16:24:39,949:INFO:               fugue: Not installed
2023-11-24 16:24:39,949:INFO:           streamlit: 1.28.2
2023-11-24 16:24:39,950:INFO:             prophet: Not installed
2023-11-24 16:24:39,950:INFO:None
2023-11-24 16:24:39,950:INFO:Set up data.
2023-11-24 16:24:39,974:INFO:Set up folding strategy.
2023-11-24 16:24:39,974:INFO:Set up train/test split.
2023-11-24 16:24:39,982:INFO:Set up index.
2023-11-24 16:24:39,982:INFO:Assigning column types.
2023-11-24 16:24:39,983:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-24 16:24:40,000:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 16:24:40,000:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:24:40,011:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:24:40,012:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:24:40,029:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 16:24:40,029:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:24:40,040:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:24:40,041:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:24:40,041:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-11-24 16:24:40,058:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:24:40,069:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:24:40,070:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:24:40,087:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:24:40,097:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:24:40,098:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:24:40,099:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-11-24 16:24:40,126:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:24:40,127:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:24:40,155:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:24:40,156:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:24:40,156:INFO:Preparing preprocessing pipeline...
2023-11-24 16:24:40,156:INFO:Set up label encoding.
2023-11-24 16:24:40,156:INFO:Set up simple imputation.
2023-11-24 16:24:40,159:INFO:Set up encoding of categorical features.
2023-11-24 16:24:40,537:INFO:Finished creating preprocessing pipeline.
2023-11-24 16:24:40,539:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/46/tcczvndd7xj_pqs5r176bl600000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Number_of_vehicles_involved',
                                             'Number_of_casualties'],
                                    transformer=SimpleImputer(add_i...
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['Time'],
                                    transformer=TargetEncoder(cols=['Time'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2023-11-24 16:24:40,539:INFO:Creating final display dataframe.
2023-11-24 16:24:40,992:INFO:Setup _display_container:                     Description                                              Value
0                    Session id                                               8910
1                        Target                                  Accident_severity
2                   Target type                                         Multiclass
3                Target mapping  Fatal injury: 0, Serious Injury: 1, Slight Inj...
4           Original data shape                                        (12316, 32)
5        Transformed data shape                                       (12316, 208)
6   Transformed train set shape                                        (8621, 208)
7    Transformed test set shape                                        (3695, 208)
8              Numeric features                                                  2
9          Categorical features                                                 29
10     Rows with missing values                                              76.5%
11                   Preprocess                                               True
12              Imputation type                                             simple
13           Numeric imputation                                               mean
14       Categorical imputation                                               mode
15     Maximum one-hot encoding                                                 25
16              Encoding method                                               None
17               Fold Generator                                    StratifiedKFold
18                  Fold Number                                                 10
19                     CPU Jobs                                                 -1
20                      Use GPU                                              False
21               Log Experiment                                              False
22              Experiment Name                                   clf-default-name
23                          USI                                               82c1
2023-11-24 16:24:41,022:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:24:41,023:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:24:41,050:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:24:41,051:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:24:41,051:INFO:setup() successfully completed in 1.1s...............
2023-11-24 16:24:41,052:INFO:Initializing compare_models()
2023-11-24 16:24:41,052:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2a4b7d410>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x2a4b7d410>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2023-11-24 16:24:41,052:INFO:Checking exceptions
2023-11-24 16:24:41,054:INFO:Preparing display monitor
2023-11-24 16:24:41,055:INFO:Initializing Logistic Regression
2023-11-24 16:24:41,055:INFO:Total runtime is 6.039937337239583e-07 minutes
2023-11-24 16:24:41,055:INFO:SubProcess create_model() called ==================================
2023-11-24 16:24:41,055:INFO:Initializing create_model()
2023-11-24 16:24:41,055:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2a4b7d410>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2b55fc2d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:24:41,055:INFO:Checking exceptions
2023-11-24 16:24:41,055:INFO:Importing libraries
2023-11-24 16:24:41,055:INFO:Copying training dataset
2023-11-24 16:24:41,057:INFO:Defining folds
2023-11-24 16:24:41,057:INFO:Declaring metric variables
2023-11-24 16:24:41,057:INFO:Importing untrained model
2023-11-24 16:24:41,057:INFO:Logistic Regression Imported successfully
2023-11-24 16:24:41,057:INFO:Starting cross validation
2023-11-24 16:24:41,058:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:24:45,827:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:45,829:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:45,832:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:46,200:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:46,202:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:46,204:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:24:46,205:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:46,293:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:46,296:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:46,298:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:46,321:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:46,323:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:46,326:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:46,336:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:46,338:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:46,341:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:46,382:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:46,384:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:46,387:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:46,393:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:46,395:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:46,397:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:24:46,398:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:46,400:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:46,402:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:46,403:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:24:46,405:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:46,646:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:46,648:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:46,649:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:24:46,650:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:46,686:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:46,688:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:46,691:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:46,696:INFO:Calculating mean and std
2023-11-24 16:24:46,696:INFO:Creating metrics dataframe
2023-11-24 16:24:46,698:INFO:Uploading results into container
2023-11-24 16:24:46,699:INFO:Uploading model into container now
2023-11-24 16:24:46,699:INFO:_master_model_container: 1
2023-11-24 16:24:46,699:INFO:_display_container: 2
2023-11-24 16:24:46,699:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8910, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-11-24 16:24:46,699:INFO:create_model() successfully completed......................................
2023-11-24 16:24:46,829:INFO:SubProcess create_model() end ==================================
2023-11-24 16:24:46,829:INFO:Creating metrics dataframe
2023-11-24 16:24:46,831:INFO:Initializing K Neighbors Classifier
2023-11-24 16:24:46,831:INFO:Total runtime is 0.09626628557840983 minutes
2023-11-24 16:24:46,831:INFO:SubProcess create_model() called ==================================
2023-11-24 16:24:46,831:INFO:Initializing create_model()
2023-11-24 16:24:46,831:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2a4b7d410>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2b55fc2d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:24:46,831:INFO:Checking exceptions
2023-11-24 16:24:46,831:INFO:Importing libraries
2023-11-24 16:24:46,831:INFO:Copying training dataset
2023-11-24 16:24:46,834:INFO:Defining folds
2023-11-24 16:24:46,834:INFO:Declaring metric variables
2023-11-24 16:24:46,834:INFO:Importing untrained model
2023-11-24 16:24:46,834:INFO:K Neighbors Classifier Imported successfully
2023-11-24 16:24:46,834:INFO:Starting cross validation
2023-11-24 16:24:46,835:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:24:47,876:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:47,878:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:47,888:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:24:47,889:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:47,894:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:47,896:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:47,900:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:47,903:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:47,905:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:47,906:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:47,907:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:47,908:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:47,909:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:24:47,910:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:47,913:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:47,915:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:47,917:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:47,928:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:47,930:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:47,931:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:24:47,932:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:47,932:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:47,934:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:47,936:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:47,936:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:47,938:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:47,938:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:47,940:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:47,940:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:47,942:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:24:47,943:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:47,961:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:47,964:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:47,965:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:24:47,966:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:47,971:INFO:Calculating mean and std
2023-11-24 16:24:47,971:INFO:Creating metrics dataframe
2023-11-24 16:24:47,972:INFO:Uploading results into container
2023-11-24 16:24:47,972:INFO:Uploading model into container now
2023-11-24 16:24:47,972:INFO:_master_model_container: 2
2023-11-24 16:24:47,972:INFO:_display_container: 2
2023-11-24 16:24:47,973:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-11-24 16:24:47,973:INFO:create_model() successfully completed......................................
2023-11-24 16:24:48,056:INFO:SubProcess create_model() end ==================================
2023-11-24 16:24:48,056:INFO:Creating metrics dataframe
2023-11-24 16:24:48,058:INFO:Initializing Naive Bayes
2023-11-24 16:24:48,058:INFO:Total runtime is 0.116712220509847 minutes
2023-11-24 16:24:48,058:INFO:SubProcess create_model() called ==================================
2023-11-24 16:24:48,058:INFO:Initializing create_model()
2023-11-24 16:24:48,058:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2a4b7d410>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2b55fc2d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:24:48,058:INFO:Checking exceptions
2023-11-24 16:24:48,058:INFO:Importing libraries
2023-11-24 16:24:48,058:INFO:Copying training dataset
2023-11-24 16:24:48,060:INFO:Defining folds
2023-11-24 16:24:48,060:INFO:Declaring metric variables
2023-11-24 16:24:48,060:INFO:Importing untrained model
2023-11-24 16:24:48,060:INFO:Naive Bayes Imported successfully
2023-11-24 16:24:48,060:INFO:Starting cross validation
2023-11-24 16:24:48,061:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:24:48,687:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:48,690:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:48,692:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:48,738:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:48,749:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:48,757:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:48,767:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:48,767:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:48,770:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:48,772:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:48,778:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:48,780:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:48,781:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:48,783:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:48,786:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:48,791:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:48,793:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:48,796:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:48,798:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:48,800:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:48,801:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:48,803:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:48,803:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:48,805:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:48,827:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:48,829:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:48,831:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:48,833:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:48,835:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:48,838:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:48,842:INFO:Calculating mean and std
2023-11-24 16:24:48,843:INFO:Creating metrics dataframe
2023-11-24 16:24:48,844:INFO:Uploading results into container
2023-11-24 16:24:48,844:INFO:Uploading model into container now
2023-11-24 16:24:48,844:INFO:_master_model_container: 3
2023-11-24 16:24:48,844:INFO:_display_container: 2
2023-11-24 16:24:48,845:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-11-24 16:24:48,845:INFO:create_model() successfully completed......................................
2023-11-24 16:24:48,928:INFO:SubProcess create_model() end ==================================
2023-11-24 16:24:48,928:INFO:Creating metrics dataframe
2023-11-24 16:24:48,930:INFO:Initializing Decision Tree Classifier
2023-11-24 16:24:48,930:INFO:Total runtime is 0.13124983708063762 minutes
2023-11-24 16:24:48,930:INFO:SubProcess create_model() called ==================================
2023-11-24 16:24:48,930:INFO:Initializing create_model()
2023-11-24 16:24:48,930:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2a4b7d410>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2b55fc2d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:24:48,930:INFO:Checking exceptions
2023-11-24 16:24:48,930:INFO:Importing libraries
2023-11-24 16:24:48,930:INFO:Copying training dataset
2023-11-24 16:24:48,932:INFO:Defining folds
2023-11-24 16:24:48,932:INFO:Declaring metric variables
2023-11-24 16:24:48,932:INFO:Importing untrained model
2023-11-24 16:24:48,932:INFO:Decision Tree Classifier Imported successfully
2023-11-24 16:24:48,932:INFO:Starting cross validation
2023-11-24 16:24:48,933:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:24:49,669:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:49,671:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:49,673:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:49,680:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:49,683:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:49,685:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:49,719:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:49,721:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:49,724:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:49,725:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:49,726:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:49,727:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:49,764:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:49,765:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:49,766:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:49,767:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:49,768:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:49,770:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:49,772:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:49,774:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:49,776:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:49,780:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:49,782:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:49,785:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:49,787:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:49,790:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:49,790:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:49,792:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:49,792:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:49,794:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:49,799:INFO:Calculating mean and std
2023-11-24 16:24:49,799:INFO:Creating metrics dataframe
2023-11-24 16:24:49,800:INFO:Uploading results into container
2023-11-24 16:24:49,800:INFO:Uploading model into container now
2023-11-24 16:24:49,801:INFO:_master_model_container: 4
2023-11-24 16:24:49,801:INFO:_display_container: 2
2023-11-24 16:24:49,801:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8910, splitter='best')
2023-11-24 16:24:49,801:INFO:create_model() successfully completed......................................
2023-11-24 16:24:49,885:INFO:SubProcess create_model() end ==================================
2023-11-24 16:24:49,885:INFO:Creating metrics dataframe
2023-11-24 16:24:49,886:INFO:Initializing SVM - Linear Kernel
2023-11-24 16:24:49,887:INFO:Total runtime is 0.14719425042470297 minutes
2023-11-24 16:24:49,887:INFO:SubProcess create_model() called ==================================
2023-11-24 16:24:49,887:INFO:Initializing create_model()
2023-11-24 16:24:49,887:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2a4b7d410>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2b55fc2d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:24:49,887:INFO:Checking exceptions
2023-11-24 16:24:49,887:INFO:Importing libraries
2023-11-24 16:24:49,887:INFO:Copying training dataset
2023-11-24 16:24:49,889:INFO:Defining folds
2023-11-24 16:24:49,889:INFO:Declaring metric variables
2023-11-24 16:24:49,889:INFO:Importing untrained model
2023-11-24 16:24:49,889:INFO:SVM - Linear Kernel Imported successfully
2023-11-24 16:24:49,889:INFO:Starting cross validation
2023-11-24 16:24:49,890:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:24:51,098:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:24:51,099:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:51,102:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:51,103:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:24:51,104:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:51,356:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:24:51,357:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:51,359:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:51,361:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:24:51,361:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:51,378:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:24:51,379:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:51,382:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:51,384:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:51,398:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:24:51,399:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:51,401:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:51,403:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:51,416:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:24:51,417:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:51,421:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:51,423:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:51,424:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:24:51,425:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:51,428:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:51,430:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:51,460:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:24:51,461:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:51,464:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:51,465:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:24:51,466:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:51,471:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:24:51,472:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:51,474:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:51,476:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:51,476:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:24:51,477:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:51,479:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:51,481:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:51,502:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:24:51,503:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:51,505:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:51,507:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:24:51,507:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:51,511:INFO:Calculating mean and std
2023-11-24 16:24:51,511:INFO:Creating metrics dataframe
2023-11-24 16:24:51,512:INFO:Uploading results into container
2023-11-24 16:24:51,512:INFO:Uploading model into container now
2023-11-24 16:24:51,513:INFO:_master_model_container: 5
2023-11-24 16:24:51,513:INFO:_display_container: 2
2023-11-24 16:24:51,513:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=8910, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-11-24 16:24:51,513:INFO:create_model() successfully completed......................................
2023-11-24 16:24:51,597:INFO:SubProcess create_model() end ==================================
2023-11-24 16:24:51,597:INFO:Creating metrics dataframe
2023-11-24 16:24:51,599:INFO:Initializing Ridge Classifier
2023-11-24 16:24:51,599:INFO:Total runtime is 0.17573428551356 minutes
2023-11-24 16:24:51,599:INFO:SubProcess create_model() called ==================================
2023-11-24 16:24:51,599:INFO:Initializing create_model()
2023-11-24 16:24:51,599:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2a4b7d410>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2b55fc2d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:24:51,599:INFO:Checking exceptions
2023-11-24 16:24:51,599:INFO:Importing libraries
2023-11-24 16:24:51,599:INFO:Copying training dataset
2023-11-24 16:24:51,601:INFO:Defining folds
2023-11-24 16:24:51,601:INFO:Declaring metric variables
2023-11-24 16:24:51,601:INFO:Importing untrained model
2023-11-24 16:24:51,601:INFO:Ridge Classifier Imported successfully
2023-11-24 16:24:51,601:INFO:Starting cross validation
2023-11-24 16:24:51,602:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:24:52,252:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:24:52,253:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:52,265:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:52,266:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:24:52,267:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:52,285:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:24:52,286:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:52,288:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:52,290:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:24:52,290:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:52,292:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:24:52,296:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:52,304:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:52,306:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:24:52,307:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:52,313:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:24:52,314:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:52,316:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:52,318:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:24:52,318:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:52,331:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:24:52,331:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:24:52,332:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:52,332:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:52,334:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:52,335:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:52,335:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:24:52,336:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:24:52,336:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:52,336:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:24:52,337:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:52,337:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:52,340:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:52,340:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:24:52,341:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:24:52,341:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:52,342:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:52,343:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:52,344:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:24:52,345:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:24:52,345:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:52,345:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:52,347:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:52,348:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:24:52,349:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:52,364:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:24:52,365:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:52,367:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:52,368:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:24:52,369:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:52,373:INFO:Calculating mean and std
2023-11-24 16:24:52,373:INFO:Creating metrics dataframe
2023-11-24 16:24:52,375:INFO:Uploading results into container
2023-11-24 16:24:52,375:INFO:Uploading model into container now
2023-11-24 16:24:52,375:INFO:_master_model_container: 6
2023-11-24 16:24:52,375:INFO:_display_container: 2
2023-11-24 16:24:52,375:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=8910, solver='auto',
                tol=0.0001)
2023-11-24 16:24:52,375:INFO:create_model() successfully completed......................................
2023-11-24 16:24:52,461:INFO:SubProcess create_model() end ==================================
2023-11-24 16:24:52,461:INFO:Creating metrics dataframe
2023-11-24 16:24:52,463:INFO:Initializing Random Forest Classifier
2023-11-24 16:24:52,463:INFO:Total runtime is 0.1901287873586019 minutes
2023-11-24 16:24:52,463:INFO:SubProcess create_model() called ==================================
2023-11-24 16:24:52,463:INFO:Initializing create_model()
2023-11-24 16:24:52,463:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2a4b7d410>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2b55fc2d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:24:52,463:INFO:Checking exceptions
2023-11-24 16:24:52,463:INFO:Importing libraries
2023-11-24 16:24:52,463:INFO:Copying training dataset
2023-11-24 16:24:52,465:INFO:Defining folds
2023-11-24 16:24:52,465:INFO:Declaring metric variables
2023-11-24 16:24:52,465:INFO:Importing untrained model
2023-11-24 16:24:52,465:INFO:Random Forest Classifier Imported successfully
2023-11-24 16:24:52,465:INFO:Starting cross validation
2023-11-24 16:24:52,466:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:24:53,828:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:53,830:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:53,832:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:24:53,833:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:54,271:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:54,274:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:54,275:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:24:54,276:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:54,312:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:54,315:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:54,316:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:24:54,317:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:54,344:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:54,346:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:54,347:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:24:54,349:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:54,365:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:54,367:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:54,370:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:54,371:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:24:54,371:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:54,372:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:54,376:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:24:54,377:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:54,386:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:54,389:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:54,389:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:54,391:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:24:54,391:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:54,391:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:54,391:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:54,392:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:54,392:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:24:54,393:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:54,393:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:54,393:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:54,395:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:24:54,395:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:24:54,396:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:54,396:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:54,400:INFO:Calculating mean and std
2023-11-24 16:24:54,400:INFO:Creating metrics dataframe
2023-11-24 16:24:54,402:INFO:Uploading results into container
2023-11-24 16:24:54,402:INFO:Uploading model into container now
2023-11-24 16:24:54,402:INFO:_master_model_container: 7
2023-11-24 16:24:54,402:INFO:_display_container: 2
2023-11-24 16:24:54,402:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=8910, verbose=0, warm_start=False)
2023-11-24 16:24:54,402:INFO:create_model() successfully completed......................................
2023-11-24 16:24:54,492:INFO:SubProcess create_model() end ==================================
2023-11-24 16:24:54,492:INFO:Creating metrics dataframe
2023-11-24 16:24:54,494:INFO:Initializing Quadratic Discriminant Analysis
2023-11-24 16:24:54,494:INFO:Total runtime is 0.2239871342976888 minutes
2023-11-24 16:24:54,494:INFO:SubProcess create_model() called ==================================
2023-11-24 16:24:54,494:INFO:Initializing create_model()
2023-11-24 16:24:54,494:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2a4b7d410>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2b55fc2d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:24:54,494:INFO:Checking exceptions
2023-11-24 16:24:54,494:INFO:Importing libraries
2023-11-24 16:24:54,494:INFO:Copying training dataset
2023-11-24 16:24:54,497:INFO:Defining folds
2023-11-24 16:24:54,497:INFO:Declaring metric variables
2023-11-24 16:24:54,497:INFO:Importing untrained model
2023-11-24 16:24:54,497:INFO:Quadratic Discriminant Analysis Imported successfully
2023-11-24 16:24:54,497:INFO:Starting cross validation
2023-11-24 16:24:54,498:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:24:54,894:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 16:24:55,019:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 16:24:55,052:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 16:24:55,052:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 16:24:55,069:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 16:24:55,114:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 16:24:55,190:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:55,193:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:55,195:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:24:55,196:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:55,198:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 16:24:55,214:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 16:24:55,231:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 16:24:55,236:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 16:24:55,295:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:55,302:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:55,303:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:55,304:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:24:55,304:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:55,305:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:55,306:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:24:55,307:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:55,318:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:55,321:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:55,322:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:24:55,323:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:55,379:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:55,381:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:55,383:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:24:55,384:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:55,387:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:55,390:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:55,392:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:55,397:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:55,400:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:55,401:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:24:55,402:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:55,415:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:55,418:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:55,419:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:24:55,420:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:55,421:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:55,423:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:55,426:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:55,429:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:55,432:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:55,433:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:24:55,434:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:55,440:INFO:Calculating mean and std
2023-11-24 16:24:55,441:INFO:Creating metrics dataframe
2023-11-24 16:24:55,446:INFO:Uploading results into container
2023-11-24 16:24:55,446:INFO:Uploading model into container now
2023-11-24 16:24:55,446:INFO:_master_model_container: 8
2023-11-24 16:24:55,446:INFO:_display_container: 2
2023-11-24 16:24:55,447:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-11-24 16:24:55,447:INFO:create_model() successfully completed......................................
2023-11-24 16:24:55,535:INFO:SubProcess create_model() end ==================================
2023-11-24 16:24:55,536:INFO:Creating metrics dataframe
2023-11-24 16:24:55,537:INFO:Initializing Ada Boost Classifier
2023-11-24 16:24:55,537:INFO:Total runtime is 0.2413712978363037 minutes
2023-11-24 16:24:55,537:INFO:SubProcess create_model() called ==================================
2023-11-24 16:24:55,537:INFO:Initializing create_model()
2023-11-24 16:24:55,537:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2a4b7d410>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2b55fc2d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:24:55,537:INFO:Checking exceptions
2023-11-24 16:24:55,537:INFO:Importing libraries
2023-11-24 16:24:55,537:INFO:Copying training dataset
2023-11-24 16:24:55,540:INFO:Defining folds
2023-11-24 16:24:55,540:INFO:Declaring metric variables
2023-11-24 16:24:55,540:INFO:Importing untrained model
2023-11-24 16:24:55,540:INFO:Ada Boost Classifier Imported successfully
2023-11-24 16:24:55,540:INFO:Starting cross validation
2023-11-24 16:24:55,541:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:24:56,939:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:56,941:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:56,943:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:56,953:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:56,956:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:56,958:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:56,966:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:56,972:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:56,975:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:56,975:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:56,980:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:56,981:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:56,984:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:56,986:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:56,986:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:56,987:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:56,991:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:56,993:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:56,993:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:56,996:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:56,998:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:57,000:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:57,002:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:57,004:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:57,031:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:57,033:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:57,035:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:57,076:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:57,079:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:57,081:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:24:57,086:INFO:Calculating mean and std
2023-11-24 16:24:57,086:INFO:Creating metrics dataframe
2023-11-24 16:24:57,087:INFO:Uploading results into container
2023-11-24 16:24:57,087:INFO:Uploading model into container now
2023-11-24 16:24:57,087:INFO:_master_model_container: 9
2023-11-24 16:24:57,087:INFO:_display_container: 2
2023-11-24 16:24:57,088:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=8910)
2023-11-24 16:24:57,088:INFO:create_model() successfully completed......................................
2023-11-24 16:24:57,172:INFO:SubProcess create_model() end ==================================
2023-11-24 16:24:57,172:INFO:Creating metrics dataframe
2023-11-24 16:24:57,173:INFO:Initializing Gradient Boosting Classifier
2023-11-24 16:24:57,173:INFO:Total runtime is 0.26864141623179116 minutes
2023-11-24 16:24:57,173:INFO:SubProcess create_model() called ==================================
2023-11-24 16:24:57,173:INFO:Initializing create_model()
2023-11-24 16:24:57,173:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2a4b7d410>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2b55fc2d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:24:57,173:INFO:Checking exceptions
2023-11-24 16:24:57,174:INFO:Importing libraries
2023-11-24 16:24:57,174:INFO:Copying training dataset
2023-11-24 16:24:57,176:INFO:Defining folds
2023-11-24 16:24:57,176:INFO:Declaring metric variables
2023-11-24 16:24:57,176:INFO:Importing untrained model
2023-11-24 16:24:57,176:INFO:Gradient Boosting Classifier Imported successfully
2023-11-24 16:24:57,176:INFO:Starting cross validation
2023-11-24 16:24:57,177:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:25:05,489:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:05,492:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:05,495:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:05,513:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:05,516:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:05,518:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:05,524:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:05,526:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:05,529:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:05,553:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:05,560:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:05,563:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:05,590:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:05,592:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:05,595:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:05,617:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:05,619:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:05,620:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:05,621:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:05,622:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:05,623:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:05,624:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:05,626:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:05,628:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:05,642:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:05,645:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:05,647:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:05,654:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:05,657:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:05,659:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:05,664:INFO:Calculating mean and std
2023-11-24 16:25:05,664:INFO:Creating metrics dataframe
2023-11-24 16:25:05,666:INFO:Uploading results into container
2023-11-24 16:25:05,666:INFO:Uploading model into container now
2023-11-24 16:25:05,666:INFO:_master_model_container: 10
2023-11-24 16:25:05,666:INFO:_display_container: 2
2023-11-24 16:25:05,666:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=8910, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-11-24 16:25:05,666:INFO:create_model() successfully completed......................................
2023-11-24 16:25:05,761:INFO:SubProcess create_model() end ==================================
2023-11-24 16:25:05,761:INFO:Creating metrics dataframe
2023-11-24 16:25:05,763:INFO:Initializing Linear Discriminant Analysis
2023-11-24 16:25:05,763:INFO:Total runtime is 0.41180393695831297 minutes
2023-11-24 16:25:05,763:INFO:SubProcess create_model() called ==================================
2023-11-24 16:25:05,763:INFO:Initializing create_model()
2023-11-24 16:25:05,763:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2a4b7d410>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2b55fc2d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:25:05,763:INFO:Checking exceptions
2023-11-24 16:25:05,763:INFO:Importing libraries
2023-11-24 16:25:05,763:INFO:Copying training dataset
2023-11-24 16:25:05,766:INFO:Defining folds
2023-11-24 16:25:05,766:INFO:Declaring metric variables
2023-11-24 16:25:05,766:INFO:Importing untrained model
2023-11-24 16:25:05,766:INFO:Linear Discriminant Analysis Imported successfully
2023-11-24 16:25:05,766:INFO:Starting cross validation
2023-11-24 16:25:05,767:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:25:06,634:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:06,637:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:06,639:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:06,639:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:06,641:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:06,646:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:06,668:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:06,670:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:06,672:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:06,673:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:06,675:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:06,677:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:06,689:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:06,692:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:06,694:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:06,722:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:06,724:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:06,726:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:06,728:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:06,730:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:06,733:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:06,745:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:06,747:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:06,747:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:06,749:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:06,750:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:06,752:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:06,760:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:06,762:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:06,764:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:06,768:INFO:Calculating mean and std
2023-11-24 16:25:06,769:INFO:Creating metrics dataframe
2023-11-24 16:25:06,771:INFO:Uploading results into container
2023-11-24 16:25:06,771:INFO:Uploading model into container now
2023-11-24 16:25:06,771:INFO:_master_model_container: 11
2023-11-24 16:25:06,771:INFO:_display_container: 2
2023-11-24 16:25:06,771:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-11-24 16:25:06,771:INFO:create_model() successfully completed......................................
2023-11-24 16:25:06,861:INFO:SubProcess create_model() end ==================================
2023-11-24 16:25:06,861:INFO:Creating metrics dataframe
2023-11-24 16:25:06,863:INFO:Initializing Extra Trees Classifier
2023-11-24 16:25:06,863:INFO:Total runtime is 0.4301372687021891 minutes
2023-11-24 16:25:06,863:INFO:SubProcess create_model() called ==================================
2023-11-24 16:25:06,863:INFO:Initializing create_model()
2023-11-24 16:25:06,863:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2a4b7d410>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2b55fc2d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:25:06,863:INFO:Checking exceptions
2023-11-24 16:25:06,863:INFO:Importing libraries
2023-11-24 16:25:06,863:INFO:Copying training dataset
2023-11-24 16:25:06,866:INFO:Defining folds
2023-11-24 16:25:06,866:INFO:Declaring metric variables
2023-11-24 16:25:06,866:INFO:Importing untrained model
2023-11-24 16:25:06,866:INFO:Extra Trees Classifier Imported successfully
2023-11-24 16:25:06,866:INFO:Starting cross validation
2023-11-24 16:25:06,867:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:25:08,857:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:08,859:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:08,861:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:25:08,862:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:09,301:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:09,304:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:09,306:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:25:09,307:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:09,343:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:09,346:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:09,350:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:25:09,351:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:09,378:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:09,381:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:09,383:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:25:09,383:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:09,384:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:09,385:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:09,386:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:09,386:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:25:09,387:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:09,391:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:09,391:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:09,392:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:09,392:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:25:09,393:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:09,393:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:09,394:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:09,395:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:25:09,396:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:25:09,396:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:09,397:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:09,403:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:09,405:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:09,406:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:25:09,407:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:09,407:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:09,409:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:09,411:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:25:09,412:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:09,416:INFO:Calculating mean and std
2023-11-24 16:25:09,416:INFO:Creating metrics dataframe
2023-11-24 16:25:09,418:INFO:Uploading results into container
2023-11-24 16:25:09,419:INFO:Uploading model into container now
2023-11-24 16:25:09,419:INFO:_master_model_container: 12
2023-11-24 16:25:09,419:INFO:_display_container: 2
2023-11-24 16:25:09,419:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=8910, verbose=0, warm_start=False)
2023-11-24 16:25:09,419:INFO:create_model() successfully completed......................................
2023-11-24 16:25:09,516:INFO:SubProcess create_model() end ==================================
2023-11-24 16:25:09,516:INFO:Creating metrics dataframe
2023-11-24 16:25:09,517:INFO:Initializing Extreme Gradient Boosting
2023-11-24 16:25:09,517:INFO:Total runtime is 0.47437516848246253 minutes
2023-11-24 16:25:09,517:INFO:SubProcess create_model() called ==================================
2023-11-24 16:25:09,518:INFO:Initializing create_model()
2023-11-24 16:25:09,518:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2a4b7d410>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2b55fc2d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:25:09,518:INFO:Checking exceptions
2023-11-24 16:25:09,518:INFO:Importing libraries
2023-11-24 16:25:09,518:INFO:Copying training dataset
2023-11-24 16:25:09,520:INFO:Defining folds
2023-11-24 16:25:09,520:INFO:Declaring metric variables
2023-11-24 16:25:09,520:INFO:Importing untrained model
2023-11-24 16:25:09,520:INFO:Extreme Gradient Boosting Imported successfully
2023-11-24 16:25:09,520:INFO:Starting cross validation
2023-11-24 16:25:09,521:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:25:27,132:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:27,135:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:27,137:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:27,138:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:27,143:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:27,145:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:27,207:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:27,210:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:27,212:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:27,232:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:27,235:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:27,237:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:27,282:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:27,285:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:27,287:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:27,389:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:27,391:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:27,394:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:27,436:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:27,441:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:27,450:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:27,533:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:27,536:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:27,538:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:27,545:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:27,548:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:27,551:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:27,560:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:27,563:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:27,565:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:27,569:INFO:Calculating mean and std
2023-11-24 16:25:27,570:INFO:Creating metrics dataframe
2023-11-24 16:25:27,571:INFO:Uploading results into container
2023-11-24 16:25:27,571:INFO:Uploading model into container now
2023-11-24 16:25:27,571:INFO:_master_model_container: 13
2023-11-24 16:25:27,572:INFO:_display_container: 2
2023-11-24 16:25:27,572:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', predictor=None, ...)
2023-11-24 16:25:27,572:INFO:create_model() successfully completed......................................
2023-11-24 16:25:27,658:INFO:SubProcess create_model() end ==================================
2023-11-24 16:25:27,658:INFO:Creating metrics dataframe
2023-11-24 16:25:27,660:INFO:Initializing Light Gradient Boosting Machine
2023-11-24 16:25:27,660:INFO:Total runtime is 0.7767469485600789 minutes
2023-11-24 16:25:27,660:INFO:SubProcess create_model() called ==================================
2023-11-24 16:25:27,660:INFO:Initializing create_model()
2023-11-24 16:25:27,660:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2a4b7d410>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2b55fc2d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:25:27,660:INFO:Checking exceptions
2023-11-24 16:25:27,660:INFO:Importing libraries
2023-11-24 16:25:27,660:INFO:Copying training dataset
2023-11-24 16:25:27,662:INFO:Defining folds
2023-11-24 16:25:27,662:INFO:Declaring metric variables
2023-11-24 16:25:27,662:INFO:Importing untrained model
2023-11-24 16:25:27,662:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-24 16:25:27,662:INFO:Starting cross validation
2023-11-24 16:25:27,663:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:25:28,436:WARNING:create_model() for lightgbm raised an exception or returned all 0.0, trying without fit_kwargs:
2023-11-24 16:25:28,437:WARNING:Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/sklearn.py", line 1142, in fit
    super().fit(
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/sklearn.py", line 842, in fit
    self._Booster = train(
                    ^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/engine.py", line 255, in train
    booster = Booster(params=params, train_set=train_set)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 3200, in __init__
    train_set.construct()
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 2276, in construct
    self._lazy_init(data=self.data, label=self.label, reference=None,
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 1959, in _lazy_init
    return self.set_feature_name(feature_name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 2639, in set_feature_name
    _safe_call(_LIB.LGBM_DatasetSetFeatureNames(
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 242, in _safe_call
    raise LightGBMError(_LIB.LGBM_GetLastError().decode('utf-8'))
lightgbm.basic.LightGBMError: Do not support special JSON characters in feature name.


2023-11-24 16:25:28,437:INFO:Initializing create_model()
2023-11-24 16:25:28,437:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2a4b7d410>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2b55fc2d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:25:28,437:INFO:Checking exceptions
2023-11-24 16:25:28,437:INFO:Importing libraries
2023-11-24 16:25:28,437:INFO:Copying training dataset
2023-11-24 16:25:28,442:INFO:Defining folds
2023-11-24 16:25:28,442:INFO:Declaring metric variables
2023-11-24 16:25:28,442:INFO:Importing untrained model
2023-11-24 16:25:28,443:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-24 16:25:28,443:INFO:Starting cross validation
2023-11-24 16:25:28,444:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:25:29,164:ERROR:create_model() for lightgbm raised an exception or returned all 0.0:
2023-11-24 16:25:29,165:ERROR:Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/sklearn.py", line 1142, in fit
    super().fit(
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/sklearn.py", line 842, in fit
    self._Booster = train(
                    ^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/engine.py", line 255, in train
    booster = Booster(params=params, train_set=train_set)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 3200, in __init__
    train_set.construct()
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 2276, in construct
    self._lazy_init(data=self.data, label=self.label, reference=None,
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 1959, in _lazy_init
    return self.set_feature_name(feature_name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 2639, in set_feature_name
    _safe_call(_LIB.LGBM_DatasetSetFeatureNames(
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 242, in _safe_call
    raise LightGBMError(_LIB.LGBM_GetLastError().decode('utf-8'))
lightgbm.basic.LightGBMError: Do not support special JSON characters in feature name.


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/sklearn.py", line 1142, in fit
    super().fit(
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/sklearn.py", line 842, in fit
    self._Booster = train(
                    ^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/engine.py", line 255, in train
    booster = Booster(params=params, train_set=train_set)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 3200, in __init__
    train_set.construct()
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 2276, in construct
    self._lazy_init(data=self.data, label=self.label, reference=None,
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 1959, in _lazy_init
    return self.set_feature_name(feature_name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 2639, in set_feature_name
    _safe_call(_LIB.LGBM_DatasetSetFeatureNames(
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 242, in _safe_call
    raise LightGBMError(_LIB.LGBM_GetLastError().decode('utf-8'))
lightgbm.basic.LightGBMError: Do not support special JSON characters in feature name.


2023-11-24 16:25:29,166:INFO:Initializing Dummy Classifier
2023-11-24 16:25:29,166:INFO:Total runtime is 0.8018489678700764 minutes
2023-11-24 16:25:29,166:INFO:SubProcess create_model() called ==================================
2023-11-24 16:25:29,166:INFO:Initializing create_model()
2023-11-24 16:25:29,166:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2a4b7d410>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2b55fc2d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:25:29,166:INFO:Checking exceptions
2023-11-24 16:25:29,166:INFO:Importing libraries
2023-11-24 16:25:29,166:INFO:Copying training dataset
2023-11-24 16:25:29,169:INFO:Defining folds
2023-11-24 16:25:29,169:INFO:Declaring metric variables
2023-11-24 16:25:29,169:INFO:Importing untrained model
2023-11-24 16:25:29,170:INFO:Dummy Classifier Imported successfully
2023-11-24 16:25:29,170:INFO:Starting cross validation
2023-11-24 16:25:29,171:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:25:29,837:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:29,841:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:29,844:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:25:29,848:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:29,857:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:29,861:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:29,862:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:25:29,863:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:29,912:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:29,914:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:29,915:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:25:29,916:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:29,916:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:29,918:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:29,920:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:25:29,921:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:29,922:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:29,924:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:29,926:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:25:29,926:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:29,933:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:29,935:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:29,936:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:25:29,937:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:29,938:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:29,940:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:29,942:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:25:29,943:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:29,949:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:29,951:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:29,952:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:25:29,953:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:29,953:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:29,956:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:29,957:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:25:29,958:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:29,961:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:29,964:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:29,965:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:25:29,966:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:25:29,971:INFO:Calculating mean and std
2023-11-24 16:25:29,971:INFO:Creating metrics dataframe
2023-11-24 16:25:29,973:INFO:Uploading results into container
2023-11-24 16:25:29,973:INFO:Uploading model into container now
2023-11-24 16:25:29,973:INFO:_master_model_container: 14
2023-11-24 16:25:29,973:INFO:_display_container: 2
2023-11-24 16:25:29,974:INFO:DummyClassifier(constant=None, random_state=8910, strategy='prior')
2023-11-24 16:25:29,974:INFO:create_model() successfully completed......................................
2023-11-24 16:25:30,101:INFO:SubProcess create_model() end ==================================
2023-11-24 16:25:30,101:INFO:Creating metrics dataframe
2023-11-24 16:25:30,104:INFO:Initializing create_model()
2023-11-24 16:25:30,104:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2a4b7d410>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', predictor=None, ...), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:25:30,104:INFO:Checking exceptions
2023-11-24 16:25:30,104:INFO:Importing libraries
2023-11-24 16:25:30,104:INFO:Copying training dataset
2023-11-24 16:25:30,107:INFO:Defining folds
2023-11-24 16:25:30,107:INFO:Declaring metric variables
2023-11-24 16:25:30,107:INFO:Importing untrained model
2023-11-24 16:25:30,107:INFO:Declaring custom model
2023-11-24 16:25:30,108:INFO:Extreme Gradient Boosting Imported successfully
2023-11-24 16:25:30,109:INFO:Cross validation set to False
2023-11-24 16:25:30,109:INFO:Fitting Model
2023-11-24 16:25:32,728:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='multi:softprob', predictor=None, ...)
2023-11-24 16:25:32,728:INFO:create_model() successfully completed......................................
2023-11-24 16:25:32,816:INFO:_master_model_container: 14
2023-11-24 16:25:32,816:INFO:_display_container: 2
2023-11-24 16:25:32,816:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='multi:softprob', predictor=None, ...)
2023-11-24 16:25:32,816:INFO:compare_models() successfully completed......................................
2023-11-24 16:25:32,820:INFO:Initializing save_model()
2023-11-24 16:25:32,821:INFO:save_model(model=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='multi:softprob', predictor=None, ...), model_name=best_model, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/46/tcczvndd7xj_pqs5r176bl600000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Number_of_vehicles_involved',
                                             'Number_of_casualties'],
                                    transformer=SimpleImputer(add_i...
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['Time'],
                                    transformer=TargetEncoder(cols=['Time'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-11-24 16:25:32,821:INFO:Adding model into prep_pipe
2023-11-24 16:25:32,835:INFO:best_model.pkl saved in current working directory
2023-11-24 16:25:32,840:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Number_of_vehicles_involved',
                                             'Number_of_casualties'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_fea...
                               grow_policy=None, importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, n_estimators=100,
                               n_jobs=-1, num_parallel_tree=None,
                               objective='multi:softprob', predictor=None, ...))],
         verbose=False)
2023-11-24 16:25:32,840:INFO:save_model() successfully completed......................................
2023-11-24 16:27:25,783:INFO:PyCaret ClassificationExperiment
2023-11-24 16:27:25,784:INFO:Logging name: clf-default-name
2023-11-24 16:27:25,784:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-11-24 16:27:25,784:INFO:version 3.2.0
2023-11-24 16:27:25,784:INFO:Initializing setup()
2023-11-24 16:27:25,784:INFO:self.USI: 96a2
2023-11-24 16:27:25,784:INFO:self._variable_keys: {'_available_plots', 'fix_imbalance', 'fold_shuffle_param', 'exp_id', 'y_test', 'y_train', 'n_jobs_param', 'memory', 'log_plots_param', 'html_param', 'gpu_param', '_ml_usecase', 'idx', 'pipeline', 'is_multiclass', 'seed', 'X_test', 'logging_param', 'data', 'fold_generator', 'exp_name_log', 'USI', 'X', 'fold_groups_param', 'X_train', 'y', 'gpu_n_jobs_param', 'target_param'}
2023-11-24 16:27:25,784:INFO:Checking environment
2023-11-24 16:27:25,784:INFO:python_version: 3.11.5
2023-11-24 16:27:25,784:INFO:python_build: ('main', 'Sep 11 2023 08:31:25')
2023-11-24 16:27:25,784:INFO:machine: arm64
2023-11-24 16:27:25,784:INFO:platform: macOS-14.0-arm64-arm-64bit
2023-11-24 16:27:25,784:INFO:Memory: svmem(total=17179869184, available=4420681728, percent=74.3, used=6361661440, free=47742976, active=4391763968, inactive=4370071552, wired=1969897472)
2023-11-24 16:27:25,784:INFO:Physical Core: 10
2023-11-24 16:27:25,784:INFO:Logical Core: 10
2023-11-24 16:27:25,784:INFO:Checking libraries
2023-11-24 16:27:25,784:INFO:System:
2023-11-24 16:27:25,784:INFO:    python: 3.11.5 (main, Sep 11 2023, 08:31:25) [Clang 14.0.6 ]
2023-11-24 16:27:25,784:INFO:executable: /Users/saiakhil/anaconda3/envs/mlauto/bin/python
2023-11-24 16:27:25,784:INFO:   machine: macOS-14.0-arm64-arm-64bit
2023-11-24 16:27:25,784:INFO:PyCaret required dependencies:
2023-11-24 16:27:25,784:INFO:                 pip: 23.3.1
2023-11-24 16:27:25,784:INFO:          setuptools: 68.0.0
2023-11-24 16:27:25,784:INFO:             pycaret: 3.2.0
2023-11-24 16:27:25,784:INFO:             IPython: 8.15.0
2023-11-24 16:27:25,784:INFO:          ipywidgets: 8.1.1
2023-11-24 16:27:25,784:INFO:                tqdm: 4.66.1
2023-11-24 16:27:25,784:INFO:               numpy: 1.25.2
2023-11-24 16:27:25,784:INFO:              pandas: 1.5.3
2023-11-24 16:27:25,784:INFO:              jinja2: 3.1.2
2023-11-24 16:27:25,784:INFO:               scipy: 1.11.3
2023-11-24 16:27:25,784:INFO:              joblib: 1.3.2
2023-11-24 16:27:25,784:INFO:             sklearn: 1.2.2
2023-11-24 16:27:25,784:INFO:                pyod: 1.1.2
2023-11-24 16:27:25,784:INFO:            imblearn: 0.11.0
2023-11-24 16:27:25,784:INFO:   category_encoders: 2.6.3
2023-11-24 16:27:25,784:INFO:            lightgbm: 4.1.0
2023-11-24 16:27:25,784:INFO:               numba: 0.58.1
2023-11-24 16:27:25,784:INFO:            requests: 2.31.0
2023-11-24 16:27:25,784:INFO:          matplotlib: 3.6.0
2023-11-24 16:27:25,784:INFO:          scikitplot: 0.3.7
2023-11-24 16:27:25,784:INFO:         yellowbrick: 1.5
2023-11-24 16:27:25,784:INFO:              plotly: 5.18.0
2023-11-24 16:27:25,784:INFO:    plotly-resampler: Not installed
2023-11-24 16:27:25,784:INFO:             kaleido: 0.2.1
2023-11-24 16:27:25,785:INFO:           schemdraw: 0.15
2023-11-24 16:27:25,785:INFO:         statsmodels: 0.14.0
2023-11-24 16:27:25,785:INFO:              sktime: 0.21.1
2023-11-24 16:27:25,785:INFO:               tbats: 1.1.3
2023-11-24 16:27:25,785:INFO:            pmdarima: 2.0.4
2023-11-24 16:27:25,785:INFO:              psutil: 5.9.6
2023-11-24 16:27:25,785:INFO:          markupsafe: 2.1.3
2023-11-24 16:27:25,785:INFO:             pickle5: Not installed
2023-11-24 16:27:25,785:INFO:         cloudpickle: 3.0.0
2023-11-24 16:27:25,785:INFO:         deprecation: 2.1.0
2023-11-24 16:27:25,785:INFO:              xxhash: 3.4.1
2023-11-24 16:27:25,785:INFO:           wurlitzer: 3.0.3
2023-11-24 16:27:25,785:INFO:PyCaret optional dependencies:
2023-11-24 16:27:25,785:INFO:                shap: Not installed
2023-11-24 16:27:25,785:INFO:           interpret: Not installed
2023-11-24 16:27:25,785:INFO:                umap: Not installed
2023-11-24 16:27:25,785:INFO:     ydata_profiling: 4.6.2
2023-11-24 16:27:25,785:INFO:  explainerdashboard: Not installed
2023-11-24 16:27:25,785:INFO:             autoviz: Not installed
2023-11-24 16:27:25,785:INFO:           fairlearn: Not installed
2023-11-24 16:27:25,785:INFO:          deepchecks: Not installed
2023-11-24 16:27:25,785:INFO:             xgboost: 1.7.3
2023-11-24 16:27:25,785:INFO:            catboost: Not installed
2023-11-24 16:27:25,785:INFO:              kmodes: Not installed
2023-11-24 16:27:25,785:INFO:             mlxtend: Not installed
2023-11-24 16:27:25,785:INFO:       statsforecast: Not installed
2023-11-24 16:27:25,785:INFO:        tune_sklearn: Not installed
2023-11-24 16:27:25,785:INFO:                 ray: Not installed
2023-11-24 16:27:25,785:INFO:            hyperopt: Not installed
2023-11-24 16:27:25,785:INFO:              optuna: Not installed
2023-11-24 16:27:25,785:INFO:               skopt: Not installed
2023-11-24 16:27:25,785:INFO:              mlflow: Not installed
2023-11-24 16:27:25,785:INFO:              gradio: Not installed
2023-11-24 16:27:25,785:INFO:             fastapi: Not installed
2023-11-24 16:27:25,785:INFO:             uvicorn: Not installed
2023-11-24 16:27:25,785:INFO:              m2cgen: Not installed
2023-11-24 16:27:25,785:INFO:           evidently: Not installed
2023-11-24 16:27:25,785:INFO:               fugue: Not installed
2023-11-24 16:27:25,785:INFO:           streamlit: 1.28.2
2023-11-24 16:27:25,785:INFO:             prophet: Not installed
2023-11-24 16:27:25,785:INFO:None
2023-11-24 16:27:25,785:INFO:Set up data.
2023-11-24 16:27:25,809:INFO:Set up folding strategy.
2023-11-24 16:27:25,809:INFO:Set up train/test split.
2023-11-24 16:27:25,816:INFO:Set up index.
2023-11-24 16:27:25,816:INFO:Assigning column types.
2023-11-24 16:27:25,818:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-24 16:27:25,835:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 16:27:25,836:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:27:25,846:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:27:25,847:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:27:25,866:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 16:27:25,866:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:27:25,877:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:27:25,878:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:27:25,879:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-11-24 16:27:25,897:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:27:25,907:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:27:25,908:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:27:25,926:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:27:25,937:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:27:25,938:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:27:25,939:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-11-24 16:27:25,967:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:27:25,968:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:27:25,996:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:27:25,997:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:27:25,997:INFO:Preparing preprocessing pipeline...
2023-11-24 16:27:25,998:INFO:Set up label encoding.
2023-11-24 16:27:25,998:INFO:Set up simple imputation.
2023-11-24 16:27:26,000:INFO:Set up encoding of categorical features.
2023-11-24 16:27:26,387:INFO:Finished creating preprocessing pipeline.
2023-11-24 16:27:26,389:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/46/tcczvndd7xj_pqs5r176bl600000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Number_of_vehicles_involved',
                                             'Number_of_casualties'],
                                    transformer=SimpleImputer(add_i...
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['Time'],
                                    transformer=TargetEncoder(cols=['Time'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2023-11-24 16:27:26,389:INFO:Creating final display dataframe.
2023-11-24 16:27:26,837:INFO:Setup _display_container:                     Description                                              Value
0                    Session id                                               6466
1                        Target                                  Accident_severity
2                   Target type                                         Multiclass
3                Target mapping  Fatal injury: 0, Serious Injury: 1, Slight Inj...
4           Original data shape                                        (12316, 32)
5        Transformed data shape                                       (12316, 207)
6   Transformed train set shape                                        (8621, 207)
7    Transformed test set shape                                        (3695, 207)
8              Numeric features                                                  2
9          Categorical features                                                 29
10     Rows with missing values                                              76.5%
11                   Preprocess                                               True
12              Imputation type                                             simple
13           Numeric imputation                                               mean
14       Categorical imputation                                               mode
15     Maximum one-hot encoding                                                 25
16              Encoding method                                               None
17               Fold Generator                                    StratifiedKFold
18                  Fold Number                                                 10
19                     CPU Jobs                                                 -1
20                      Use GPU                                              False
21               Log Experiment                                              False
22              Experiment Name                                   clf-default-name
23                          USI                                               96a2
2023-11-24 16:27:26,867:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:27:26,868:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:27:26,896:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:27:26,897:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:27:26,897:INFO:setup() successfully completed in 1.11s...............
2023-11-24 16:27:37,282:INFO:PyCaret ClassificationExperiment
2023-11-24 16:27:37,283:INFO:Logging name: clf-default-name
2023-11-24 16:27:37,283:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-11-24 16:27:37,283:INFO:version 3.2.0
2023-11-24 16:27:37,283:INFO:Initializing setup()
2023-11-24 16:27:37,283:INFO:self.USI: 0c32
2023-11-24 16:27:37,283:INFO:self._variable_keys: {'_available_plots', 'fix_imbalance', 'fold_shuffle_param', 'exp_id', 'y_test', 'y_train', 'n_jobs_param', 'memory', 'log_plots_param', 'html_param', 'gpu_param', '_ml_usecase', 'idx', 'pipeline', 'is_multiclass', 'seed', 'X_test', 'logging_param', 'data', 'fold_generator', 'exp_name_log', 'USI', 'X', 'fold_groups_param', 'X_train', 'y', 'gpu_n_jobs_param', 'target_param'}
2023-11-24 16:27:37,283:INFO:Checking environment
2023-11-24 16:27:37,283:INFO:python_version: 3.11.5
2023-11-24 16:27:37,283:INFO:python_build: ('main', 'Sep 11 2023 08:31:25')
2023-11-24 16:27:37,284:INFO:machine: arm64
2023-11-24 16:27:37,284:INFO:platform: macOS-14.0-arm64-arm-64bit
2023-11-24 16:27:37,284:INFO:Memory: svmem(total=17179869184, available=4390666240, percent=74.4, used=6382272512, free=67092480, active=4337795072, inactive=4321902592, wired=2044477440)
2023-11-24 16:27:37,284:INFO:Physical Core: 10
2023-11-24 16:27:37,284:INFO:Logical Core: 10
2023-11-24 16:27:37,284:INFO:Checking libraries
2023-11-24 16:27:37,284:INFO:System:
2023-11-24 16:27:37,284:INFO:    python: 3.11.5 (main, Sep 11 2023, 08:31:25) [Clang 14.0.6 ]
2023-11-24 16:27:37,284:INFO:executable: /Users/saiakhil/anaconda3/envs/mlauto/bin/python
2023-11-24 16:27:37,284:INFO:   machine: macOS-14.0-arm64-arm-64bit
2023-11-24 16:27:37,284:INFO:PyCaret required dependencies:
2023-11-24 16:27:37,284:INFO:                 pip: 23.3.1
2023-11-24 16:27:37,284:INFO:          setuptools: 68.0.0
2023-11-24 16:27:37,284:INFO:             pycaret: 3.2.0
2023-11-24 16:27:37,284:INFO:             IPython: 8.15.0
2023-11-24 16:27:37,284:INFO:          ipywidgets: 8.1.1
2023-11-24 16:27:37,284:INFO:                tqdm: 4.66.1
2023-11-24 16:27:37,284:INFO:               numpy: 1.25.2
2023-11-24 16:27:37,284:INFO:              pandas: 1.5.3
2023-11-24 16:27:37,284:INFO:              jinja2: 3.1.2
2023-11-24 16:27:37,284:INFO:               scipy: 1.11.3
2023-11-24 16:27:37,284:INFO:              joblib: 1.3.2
2023-11-24 16:27:37,284:INFO:             sklearn: 1.2.2
2023-11-24 16:27:37,284:INFO:                pyod: 1.1.2
2023-11-24 16:27:37,284:INFO:            imblearn: 0.11.0
2023-11-24 16:27:37,284:INFO:   category_encoders: 2.6.3
2023-11-24 16:27:37,284:INFO:            lightgbm: 4.1.0
2023-11-24 16:27:37,284:INFO:               numba: 0.58.1
2023-11-24 16:27:37,284:INFO:            requests: 2.31.0
2023-11-24 16:27:37,284:INFO:          matplotlib: 3.6.0
2023-11-24 16:27:37,284:INFO:          scikitplot: 0.3.7
2023-11-24 16:27:37,284:INFO:         yellowbrick: 1.5
2023-11-24 16:27:37,284:INFO:              plotly: 5.18.0
2023-11-24 16:27:37,284:INFO:    plotly-resampler: Not installed
2023-11-24 16:27:37,284:INFO:             kaleido: 0.2.1
2023-11-24 16:27:37,284:INFO:           schemdraw: 0.15
2023-11-24 16:27:37,284:INFO:         statsmodels: 0.14.0
2023-11-24 16:27:37,284:INFO:              sktime: 0.21.1
2023-11-24 16:27:37,284:INFO:               tbats: 1.1.3
2023-11-24 16:27:37,284:INFO:            pmdarima: 2.0.4
2023-11-24 16:27:37,284:INFO:              psutil: 5.9.6
2023-11-24 16:27:37,284:INFO:          markupsafe: 2.1.3
2023-11-24 16:27:37,284:INFO:             pickle5: Not installed
2023-11-24 16:27:37,284:INFO:         cloudpickle: 3.0.0
2023-11-24 16:27:37,284:INFO:         deprecation: 2.1.0
2023-11-24 16:27:37,284:INFO:              xxhash: 3.4.1
2023-11-24 16:27:37,284:INFO:           wurlitzer: 3.0.3
2023-11-24 16:27:37,284:INFO:PyCaret optional dependencies:
2023-11-24 16:27:37,284:INFO:                shap: Not installed
2023-11-24 16:27:37,284:INFO:           interpret: Not installed
2023-11-24 16:27:37,284:INFO:                umap: Not installed
2023-11-24 16:27:37,284:INFO:     ydata_profiling: 4.6.2
2023-11-24 16:27:37,284:INFO:  explainerdashboard: Not installed
2023-11-24 16:27:37,284:INFO:             autoviz: Not installed
2023-11-24 16:27:37,284:INFO:           fairlearn: Not installed
2023-11-24 16:27:37,284:INFO:          deepchecks: Not installed
2023-11-24 16:27:37,284:INFO:             xgboost: 1.7.3
2023-11-24 16:27:37,284:INFO:            catboost: Not installed
2023-11-24 16:27:37,284:INFO:              kmodes: Not installed
2023-11-24 16:27:37,284:INFO:             mlxtend: Not installed
2023-11-24 16:27:37,284:INFO:       statsforecast: Not installed
2023-11-24 16:27:37,284:INFO:        tune_sklearn: Not installed
2023-11-24 16:27:37,284:INFO:                 ray: Not installed
2023-11-24 16:27:37,284:INFO:            hyperopt: Not installed
2023-11-24 16:27:37,284:INFO:              optuna: Not installed
2023-11-24 16:27:37,284:INFO:               skopt: Not installed
2023-11-24 16:27:37,284:INFO:              mlflow: Not installed
2023-11-24 16:27:37,284:INFO:              gradio: Not installed
2023-11-24 16:27:37,284:INFO:             fastapi: Not installed
2023-11-24 16:27:37,284:INFO:             uvicorn: Not installed
2023-11-24 16:27:37,284:INFO:              m2cgen: Not installed
2023-11-24 16:27:37,284:INFO:           evidently: Not installed
2023-11-24 16:27:37,284:INFO:               fugue: Not installed
2023-11-24 16:27:37,284:INFO:           streamlit: 1.28.2
2023-11-24 16:27:37,284:INFO:             prophet: Not installed
2023-11-24 16:27:37,284:INFO:None
2023-11-24 16:27:37,284:INFO:Set up data.
2023-11-24 16:27:37,309:INFO:Set up folding strategy.
2023-11-24 16:27:37,309:INFO:Set up train/test split.
2023-11-24 16:27:37,317:INFO:Set up index.
2023-11-24 16:27:37,317:INFO:Assigning column types.
2023-11-24 16:27:37,318:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-24 16:27:37,337:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 16:27:37,337:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:27:37,348:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:27:37,349:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:27:37,366:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 16:27:37,367:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:27:37,377:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:27:37,378:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:27:37,379:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-11-24 16:27:37,396:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:27:37,407:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:27:37,408:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:27:37,429:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:27:37,440:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:27:37,442:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:27:37,442:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-11-24 16:27:37,471:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:27:37,472:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:27:37,501:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:27:37,502:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:27:37,502:INFO:Preparing preprocessing pipeline...
2023-11-24 16:27:37,503:INFO:Set up label encoding.
2023-11-24 16:27:37,503:INFO:Set up simple imputation.
2023-11-24 16:27:37,505:INFO:Set up encoding of categorical features.
2023-11-24 16:27:37,883:INFO:Finished creating preprocessing pipeline.
2023-11-24 16:27:37,886:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/46/tcczvndd7xj_pqs5r176bl600000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Number_of_vehicles_involved',
                                             'Number_of_casualties'],
                                    transformer=SimpleImputer(add_i...
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['Time'],
                                    transformer=TargetEncoder(cols=['Time'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2023-11-24 16:27:37,886:INFO:Creating final display dataframe.
2023-11-24 16:27:38,333:INFO:Setup _display_container:                     Description                                              Value
0                    Session id                                               3220
1                        Target                                  Accident_severity
2                   Target type                                         Multiclass
3                Target mapping  Fatal injury: 0, Serious Injury: 1, Slight Inj...
4           Original data shape                                        (12316, 32)
5        Transformed data shape                                       (12316, 208)
6   Transformed train set shape                                        (8621, 208)
7    Transformed test set shape                                        (3695, 208)
8              Numeric features                                                  2
9          Categorical features                                                 29
10     Rows with missing values                                              76.5%
11                   Preprocess                                               True
12              Imputation type                                             simple
13           Numeric imputation                                               mean
14       Categorical imputation                                               mode
15     Maximum one-hot encoding                                                 25
16              Encoding method                                               None
17               Fold Generator                                    StratifiedKFold
18                  Fold Number                                                 10
19                     CPU Jobs                                                 -1
20                      Use GPU                                              False
21               Log Experiment                                              False
22              Experiment Name                                   clf-default-name
23                          USI                                               0c32
2023-11-24 16:27:38,362:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:27:38,363:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:27:38,391:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:27:38,392:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:27:38,392:INFO:setup() successfully completed in 1.11s...............
2023-11-24 16:27:58,033:INFO:PyCaret ClassificationExperiment
2023-11-24 16:27:58,033:INFO:Logging name: clf-default-name
2023-11-24 16:27:58,033:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-11-24 16:27:58,033:INFO:version 3.2.0
2023-11-24 16:27:58,033:INFO:Initializing setup()
2023-11-24 16:27:58,033:INFO:self.USI: 0879
2023-11-24 16:27:58,033:INFO:self._variable_keys: {'_available_plots', 'fix_imbalance', 'fold_shuffle_param', 'exp_id', 'y_test', 'y_train', 'n_jobs_param', 'memory', 'log_plots_param', 'html_param', 'gpu_param', '_ml_usecase', 'idx', 'pipeline', 'is_multiclass', 'seed', 'X_test', 'logging_param', 'data', 'fold_generator', 'exp_name_log', 'USI', 'X', 'fold_groups_param', 'X_train', 'y', 'gpu_n_jobs_param', 'target_param'}
2023-11-24 16:27:58,033:INFO:Checking environment
2023-11-24 16:27:58,033:INFO:python_version: 3.11.5
2023-11-24 16:27:58,033:INFO:python_build: ('main', 'Sep 11 2023 08:31:25')
2023-11-24 16:27:58,033:INFO:machine: arm64
2023-11-24 16:27:58,033:INFO:platform: macOS-14.0-arm64-arm-64bit
2023-11-24 16:27:58,033:INFO:Memory: svmem(total=17179869184, available=4427808768, percent=74.2, used=6351978496, free=55312384, active=4400037888, inactive=4370169856, wired=1951940608)
2023-11-24 16:27:58,033:INFO:Physical Core: 10
2023-11-24 16:27:58,033:INFO:Logical Core: 10
2023-11-24 16:27:58,033:INFO:Checking libraries
2023-11-24 16:27:58,033:INFO:System:
2023-11-24 16:27:58,033:INFO:    python: 3.11.5 (main, Sep 11 2023, 08:31:25) [Clang 14.0.6 ]
2023-11-24 16:27:58,033:INFO:executable: /Users/saiakhil/anaconda3/envs/mlauto/bin/python
2023-11-24 16:27:58,034:INFO:   machine: macOS-14.0-arm64-arm-64bit
2023-11-24 16:27:58,034:INFO:PyCaret required dependencies:
2023-11-24 16:27:58,034:INFO:                 pip: 23.3.1
2023-11-24 16:27:58,034:INFO:          setuptools: 68.0.0
2023-11-24 16:27:58,034:INFO:             pycaret: 3.2.0
2023-11-24 16:27:58,034:INFO:             IPython: 8.15.0
2023-11-24 16:27:58,034:INFO:          ipywidgets: 8.1.1
2023-11-24 16:27:58,034:INFO:                tqdm: 4.66.1
2023-11-24 16:27:58,034:INFO:               numpy: 1.25.2
2023-11-24 16:27:58,034:INFO:              pandas: 1.5.3
2023-11-24 16:27:58,034:INFO:              jinja2: 3.1.2
2023-11-24 16:27:58,034:INFO:               scipy: 1.11.3
2023-11-24 16:27:58,034:INFO:              joblib: 1.3.2
2023-11-24 16:27:58,034:INFO:             sklearn: 1.2.2
2023-11-24 16:27:58,034:INFO:                pyod: 1.1.2
2023-11-24 16:27:58,034:INFO:            imblearn: 0.11.0
2023-11-24 16:27:58,034:INFO:   category_encoders: 2.6.3
2023-11-24 16:27:58,034:INFO:            lightgbm: 4.1.0
2023-11-24 16:27:58,034:INFO:               numba: 0.58.1
2023-11-24 16:27:58,034:INFO:            requests: 2.31.0
2023-11-24 16:27:58,034:INFO:          matplotlib: 3.6.0
2023-11-24 16:27:58,034:INFO:          scikitplot: 0.3.7
2023-11-24 16:27:58,034:INFO:         yellowbrick: 1.5
2023-11-24 16:27:58,034:INFO:              plotly: 5.18.0
2023-11-24 16:27:58,034:INFO:    plotly-resampler: Not installed
2023-11-24 16:27:58,034:INFO:             kaleido: 0.2.1
2023-11-24 16:27:58,034:INFO:           schemdraw: 0.15
2023-11-24 16:27:58,034:INFO:         statsmodels: 0.14.0
2023-11-24 16:27:58,034:INFO:              sktime: 0.21.1
2023-11-24 16:27:58,034:INFO:               tbats: 1.1.3
2023-11-24 16:27:58,034:INFO:            pmdarima: 2.0.4
2023-11-24 16:27:58,034:INFO:              psutil: 5.9.6
2023-11-24 16:27:58,034:INFO:          markupsafe: 2.1.3
2023-11-24 16:27:58,034:INFO:             pickle5: Not installed
2023-11-24 16:27:58,034:INFO:         cloudpickle: 3.0.0
2023-11-24 16:27:58,034:INFO:         deprecation: 2.1.0
2023-11-24 16:27:58,034:INFO:              xxhash: 3.4.1
2023-11-24 16:27:58,034:INFO:           wurlitzer: 3.0.3
2023-11-24 16:27:58,034:INFO:PyCaret optional dependencies:
2023-11-24 16:27:58,034:INFO:                shap: Not installed
2023-11-24 16:27:58,034:INFO:           interpret: Not installed
2023-11-24 16:27:58,034:INFO:                umap: Not installed
2023-11-24 16:27:58,034:INFO:     ydata_profiling: 4.6.2
2023-11-24 16:27:58,034:INFO:  explainerdashboard: Not installed
2023-11-24 16:27:58,034:INFO:             autoviz: Not installed
2023-11-24 16:27:58,034:INFO:           fairlearn: Not installed
2023-11-24 16:27:58,034:INFO:          deepchecks: Not installed
2023-11-24 16:27:58,034:INFO:             xgboost: 1.7.3
2023-11-24 16:27:58,034:INFO:            catboost: Not installed
2023-11-24 16:27:58,034:INFO:              kmodes: Not installed
2023-11-24 16:27:58,034:INFO:             mlxtend: Not installed
2023-11-24 16:27:58,034:INFO:       statsforecast: Not installed
2023-11-24 16:27:58,034:INFO:        tune_sklearn: Not installed
2023-11-24 16:27:58,034:INFO:                 ray: Not installed
2023-11-24 16:27:58,034:INFO:            hyperopt: Not installed
2023-11-24 16:27:58,034:INFO:              optuna: Not installed
2023-11-24 16:27:58,034:INFO:               skopt: Not installed
2023-11-24 16:27:58,034:INFO:              mlflow: Not installed
2023-11-24 16:27:58,034:INFO:              gradio: Not installed
2023-11-24 16:27:58,034:INFO:             fastapi: Not installed
2023-11-24 16:27:58,034:INFO:             uvicorn: Not installed
2023-11-24 16:27:58,034:INFO:              m2cgen: Not installed
2023-11-24 16:27:58,034:INFO:           evidently: Not installed
2023-11-24 16:27:58,034:INFO:               fugue: Not installed
2023-11-24 16:27:58,034:INFO:           streamlit: 1.28.2
2023-11-24 16:27:58,034:INFO:             prophet: Not installed
2023-11-24 16:27:58,034:INFO:None
2023-11-24 16:27:58,034:INFO:Set up data.
2023-11-24 16:27:58,059:INFO:Set up folding strategy.
2023-11-24 16:27:58,059:INFO:Set up train/test split.
2023-11-24 16:28:03,736:INFO:PyCaret ClassificationExperiment
2023-11-24 16:28:03,736:INFO:Logging name: clf-default-name
2023-11-24 16:28:03,737:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-11-24 16:28:03,737:INFO:version 3.2.0
2023-11-24 16:28:03,737:INFO:Initializing setup()
2023-11-24 16:28:03,737:INFO:self.USI: 291f
2023-11-24 16:28:03,737:INFO:self._variable_keys: {'_available_plots', 'fix_imbalance', 'fold_shuffle_param', 'exp_id', 'y_test', 'y_train', 'n_jobs_param', 'memory', 'log_plots_param', 'html_param', 'gpu_param', '_ml_usecase', 'idx', 'pipeline', 'is_multiclass', 'seed', 'X_test', 'logging_param', 'data', 'fold_generator', 'exp_name_log', 'USI', 'X', 'fold_groups_param', 'X_train', 'y', 'gpu_n_jobs_param', 'target_param'}
2023-11-24 16:28:03,737:INFO:Checking environment
2023-11-24 16:28:03,737:INFO:python_version: 3.11.5
2023-11-24 16:28:03,737:INFO:python_build: ('main', 'Sep 11 2023 08:31:25')
2023-11-24 16:28:03,737:INFO:machine: arm64
2023-11-24 16:28:03,737:INFO:platform: macOS-14.0-arm64-arm-64bit
2023-11-24 16:28:03,737:INFO:Memory: svmem(total=17179869184, available=4415946752, percent=74.3, used=6362546176, free=53886976, active=4381425664, inactive=4360732672, wired=1981120512)
2023-11-24 16:28:03,737:INFO:Physical Core: 10
2023-11-24 16:28:03,737:INFO:Logical Core: 10
2023-11-24 16:28:03,737:INFO:Checking libraries
2023-11-24 16:28:03,737:INFO:System:
2023-11-24 16:28:03,737:INFO:    python: 3.11.5 (main, Sep 11 2023, 08:31:25) [Clang 14.0.6 ]
2023-11-24 16:28:03,737:INFO:executable: /Users/saiakhil/anaconda3/envs/mlauto/bin/python
2023-11-24 16:28:03,737:INFO:   machine: macOS-14.0-arm64-arm-64bit
2023-11-24 16:28:03,737:INFO:PyCaret required dependencies:
2023-11-24 16:28:03,737:INFO:                 pip: 23.3.1
2023-11-24 16:28:03,737:INFO:          setuptools: 68.0.0
2023-11-24 16:28:03,737:INFO:             pycaret: 3.2.0
2023-11-24 16:28:03,737:INFO:             IPython: 8.15.0
2023-11-24 16:28:03,737:INFO:          ipywidgets: 8.1.1
2023-11-24 16:28:03,737:INFO:                tqdm: 4.66.1
2023-11-24 16:28:03,737:INFO:               numpy: 1.25.2
2023-11-24 16:28:03,737:INFO:              pandas: 1.5.3
2023-11-24 16:28:03,737:INFO:              jinja2: 3.1.2
2023-11-24 16:28:03,737:INFO:               scipy: 1.11.3
2023-11-24 16:28:03,737:INFO:              joblib: 1.3.2
2023-11-24 16:28:03,737:INFO:             sklearn: 1.2.2
2023-11-24 16:28:03,737:INFO:                pyod: 1.1.2
2023-11-24 16:28:03,737:INFO:            imblearn: 0.11.0
2023-11-24 16:28:03,737:INFO:   category_encoders: 2.6.3
2023-11-24 16:28:03,737:INFO:            lightgbm: 4.1.0
2023-11-24 16:28:03,737:INFO:               numba: 0.58.1
2023-11-24 16:28:03,737:INFO:            requests: 2.31.0
2023-11-24 16:28:03,737:INFO:          matplotlib: 3.6.0
2023-11-24 16:28:03,737:INFO:          scikitplot: 0.3.7
2023-11-24 16:28:03,737:INFO:         yellowbrick: 1.5
2023-11-24 16:28:03,737:INFO:              plotly: 5.18.0
2023-11-24 16:28:03,737:INFO:    plotly-resampler: Not installed
2023-11-24 16:28:03,737:INFO:             kaleido: 0.2.1
2023-11-24 16:28:03,737:INFO:           schemdraw: 0.15
2023-11-24 16:28:03,737:INFO:         statsmodels: 0.14.0
2023-11-24 16:28:03,737:INFO:              sktime: 0.21.1
2023-11-24 16:28:03,737:INFO:               tbats: 1.1.3
2023-11-24 16:28:03,737:INFO:            pmdarima: 2.0.4
2023-11-24 16:28:03,737:INFO:              psutil: 5.9.6
2023-11-24 16:28:03,737:INFO:          markupsafe: 2.1.3
2023-11-24 16:28:03,737:INFO:             pickle5: Not installed
2023-11-24 16:28:03,737:INFO:         cloudpickle: 3.0.0
2023-11-24 16:28:03,737:INFO:         deprecation: 2.1.0
2023-11-24 16:28:03,737:INFO:              xxhash: 3.4.1
2023-11-24 16:28:03,737:INFO:           wurlitzer: 3.0.3
2023-11-24 16:28:03,737:INFO:PyCaret optional dependencies:
2023-11-24 16:28:03,737:INFO:                shap: Not installed
2023-11-24 16:28:03,737:INFO:           interpret: Not installed
2023-11-24 16:28:03,737:INFO:                umap: Not installed
2023-11-24 16:28:03,737:INFO:     ydata_profiling: 4.6.2
2023-11-24 16:28:03,737:INFO:  explainerdashboard: Not installed
2023-11-24 16:28:03,737:INFO:             autoviz: Not installed
2023-11-24 16:28:03,737:INFO:           fairlearn: Not installed
2023-11-24 16:28:03,737:INFO:          deepchecks: Not installed
2023-11-24 16:28:03,737:INFO:             xgboost: 1.7.3
2023-11-24 16:28:03,737:INFO:            catboost: Not installed
2023-11-24 16:28:03,737:INFO:              kmodes: Not installed
2023-11-24 16:28:03,737:INFO:             mlxtend: Not installed
2023-11-24 16:28:03,737:INFO:       statsforecast: Not installed
2023-11-24 16:28:03,737:INFO:        tune_sklearn: Not installed
2023-11-24 16:28:03,737:INFO:                 ray: Not installed
2023-11-24 16:28:03,737:INFO:            hyperopt: Not installed
2023-11-24 16:28:03,737:INFO:              optuna: Not installed
2023-11-24 16:28:03,737:INFO:               skopt: Not installed
2023-11-24 16:28:03,737:INFO:              mlflow: Not installed
2023-11-24 16:28:03,737:INFO:              gradio: Not installed
2023-11-24 16:28:03,737:INFO:             fastapi: Not installed
2023-11-24 16:28:03,737:INFO:             uvicorn: Not installed
2023-11-24 16:28:03,737:INFO:              m2cgen: Not installed
2023-11-24 16:28:03,737:INFO:           evidently: Not installed
2023-11-24 16:28:03,737:INFO:               fugue: Not installed
2023-11-24 16:28:03,737:INFO:           streamlit: 1.28.2
2023-11-24 16:28:03,737:INFO:             prophet: Not installed
2023-11-24 16:28:03,737:INFO:None
2023-11-24 16:28:03,737:INFO:Set up data.
2023-11-24 16:28:03,766:INFO:Set up folding strategy.
2023-11-24 16:28:03,766:INFO:Set up train/test split.
2023-11-24 16:28:03,775:INFO:Set up index.
2023-11-24 16:28:03,775:INFO:Assigning column types.
2023-11-24 16:28:03,776:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-24 16:28:03,794:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 16:28:03,794:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:28:03,805:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:28:03,806:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:28:03,823:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 16:28:03,823:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:28:03,834:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:28:03,835:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:28:03,835:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-11-24 16:28:03,853:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:28:03,864:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:28:03,865:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:28:03,882:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:28:03,893:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:28:03,894:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:28:03,894:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-11-24 16:28:03,923:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:28:03,924:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:28:03,953:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:28:03,954:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:28:03,954:INFO:Preparing preprocessing pipeline...
2023-11-24 16:28:03,955:INFO:Set up label encoding.
2023-11-24 16:28:03,955:INFO:Set up simple imputation.
2023-11-24 16:28:03,957:INFO:Set up encoding of categorical features.
2023-11-24 16:28:04,386:INFO:Finished creating preprocessing pipeline.
2023-11-24 16:28:04,389:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/46/tcczvndd7xj_pqs5r176bl600000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Number_of_vehicles_involved',
                                             'Number_of_casualties'],
                                    transformer=SimpleImputer(add_i...
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['Time'],
                                    transformer=TargetEncoder(cols=['Time'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2023-11-24 16:28:04,389:INFO:Creating final display dataframe.
2023-11-24 16:28:04,743:INFO:PyCaret ClassificationExperiment
2023-11-24 16:28:04,743:INFO:Logging name: clf-default-name
2023-11-24 16:28:04,743:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-11-24 16:28:04,743:INFO:version 3.2.0
2023-11-24 16:28:04,743:INFO:Initializing setup()
2023-11-24 16:28:04,743:INFO:self.USI: 48e4
2023-11-24 16:28:04,743:INFO:self._variable_keys: {'_available_plots', 'fix_imbalance', 'fold_shuffle_param', 'exp_id', 'y_test', 'y_train', 'n_jobs_param', 'memory', 'log_plots_param', 'html_param', 'gpu_param', '_ml_usecase', 'idx', 'pipeline', 'is_multiclass', 'seed', 'X_test', 'logging_param', 'data', 'fold_generator', 'exp_name_log', 'USI', 'X', 'fold_groups_param', 'X_train', 'y', 'gpu_n_jobs_param', 'target_param'}
2023-11-24 16:28:04,744:INFO:Checking environment
2023-11-24 16:28:04,744:INFO:python_version: 3.11.5
2023-11-24 16:28:04,744:INFO:python_build: ('main', 'Sep 11 2023 08:31:25')
2023-11-24 16:28:04,744:INFO:machine: arm64
2023-11-24 16:28:04,744:INFO:platform: macOS-14.0-arm64-arm-64bit
2023-11-24 16:28:04,744:INFO:Memory: svmem(total=17179869184, available=4398120960, percent=74.4, used=6331711488, free=65945600, active=4349394944, inactive=4316430336, wired=1982316544)
2023-11-24 16:28:04,744:INFO:Physical Core: 10
2023-11-24 16:28:04,744:INFO:Logical Core: 10
2023-11-24 16:28:04,744:INFO:Checking libraries
2023-11-24 16:28:04,744:INFO:System:
2023-11-24 16:28:04,744:INFO:    python: 3.11.5 (main, Sep 11 2023, 08:31:25) [Clang 14.0.6 ]
2023-11-24 16:28:04,744:INFO:executable: /Users/saiakhil/anaconda3/envs/mlauto/bin/python
2023-11-24 16:28:04,744:INFO:   machine: macOS-14.0-arm64-arm-64bit
2023-11-24 16:28:04,744:INFO:PyCaret required dependencies:
2023-11-24 16:28:04,744:INFO:                 pip: 23.3.1
2023-11-24 16:28:04,744:INFO:          setuptools: 68.0.0
2023-11-24 16:28:04,744:INFO:             pycaret: 3.2.0
2023-11-24 16:28:04,744:INFO:             IPython: 8.15.0
2023-11-24 16:28:04,744:INFO:          ipywidgets: 8.1.1
2023-11-24 16:28:04,744:INFO:                tqdm: 4.66.1
2023-11-24 16:28:04,744:INFO:               numpy: 1.25.2
2023-11-24 16:28:04,744:INFO:              pandas: 1.5.3
2023-11-24 16:28:04,744:INFO:              jinja2: 3.1.2
2023-11-24 16:28:04,744:INFO:               scipy: 1.11.3
2023-11-24 16:28:04,744:INFO:              joblib: 1.3.2
2023-11-24 16:28:04,744:INFO:             sklearn: 1.2.2
2023-11-24 16:28:04,744:INFO:                pyod: 1.1.2
2023-11-24 16:28:04,744:INFO:            imblearn: 0.11.0
2023-11-24 16:28:04,744:INFO:   category_encoders: 2.6.3
2023-11-24 16:28:04,744:INFO:            lightgbm: 4.1.0
2023-11-24 16:28:04,744:INFO:               numba: 0.58.1
2023-11-24 16:28:04,744:INFO:            requests: 2.31.0
2023-11-24 16:28:04,744:INFO:          matplotlib: 3.6.0
2023-11-24 16:28:04,744:INFO:          scikitplot: 0.3.7
2023-11-24 16:28:04,744:INFO:         yellowbrick: 1.5
2023-11-24 16:28:04,744:INFO:              plotly: 5.18.0
2023-11-24 16:28:04,744:INFO:    plotly-resampler: Not installed
2023-11-24 16:28:04,744:INFO:             kaleido: 0.2.1
2023-11-24 16:28:04,744:INFO:           schemdraw: 0.15
2023-11-24 16:28:04,744:INFO:         statsmodels: 0.14.0
2023-11-24 16:28:04,744:INFO:              sktime: 0.21.1
2023-11-24 16:28:04,744:INFO:               tbats: 1.1.3
2023-11-24 16:28:04,744:INFO:            pmdarima: 2.0.4
2023-11-24 16:28:04,745:INFO:              psutil: 5.9.6
2023-11-24 16:28:04,745:INFO:          markupsafe: 2.1.3
2023-11-24 16:28:04,745:INFO:             pickle5: Not installed
2023-11-24 16:28:04,745:INFO:         cloudpickle: 3.0.0
2023-11-24 16:28:04,745:INFO:         deprecation: 2.1.0
2023-11-24 16:28:04,745:INFO:              xxhash: 3.4.1
2023-11-24 16:28:04,745:INFO:           wurlitzer: 3.0.3
2023-11-24 16:28:04,745:INFO:PyCaret optional dependencies:
2023-11-24 16:28:04,745:INFO:                shap: Not installed
2023-11-24 16:28:04,745:INFO:           interpret: Not installed
2023-11-24 16:28:04,745:INFO:                umap: Not installed
2023-11-24 16:28:04,745:INFO:     ydata_profiling: 4.6.2
2023-11-24 16:28:04,745:INFO:  explainerdashboard: Not installed
2023-11-24 16:28:04,745:INFO:             autoviz: Not installed
2023-11-24 16:28:04,745:INFO:           fairlearn: Not installed
2023-11-24 16:28:04,745:INFO:          deepchecks: Not installed
2023-11-24 16:28:04,745:INFO:             xgboost: 1.7.3
2023-11-24 16:28:04,745:INFO:            catboost: Not installed
2023-11-24 16:28:04,745:INFO:              kmodes: Not installed
2023-11-24 16:28:04,745:INFO:             mlxtend: Not installed
2023-11-24 16:28:04,745:INFO:       statsforecast: Not installed
2023-11-24 16:28:04,745:INFO:        tune_sklearn: Not installed
2023-11-24 16:28:04,745:INFO:                 ray: Not installed
2023-11-24 16:28:04,745:INFO:            hyperopt: Not installed
2023-11-24 16:28:04,745:INFO:              optuna: Not installed
2023-11-24 16:28:04,745:INFO:               skopt: Not installed
2023-11-24 16:28:04,745:INFO:              mlflow: Not installed
2023-11-24 16:28:04,745:INFO:              gradio: Not installed
2023-11-24 16:28:04,745:INFO:             fastapi: Not installed
2023-11-24 16:28:04,745:INFO:             uvicorn: Not installed
2023-11-24 16:28:04,745:INFO:              m2cgen: Not installed
2023-11-24 16:28:04,745:INFO:           evidently: Not installed
2023-11-24 16:28:04,745:INFO:               fugue: Not installed
2023-11-24 16:28:04,745:INFO:           streamlit: 1.28.2
2023-11-24 16:28:04,745:INFO:             prophet: Not installed
2023-11-24 16:28:04,745:INFO:None
2023-11-24 16:28:04,745:INFO:Set up data.
2023-11-24 16:28:04,810:INFO:Set up folding strategy.
2023-11-24 16:28:04,810:INFO:Set up train/test split.
2023-11-24 16:28:04,837:INFO:Set up index.
2023-11-24 16:28:04,837:INFO:Assigning column types.
2023-11-24 16:28:04,839:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-24 16:28:04,856:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 16:28:04,856:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:28:04,867:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:28:04,868:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:28:04,885:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 16:28:04,886:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:28:04,896:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:28:04,897:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:28:04,897:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-11-24 16:28:04,915:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:28:04,925:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:28:04,926:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:28:04,943:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:28:04,953:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:28:04,955:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:28:04,955:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-11-24 16:28:04,983:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:28:04,983:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:28:05,011:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:28:05,012:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:28:05,013:INFO:Preparing preprocessing pipeline...
2023-11-24 16:28:05,013:INFO:Set up label encoding.
2023-11-24 16:28:05,013:INFO:Set up simple imputation.
2023-11-24 16:28:05,016:INFO:Set up encoding of categorical features.
2023-11-24 16:28:05,116:INFO:Setup _display_container:                     Description                                              Value
0                    Session id                                               6310
1                        Target                                  Accident_severity
2                   Target type                                         Multiclass
3                Target mapping  Fatal injury: 0, Serious Injury: 1, Slight Inj...
4           Original data shape                                        (12316, 32)
5        Transformed data shape                                       (12316, 207)
6   Transformed train set shape                                        (8621, 207)
7    Transformed test set shape                                        (3695, 207)
8              Numeric features                                                  2
9          Categorical features                                                 29
10     Rows with missing values                                              76.5%
11                   Preprocess                                               True
12              Imputation type                                             simple
13           Numeric imputation                                               mean
14       Categorical imputation                                               mode
15     Maximum one-hot encoding                                                 25
16              Encoding method                                               None
17               Fold Generator                                    StratifiedKFold
18                  Fold Number                                                 10
19                     CPU Jobs                                                 -1
20                      Use GPU                                              False
21               Log Experiment                                              False
22              Experiment Name                                   clf-default-name
23                          USI                                               291f
2023-11-24 16:28:05,146:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:28:05,147:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:28:05,175:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:28:05,176:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:28:05,177:INFO:setup() successfully completed in 1.44s...............
2023-11-24 16:28:05,571:INFO:Finished creating preprocessing pipeline.
2023-11-24 16:28:05,574:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/46/tcczvndd7xj_pqs5r176bl600000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Number_of_vehicles_involved',
                                             'Number_of_casualties'],
                                    transformer=SimpleImputer(add_i...
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['Time'],
                                    transformer=TargetEncoder(cols=['Time'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2023-11-24 16:28:05,574:INFO:Creating final display dataframe.
2023-11-24 16:28:06,038:INFO:Setup _display_container:                     Description                                              Value
0                    Session id                                               8851
1                        Target                                  Accident_severity
2                   Target type                                         Multiclass
3                Target mapping  Fatal injury: 0, Serious Injury: 1, Slight Inj...
4           Original data shape                                        (12316, 32)
5        Transformed data shape                                       (12316, 207)
6   Transformed train set shape                                        (8621, 207)
7    Transformed test set shape                                        (3695, 207)
8              Numeric features                                                  2
9          Categorical features                                                 29
10     Rows with missing values                                              76.5%
11                   Preprocess                                               True
12              Imputation type                                             simple
13           Numeric imputation                                               mean
14       Categorical imputation                                               mode
15     Maximum one-hot encoding                                                 25
16              Encoding method                                               None
17               Fold Generator                                    StratifiedKFold
18                  Fold Number                                                 10
19                     CPU Jobs                                                 -1
20                      Use GPU                                              False
21               Log Experiment                                              False
22              Experiment Name                                   clf-default-name
23                          USI                                               48e4
2023-11-24 16:28:06,066:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:28:06,067:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:28:06,095:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:28:06,096:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:28:06,097:INFO:setup() successfully completed in 1.36s...............
2023-11-24 16:28:07,898:INFO:Initializing compare_models()
2023-11-24 16:28:07,898:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2a58b1290>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x2a58b1290>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2023-11-24 16:28:07,899:INFO:Checking exceptions
2023-11-24 16:28:07,902:INFO:Preparing display monitor
2023-11-24 16:28:07,903:INFO:Initializing Logistic Regression
2023-11-24 16:28:07,903:INFO:Total runtime is 6.357828776041666e-07 minutes
2023-11-24 16:28:07,903:INFO:SubProcess create_model() called ==================================
2023-11-24 16:28:07,903:INFO:Initializing create_model()
2023-11-24 16:28:07,903:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2a58b1290>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28e7e0210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:28:07,903:INFO:Checking exceptions
2023-11-24 16:28:07,903:INFO:Importing libraries
2023-11-24 16:28:07,903:INFO:Copying training dataset
2023-11-24 16:28:07,905:INFO:Defining folds
2023-11-24 16:28:07,905:INFO:Declaring metric variables
2023-11-24 16:28:07,905:INFO:Importing untrained model
2023-11-24 16:28:07,905:INFO:Logistic Regression Imported successfully
2023-11-24 16:28:07,905:INFO:Starting cross validation
2023-11-24 16:28:07,906:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:28:12,744:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:12,748:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:12,750:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:12,760:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:12,766:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:12,780:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:12,783:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:12,784:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:28:12,785:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:12,790:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:12,838:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:12,841:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:12,843:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:12,871:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:12,873:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:12,876:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:12,924:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:12,927:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:12,928:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:28:12,929:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:13,250:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:13,253:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:13,255:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:13,264:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:13,267:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:13,269:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:13,319:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:13,322:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:13,324:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:13,489:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:13,491:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:13,492:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:28:13,493:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:13,499:INFO:Calculating mean and std
2023-11-24 16:28:13,499:INFO:Creating metrics dataframe
2023-11-24 16:28:13,502:INFO:Uploading results into container
2023-11-24 16:28:13,502:INFO:Uploading model into container now
2023-11-24 16:28:13,502:INFO:_master_model_container: 1
2023-11-24 16:28:13,502:INFO:_display_container: 2
2023-11-24 16:28:13,503:INFO:LogisticRegression(max_iter=1000, random_state=8851)
2023-11-24 16:28:13,503:INFO:create_model() successfully completed......................................
2023-11-24 16:28:13,598:INFO:SubProcess create_model() end ==================================
2023-11-24 16:28:13,598:INFO:Creating metrics dataframe
2023-11-24 16:28:13,599:INFO:Initializing K Neighbors Classifier
2023-11-24 16:28:13,600:INFO:Total runtime is 0.0949503501256307 minutes
2023-11-24 16:28:13,600:INFO:SubProcess create_model() called ==================================
2023-11-24 16:28:13,600:INFO:Initializing create_model()
2023-11-24 16:28:13,600:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2a58b1290>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28e7e0210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:28:13,600:INFO:Checking exceptions
2023-11-24 16:28:13,600:INFO:Importing libraries
2023-11-24 16:28:13,600:INFO:Copying training dataset
2023-11-24 16:28:13,602:INFO:Defining folds
2023-11-24 16:28:13,602:INFO:Declaring metric variables
2023-11-24 16:28:13,602:INFO:Importing untrained model
2023-11-24 16:28:13,602:INFO:K Neighbors Classifier Imported successfully
2023-11-24 16:28:13,602:INFO:Starting cross validation
2023-11-24 16:28:13,603:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:28:14,514:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:14,517:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:14,518:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:28:14,519:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:14,544:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:14,547:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:14,548:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:28:14,552:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:14,560:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:14,562:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:14,565:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:14,576:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:14,577:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:14,577:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:14,578:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:14,578:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:14,580:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:14,580:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:14,580:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:14,580:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:14,581:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:28:14,582:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:14,582:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:14,582:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:14,588:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:14,590:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:14,591:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:14,592:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:14,593:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:14,595:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:14,670:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:14,673:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:14,675:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:14,680:INFO:Calculating mean and std
2023-11-24 16:28:14,680:INFO:Creating metrics dataframe
2023-11-24 16:28:14,681:INFO:Uploading results into container
2023-11-24 16:28:14,682:INFO:Uploading model into container now
2023-11-24 16:28:14,682:INFO:_master_model_container: 2
2023-11-24 16:28:14,682:INFO:_display_container: 2
2023-11-24 16:28:14,682:INFO:KNeighborsClassifier(n_jobs=-1)
2023-11-24 16:28:14,682:INFO:create_model() successfully completed......................................
2023-11-24 16:28:14,769:INFO:SubProcess create_model() end ==================================
2023-11-24 16:28:14,769:INFO:Creating metrics dataframe
2023-11-24 16:28:14,770:INFO:Initializing Naive Bayes
2023-11-24 16:28:14,771:INFO:Total runtime is 0.11446646849314372 minutes
2023-11-24 16:28:14,771:INFO:SubProcess create_model() called ==================================
2023-11-24 16:28:14,771:INFO:Initializing create_model()
2023-11-24 16:28:14,771:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2a58b1290>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28e7e0210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:28:14,771:INFO:Checking exceptions
2023-11-24 16:28:14,771:INFO:Importing libraries
2023-11-24 16:28:14,771:INFO:Copying training dataset
2023-11-24 16:28:14,773:INFO:Defining folds
2023-11-24 16:28:14,773:INFO:Declaring metric variables
2023-11-24 16:28:14,773:INFO:Importing untrained model
2023-11-24 16:28:14,773:INFO:Naive Bayes Imported successfully
2023-11-24 16:28:14,773:INFO:Starting cross validation
2023-11-24 16:28:14,774:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:28:15,442:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:15,444:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:15,450:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:15,452:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:15,452:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:15,454:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:15,457:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:15,458:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:15,458:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:15,459:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:15,461:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:15,461:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:15,467:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:15,469:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:15,471:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:15,475:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:15,477:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:15,480:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:15,481:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:15,484:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:15,486:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:15,494:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:15,496:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:15,499:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:15,522:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:15,525:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:15,527:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:15,549:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:15,551:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:15,553:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:15,558:INFO:Calculating mean and std
2023-11-24 16:28:15,558:INFO:Creating metrics dataframe
2023-11-24 16:28:15,559:INFO:Uploading results into container
2023-11-24 16:28:15,560:INFO:Uploading model into container now
2023-11-24 16:28:15,560:INFO:_master_model_container: 3
2023-11-24 16:28:15,560:INFO:_display_container: 2
2023-11-24 16:28:15,560:INFO:GaussianNB()
2023-11-24 16:28:15,560:INFO:create_model() successfully completed......................................
2023-11-24 16:28:15,645:INFO:SubProcess create_model() end ==================================
2023-11-24 16:28:15,645:INFO:Creating metrics dataframe
2023-11-24 16:28:15,646:INFO:Initializing Decision Tree Classifier
2023-11-24 16:28:15,646:INFO:Total runtime is 0.12906360228856406 minutes
2023-11-24 16:28:15,646:INFO:SubProcess create_model() called ==================================
2023-11-24 16:28:15,646:INFO:Initializing create_model()
2023-11-24 16:28:15,646:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2a58b1290>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28e7e0210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:28:15,647:INFO:Checking exceptions
2023-11-24 16:28:15,647:INFO:Importing libraries
2023-11-24 16:28:15,647:INFO:Copying training dataset
2023-11-24 16:28:15,649:INFO:Defining folds
2023-11-24 16:28:15,649:INFO:Declaring metric variables
2023-11-24 16:28:15,649:INFO:Importing untrained model
2023-11-24 16:28:15,649:INFO:Decision Tree Classifier Imported successfully
2023-11-24 16:28:15,649:INFO:Starting cross validation
2023-11-24 16:28:15,650:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:28:16,447:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:16,449:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:16,453:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:16,456:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:16,457:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:16,458:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:16,459:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:16,460:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:16,460:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:16,462:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:16,463:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:16,464:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:16,468:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:16,470:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:16,470:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:16,472:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:16,472:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:16,473:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:16,475:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:16,476:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:16,478:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:16,478:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:16,480:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:16,483:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:16,496:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:16,498:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:16,501:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:16,513:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:16,515:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:16,517:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:16,521:INFO:Calculating mean and std
2023-11-24 16:28:16,521:INFO:Creating metrics dataframe
2023-11-24 16:28:16,523:INFO:Uploading results into container
2023-11-24 16:28:16,523:INFO:Uploading model into container now
2023-11-24 16:28:16,523:INFO:_master_model_container: 4
2023-11-24 16:28:16,523:INFO:_display_container: 2
2023-11-24 16:28:16,523:INFO:DecisionTreeClassifier(random_state=8851)
2023-11-24 16:28:16,523:INFO:create_model() successfully completed......................................
2023-11-24 16:28:16,608:INFO:SubProcess create_model() end ==================================
2023-11-24 16:28:16,608:INFO:Creating metrics dataframe
2023-11-24 16:28:16,609:INFO:Initializing SVM - Linear Kernel
2023-11-24 16:28:16,609:INFO:Total runtime is 0.14511599938074748 minutes
2023-11-24 16:28:16,610:INFO:SubProcess create_model() called ==================================
2023-11-24 16:28:16,610:INFO:Initializing create_model()
2023-11-24 16:28:16,610:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2a58b1290>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28e7e0210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:28:16,610:INFO:Checking exceptions
2023-11-24 16:28:16,610:INFO:Importing libraries
2023-11-24 16:28:16,610:INFO:Copying training dataset
2023-11-24 16:28:16,612:INFO:Defining folds
2023-11-24 16:28:16,612:INFO:Declaring metric variables
2023-11-24 16:28:16,612:INFO:Importing untrained model
2023-11-24 16:28:16,612:INFO:SVM - Linear Kernel Imported successfully
2023-11-24 16:28:16,612:INFO:Starting cross validation
2023-11-24 16:28:16,613:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:28:17,967:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:28:17,968:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:17,971:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:17,973:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:18,079:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:28:18,080:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:28:18,080:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:18,081:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:18,083:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:18,083:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:18,084:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:28:18,085:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:18,085:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:18,162:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:28:18,163:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:18,167:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:28:18,168:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:18,168:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:18,168:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:28:18,170:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:18,170:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:18,170:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:18,172:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:18,173:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:18,173:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:28:18,173:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:28:18,174:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:18,174:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:18,176:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:18,178:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:18,189:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:28:18,190:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:18,192:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:18,195:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:18,199:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:28:18,200:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:18,202:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:18,204:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:18,257:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:28:18,258:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:18,260:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:18,262:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:28:18,262:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:18,267:INFO:Calculating mean and std
2023-11-24 16:28:18,268:INFO:Creating metrics dataframe
2023-11-24 16:28:18,269:INFO:Uploading results into container
2023-11-24 16:28:18,269:INFO:Uploading model into container now
2023-11-24 16:28:18,269:INFO:_master_model_container: 5
2023-11-24 16:28:18,269:INFO:_display_container: 2
2023-11-24 16:28:18,269:INFO:SGDClassifier(eta0=0.001, n_jobs=-1, random_state=8851)
2023-11-24 16:28:18,269:INFO:create_model() successfully completed......................................
2023-11-24 16:28:18,356:INFO:SubProcess create_model() end ==================================
2023-11-24 16:28:18,356:INFO:Creating metrics dataframe
2023-11-24 16:28:18,358:INFO:Initializing Ridge Classifier
2023-11-24 16:28:18,358:INFO:Total runtime is 0.17425536712010703 minutes
2023-11-24 16:28:18,358:INFO:SubProcess create_model() called ==================================
2023-11-24 16:28:18,358:INFO:Initializing create_model()
2023-11-24 16:28:18,358:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2a58b1290>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28e7e0210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:28:18,358:INFO:Checking exceptions
2023-11-24 16:28:18,358:INFO:Importing libraries
2023-11-24 16:28:18,358:INFO:Copying training dataset
2023-11-24 16:28:18,360:INFO:Defining folds
2023-11-24 16:28:18,360:INFO:Declaring metric variables
2023-11-24 16:28:18,360:INFO:Importing untrained model
2023-11-24 16:28:18,360:INFO:Ridge Classifier Imported successfully
2023-11-24 16:28:18,360:INFO:Starting cross validation
2023-11-24 16:28:18,361:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:28:19,070:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:28:19,071:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:19,083:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:19,085:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:28:19,087:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:19,100:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:28:19,101:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:19,105:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:19,105:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:28:19,107:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:28:19,107:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:19,108:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:19,113:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:19,114:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:28:19,114:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:28:19,115:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:19,115:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:19,117:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:19,118:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:28:19,119:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:19,140:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:28:19,141:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:28:19,141:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:19,142:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:19,143:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:19,144:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:19,145:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:28:19,145:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:28:19,145:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:19,146:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:19,151:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:28:19,152:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:19,154:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:19,155:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:28:19,156:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:19,172:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:28:19,172:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:28:19,173:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:19,173:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:19,175:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:19,175:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:19,177:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:28:19,177:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:28:19,178:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:19,178:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:19,207:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:28:19,208:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:19,210:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:19,212:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:28:19,213:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:19,216:INFO:Calculating mean and std
2023-11-24 16:28:19,217:INFO:Creating metrics dataframe
2023-11-24 16:28:19,218:INFO:Uploading results into container
2023-11-24 16:28:19,218:INFO:Uploading model into container now
2023-11-24 16:28:19,218:INFO:_master_model_container: 6
2023-11-24 16:28:19,218:INFO:_display_container: 2
2023-11-24 16:28:19,219:INFO:RidgeClassifier(random_state=8851)
2023-11-24 16:28:19,219:INFO:create_model() successfully completed......................................
2023-11-24 16:28:19,307:INFO:SubProcess create_model() end ==================================
2023-11-24 16:28:19,307:INFO:Creating metrics dataframe
2023-11-24 16:28:19,309:INFO:Initializing Random Forest Classifier
2023-11-24 16:28:19,309:INFO:Total runtime is 0.19010456403096518 minutes
2023-11-24 16:28:19,309:INFO:SubProcess create_model() called ==================================
2023-11-24 16:28:19,309:INFO:Initializing create_model()
2023-11-24 16:28:19,309:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2a58b1290>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28e7e0210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:28:19,309:INFO:Checking exceptions
2023-11-24 16:28:19,309:INFO:Importing libraries
2023-11-24 16:28:19,309:INFO:Copying training dataset
2023-11-24 16:28:19,312:INFO:Defining folds
2023-11-24 16:28:19,312:INFO:Declaring metric variables
2023-11-24 16:28:19,312:INFO:Importing untrained model
2023-11-24 16:28:19,312:INFO:Random Forest Classifier Imported successfully
2023-11-24 16:28:19,312:INFO:Starting cross validation
2023-11-24 16:28:19,313:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:28:20,615:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:20,617:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:20,618:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:28:20,619:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:21,053:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:21,056:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:21,057:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:28:21,058:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:21,066:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:21,069:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:21,072:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:28:21,074:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:21,078:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:21,080:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:21,081:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:28:21,082:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:21,102:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:21,105:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:21,106:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:28:21,107:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:21,165:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:21,168:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:21,169:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:28:21,170:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:21,181:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:21,184:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:21,186:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:28:21,188:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:21,190:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:21,193:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:21,195:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:28:21,196:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:21,198:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:21,199:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:21,201:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:21,202:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:28:21,202:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:21,203:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:21,203:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:28:21,204:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:21,207:INFO:Calculating mean and std
2023-11-24 16:28:21,208:INFO:Creating metrics dataframe
2023-11-24 16:28:21,209:INFO:Uploading results into container
2023-11-24 16:28:21,209:INFO:Uploading model into container now
2023-11-24 16:28:21,209:INFO:_master_model_container: 7
2023-11-24 16:28:21,209:INFO:_display_container: 2
2023-11-24 16:28:21,209:INFO:RandomForestClassifier(n_jobs=-1, random_state=8851)
2023-11-24 16:28:21,209:INFO:create_model() successfully completed......................................
2023-11-24 16:28:21,295:INFO:SubProcess create_model() end ==================================
2023-11-24 16:28:21,295:INFO:Creating metrics dataframe
2023-11-24 16:28:21,297:INFO:Initializing Quadratic Discriminant Analysis
2023-11-24 16:28:21,297:INFO:Total runtime is 0.2232418656349182 minutes
2023-11-24 16:28:21,297:INFO:SubProcess create_model() called ==================================
2023-11-24 16:28:21,297:INFO:Initializing create_model()
2023-11-24 16:28:21,297:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2a58b1290>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28e7e0210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:28:21,297:INFO:Checking exceptions
2023-11-24 16:28:21,297:INFO:Importing libraries
2023-11-24 16:28:21,297:INFO:Copying training dataset
2023-11-24 16:28:21,300:INFO:Defining folds
2023-11-24 16:28:21,300:INFO:Declaring metric variables
2023-11-24 16:28:21,300:INFO:Importing untrained model
2023-11-24 16:28:21,300:INFO:Quadratic Discriminant Analysis Imported successfully
2023-11-24 16:28:21,300:INFO:Starting cross validation
2023-11-24 16:28:21,301:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:28:21,753:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 16:28:21,854:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 16:28:21,865:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 16:28:21,898:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 16:28:21,912:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 16:28:21,932:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 16:28:21,949:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 16:28:21,955:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 16:28:21,963:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 16:28:21,996:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:21,998:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:22,000:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:28:22,001:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:22,029:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 16:28:22,112:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:22,115:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:22,117:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:28:22,118:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:22,146:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:22,152:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:22,153:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:28:22,154:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:22,161:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:22,164:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:22,164:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:22,165:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:28:22,166:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:22,167:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:22,168:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:28:22,169:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:22,181:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:22,183:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:22,184:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:28:22,185:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:22,193:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:22,196:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:22,197:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:28:22,198:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:22,199:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:22,201:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:22,202:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:22,202:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:28:22,203:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:22,204:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:22,207:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:22,223:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:22,225:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:22,226:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:28:22,227:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:22,232:INFO:Calculating mean and std
2023-11-24 16:28:22,232:INFO:Creating metrics dataframe
2023-11-24 16:28:22,233:INFO:Uploading results into container
2023-11-24 16:28:22,233:INFO:Uploading model into container now
2023-11-24 16:28:22,234:INFO:_master_model_container: 8
2023-11-24 16:28:22,234:INFO:_display_container: 2
2023-11-24 16:28:22,234:INFO:QuadraticDiscriminantAnalysis()
2023-11-24 16:28:22,234:INFO:create_model() successfully completed......................................
2023-11-24 16:28:22,342:INFO:SubProcess create_model() end ==================================
2023-11-24 16:28:22,343:INFO:Creating metrics dataframe
2023-11-24 16:28:22,344:INFO:Initializing Ada Boost Classifier
2023-11-24 16:28:22,344:INFO:Total runtime is 0.24069445133209227 minutes
2023-11-24 16:28:22,344:INFO:SubProcess create_model() called ==================================
2023-11-24 16:28:22,344:INFO:Initializing create_model()
2023-11-24 16:28:22,344:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2a58b1290>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28e7e0210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:28:22,344:INFO:Checking exceptions
2023-11-24 16:28:22,344:INFO:Importing libraries
2023-11-24 16:28:22,344:INFO:Copying training dataset
2023-11-24 16:28:22,347:INFO:Defining folds
2023-11-24 16:28:22,347:INFO:Declaring metric variables
2023-11-24 16:28:22,347:INFO:Importing untrained model
2023-11-24 16:28:22,347:INFO:Ada Boost Classifier Imported successfully
2023-11-24 16:28:22,347:INFO:Starting cross validation
2023-11-24 16:28:22,348:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:28:23,664:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:23,670:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:23,672:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:23,710:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:23,712:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:23,713:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:23,714:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:23,715:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:23,717:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:23,721:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:23,724:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:23,724:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:23,726:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:23,727:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:23,729:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:23,742:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:23,744:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:23,746:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:23,748:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:23,751:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:23,753:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:23,761:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:23,763:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:23,766:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:23,782:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:23,784:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:23,787:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:23,790:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:23,793:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:23,795:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:23,799:INFO:Calculating mean and std
2023-11-24 16:28:23,800:INFO:Creating metrics dataframe
2023-11-24 16:28:23,801:INFO:Uploading results into container
2023-11-24 16:28:23,801:INFO:Uploading model into container now
2023-11-24 16:28:23,801:INFO:_master_model_container: 9
2023-11-24 16:28:23,801:INFO:_display_container: 2
2023-11-24 16:28:23,801:INFO:AdaBoostClassifier(random_state=8851)
2023-11-24 16:28:23,801:INFO:create_model() successfully completed......................................
2023-11-24 16:28:23,887:INFO:SubProcess create_model() end ==================================
2023-11-24 16:28:23,887:INFO:Creating metrics dataframe
2023-11-24 16:28:23,889:INFO:Initializing Gradient Boosting Classifier
2023-11-24 16:28:23,889:INFO:Total runtime is 0.2664404511451721 minutes
2023-11-24 16:28:23,889:INFO:SubProcess create_model() called ==================================
2023-11-24 16:28:23,889:INFO:Initializing create_model()
2023-11-24 16:28:23,889:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2a58b1290>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28e7e0210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:28:23,889:INFO:Checking exceptions
2023-11-24 16:28:23,889:INFO:Importing libraries
2023-11-24 16:28:23,889:INFO:Copying training dataset
2023-11-24 16:28:23,891:INFO:Defining folds
2023-11-24 16:28:23,891:INFO:Declaring metric variables
2023-11-24 16:28:23,891:INFO:Importing untrained model
2023-11-24 16:28:23,892:INFO:Gradient Boosting Classifier Imported successfully
2023-11-24 16:28:23,892:INFO:Starting cross validation
2023-11-24 16:28:23,893:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:28:31,810:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:31,814:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:31,816:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:31,920:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:31,922:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:31,926:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:31,947:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:31,950:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:31,952:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:31,974:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:31,974:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:31,976:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:31,977:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:31,978:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:31,979:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:32,003:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:32,004:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:32,005:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:32,006:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:32,008:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:32,008:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:32,018:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:32,019:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:32,020:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:32,021:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:32,021:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:28:32,022:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:32,023:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:32,058:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:32,061:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:32,063:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:32,067:INFO:Calculating mean and std
2023-11-24 16:28:32,068:INFO:Creating metrics dataframe
2023-11-24 16:28:32,069:INFO:Uploading results into container
2023-11-24 16:28:32,069:INFO:Uploading model into container now
2023-11-24 16:28:32,069:INFO:_master_model_container: 10
2023-11-24 16:28:32,069:INFO:_display_container: 2
2023-11-24 16:28:32,069:INFO:GradientBoostingClassifier(random_state=8851)
2023-11-24 16:28:32,069:INFO:create_model() successfully completed......................................
2023-11-24 16:28:32,157:INFO:SubProcess create_model() end ==================================
2023-11-24 16:28:32,157:INFO:Creating metrics dataframe
2023-11-24 16:28:32,158:INFO:Initializing Linear Discriminant Analysis
2023-11-24 16:28:32,158:INFO:Total runtime is 0.4042659640312195 minutes
2023-11-24 16:28:32,159:INFO:SubProcess create_model() called ==================================
2023-11-24 16:28:32,159:INFO:Initializing create_model()
2023-11-24 16:28:32,159:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2a58b1290>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28e7e0210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:28:32,159:INFO:Checking exceptions
2023-11-24 16:28:32,159:INFO:Importing libraries
2023-11-24 16:28:32,159:INFO:Copying training dataset
2023-11-24 16:28:32,161:INFO:Defining folds
2023-11-24 16:28:32,161:INFO:Declaring metric variables
2023-11-24 16:28:32,161:INFO:Importing untrained model
2023-11-24 16:28:32,161:INFO:Linear Discriminant Analysis Imported successfully
2023-11-24 16:28:32,161:INFO:Starting cross validation
2023-11-24 16:28:32,162:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:28:32,932:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:32,938:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:32,940:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:32,965:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:32,968:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:32,970:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:33,033:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:33,046:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:33,048:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:33,050:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:33,052:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:33,053:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:33,054:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:33,055:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:33,055:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:33,056:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:33,057:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:33,058:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:33,059:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:33,060:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:33,061:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:33,062:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:33,065:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:33,067:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:33,069:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:33,070:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:33,071:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:33,073:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:33,073:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:33,075:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:33,080:INFO:Calculating mean and std
2023-11-24 16:28:33,080:INFO:Creating metrics dataframe
2023-11-24 16:28:33,082:INFO:Uploading results into container
2023-11-24 16:28:33,082:INFO:Uploading model into container now
2023-11-24 16:28:33,082:INFO:_master_model_container: 11
2023-11-24 16:28:33,082:INFO:_display_container: 2
2023-11-24 16:28:33,082:INFO:LinearDiscriminantAnalysis()
2023-11-24 16:28:33,082:INFO:create_model() successfully completed......................................
2023-11-24 16:28:33,174:INFO:SubProcess create_model() end ==================================
2023-11-24 16:28:33,174:INFO:Creating metrics dataframe
2023-11-24 16:28:33,176:INFO:Initializing Extra Trees Classifier
2023-11-24 16:28:33,177:INFO:Total runtime is 0.42123375336329144 minutes
2023-11-24 16:28:33,177:INFO:SubProcess create_model() called ==================================
2023-11-24 16:28:33,177:INFO:Initializing create_model()
2023-11-24 16:28:33,177:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2a58b1290>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28e7e0210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:28:33,177:INFO:Checking exceptions
2023-11-24 16:28:33,177:INFO:Importing libraries
2023-11-24 16:28:33,177:INFO:Copying training dataset
2023-11-24 16:28:33,179:INFO:Defining folds
2023-11-24 16:28:33,179:INFO:Declaring metric variables
2023-11-24 16:28:33,179:INFO:Importing untrained model
2023-11-24 16:28:33,179:INFO:Extra Trees Classifier Imported successfully
2023-11-24 16:28:33,179:INFO:Starting cross validation
2023-11-24 16:28:33,180:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:28:34,573:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:34,575:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:34,577:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:28:34,578:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:35,383:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:35,386:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:35,388:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:28:35,389:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:35,403:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:35,406:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:35,407:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:28:35,409:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:35,411:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:35,411:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:35,413:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:35,415:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:28:35,417:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:35,418:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:35,419:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:35,423:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:28:35,423:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:35,425:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:28:35,425:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:35,426:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:35,429:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:35,431:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:35,434:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:35,436:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:28:35,437:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:35,440:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:35,442:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:28:35,443:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:35,472:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:35,475:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:35,477:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:28:35,479:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:35,502:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:35,506:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:35,508:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:28:35,510:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:35,516:INFO:Calculating mean and std
2023-11-24 16:28:35,517:INFO:Creating metrics dataframe
2023-11-24 16:28:35,518:INFO:Uploading results into container
2023-11-24 16:28:35,519:INFO:Uploading model into container now
2023-11-24 16:28:35,519:INFO:_master_model_container: 12
2023-11-24 16:28:35,519:INFO:_display_container: 2
2023-11-24 16:28:35,519:INFO:ExtraTreesClassifier(n_jobs=-1, random_state=8851)
2023-11-24 16:28:35,519:INFO:create_model() successfully completed......................................
2023-11-24 16:28:35,617:INFO:SubProcess create_model() end ==================================
2023-11-24 16:28:35,617:INFO:Creating metrics dataframe
2023-11-24 16:28:35,619:INFO:Initializing Extreme Gradient Boosting
2023-11-24 16:28:35,619:INFO:Total runtime is 0.46194208463033043 minutes
2023-11-24 16:28:35,619:INFO:SubProcess create_model() called ==================================
2023-11-24 16:28:35,619:INFO:Initializing create_model()
2023-11-24 16:28:35,619:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2a58b1290>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28e7e0210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:28:35,619:INFO:Checking exceptions
2023-11-24 16:28:35,619:INFO:Importing libraries
2023-11-24 16:28:35,619:INFO:Copying training dataset
2023-11-24 16:28:35,622:INFO:Defining folds
2023-11-24 16:28:35,622:INFO:Declaring metric variables
2023-11-24 16:28:35,622:INFO:Importing untrained model
2023-11-24 16:28:35,622:INFO:Extreme Gradient Boosting Imported successfully
2023-11-24 16:28:35,622:INFO:Starting cross validation
2023-11-24 16:28:35,623:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:28:55,046:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:55,049:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:55,057:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:55,139:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:55,141:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:55,143:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:55,180:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:55,182:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:55,184:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:55,221:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:55,224:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:55,229:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:55,274:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:55,279:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:55,282:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:55,331:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:55,335:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:55,338:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:55,465:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:55,468:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:55,470:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:55,500:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:55,502:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:55,505:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:55,517:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:55,519:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:55,521:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:55,579:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:55,581:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:55,584:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:55,590:INFO:Calculating mean and std
2023-11-24 16:28:55,590:INFO:Creating metrics dataframe
2023-11-24 16:28:55,593:INFO:Uploading results into container
2023-11-24 16:28:55,593:INFO:Uploading model into container now
2023-11-24 16:28:55,594:INFO:_master_model_container: 13
2023-11-24 16:28:55,594:INFO:_display_container: 2
2023-11-24 16:28:55,594:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              predictor=None, random_state=8851, ...)
2023-11-24 16:28:55,594:INFO:create_model() successfully completed......................................
2023-11-24 16:28:55,750:INFO:SubProcess create_model() end ==================================
2023-11-24 16:28:55,750:INFO:Creating metrics dataframe
2023-11-24 16:28:55,752:INFO:Initializing Light Gradient Boosting Machine
2023-11-24 16:28:55,752:INFO:Total runtime is 0.7974864840507507 minutes
2023-11-24 16:28:55,752:INFO:SubProcess create_model() called ==================================
2023-11-24 16:28:55,752:INFO:Initializing create_model()
2023-11-24 16:28:55,752:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2a58b1290>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28e7e0210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:28:55,752:INFO:Checking exceptions
2023-11-24 16:28:55,752:INFO:Importing libraries
2023-11-24 16:28:55,752:INFO:Copying training dataset
2023-11-24 16:28:55,755:INFO:Defining folds
2023-11-24 16:28:55,755:INFO:Declaring metric variables
2023-11-24 16:28:55,755:INFO:Importing untrained model
2023-11-24 16:28:55,755:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-24 16:28:55,755:INFO:Starting cross validation
2023-11-24 16:28:55,756:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:28:56,675:WARNING:create_model() for lightgbm raised an exception or returned all 0.0, trying without fit_kwargs:
2023-11-24 16:28:56,676:WARNING:Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/sklearn.py", line 1142, in fit
    super().fit(
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/sklearn.py", line 842, in fit
    self._Booster = train(
                    ^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/engine.py", line 255, in train
    booster = Booster(params=params, train_set=train_set)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 3200, in __init__
    train_set.construct()
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 2276, in construct
    self._lazy_init(data=self.data, label=self.label, reference=None,
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 1959, in _lazy_init
    return self.set_feature_name(feature_name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 2639, in set_feature_name
    _safe_call(_LIB.LGBM_DatasetSetFeatureNames(
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 242, in _safe_call
    raise LightGBMError(_LIB.LGBM_GetLastError().decode('utf-8'))
lightgbm.basic.LightGBMError: Do not support special JSON characters in feature name.


2023-11-24 16:28:56,676:INFO:Initializing create_model()
2023-11-24 16:28:56,676:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2a58b1290>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28e7e0210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:28:56,676:INFO:Checking exceptions
2023-11-24 16:28:56,676:INFO:Importing libraries
2023-11-24 16:28:56,676:INFO:Copying training dataset
2023-11-24 16:28:56,680:INFO:Defining folds
2023-11-24 16:28:56,680:INFO:Declaring metric variables
2023-11-24 16:28:56,681:INFO:Importing untrained model
2023-11-24 16:28:56,681:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-24 16:28:56,681:INFO:Starting cross validation
2023-11-24 16:28:56,682:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:28:57,438:ERROR:create_model() for lightgbm raised an exception or returned all 0.0:
2023-11-24 16:28:57,440:ERROR:Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/sklearn.py", line 1142, in fit
    super().fit(
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/sklearn.py", line 842, in fit
    self._Booster = train(
                    ^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/engine.py", line 255, in train
    booster = Booster(params=params, train_set=train_set)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 3200, in __init__
    train_set.construct()
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 2276, in construct
    self._lazy_init(data=self.data, label=self.label, reference=None,
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 1959, in _lazy_init
    return self.set_feature_name(feature_name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 2639, in set_feature_name
    _safe_call(_LIB.LGBM_DatasetSetFeatureNames(
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 242, in _safe_call
    raise LightGBMError(_LIB.LGBM_GetLastError().decode('utf-8'))
lightgbm.basic.LightGBMError: Do not support special JSON characters in feature name.


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/sklearn.py", line 1142, in fit
    super().fit(
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/sklearn.py", line 842, in fit
    self._Booster = train(
                    ^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/engine.py", line 255, in train
    booster = Booster(params=params, train_set=train_set)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 3200, in __init__
    train_set.construct()
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 2276, in construct
    self._lazy_init(data=self.data, label=self.label, reference=None,
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 1959, in _lazy_init
    return self.set_feature_name(feature_name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 2639, in set_feature_name
    _safe_call(_LIB.LGBM_DatasetSetFeatureNames(
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 242, in _safe_call
    raise LightGBMError(_LIB.LGBM_GetLastError().decode('utf-8'))
lightgbm.basic.LightGBMError: Do not support special JSON characters in feature name.


2023-11-24 16:28:57,440:INFO:Initializing Dummy Classifier
2023-11-24 16:28:57,440:INFO:Total runtime is 0.825627601146698 minutes
2023-11-24 16:28:57,440:INFO:SubProcess create_model() called ==================================
2023-11-24 16:28:57,440:INFO:Initializing create_model()
2023-11-24 16:28:57,440:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2a58b1290>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28e7e0210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:28:57,440:INFO:Checking exceptions
2023-11-24 16:28:57,440:INFO:Importing libraries
2023-11-24 16:28:57,440:INFO:Copying training dataset
2023-11-24 16:28:57,443:INFO:Defining folds
2023-11-24 16:28:57,443:INFO:Declaring metric variables
2023-11-24 16:28:57,443:INFO:Importing untrained model
2023-11-24 16:28:57,443:INFO:Dummy Classifier Imported successfully
2023-11-24 16:28:57,443:INFO:Starting cross validation
2023-11-24 16:28:57,445:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:28:58,120:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:58,123:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:58,124:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:28:58,125:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:58,148:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:58,151:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:58,153:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:28:58,154:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:58,156:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:58,158:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:58,160:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:28:58,161:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:58,174:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:58,177:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:58,178:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:28:58,179:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:58,185:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:58,186:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:58,188:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:58,189:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:58,189:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:58,190:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:28:58,190:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:28:58,191:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:58,191:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:58,192:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:58,193:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:28:58,194:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:58,210:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:58,213:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:58,215:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:28:58,216:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:58,216:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:58,219:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:58,220:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:28:58,221:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:58,245:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:58,248:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:58,249:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:28:58,250:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:28:58,255:INFO:Calculating mean and std
2023-11-24 16:28:58,255:INFO:Creating metrics dataframe
2023-11-24 16:28:58,257:INFO:Uploading results into container
2023-11-24 16:28:58,257:INFO:Uploading model into container now
2023-11-24 16:28:58,257:INFO:_master_model_container: 14
2023-11-24 16:28:58,257:INFO:_display_container: 2
2023-11-24 16:28:58,257:INFO:DummyClassifier(random_state=8851)
2023-11-24 16:28:58,257:INFO:create_model() successfully completed......................................
2023-11-24 16:28:58,353:INFO:SubProcess create_model() end ==================================
2023-11-24 16:28:58,353:INFO:Creating metrics dataframe
2023-11-24 16:28:58,355:INFO:Initializing create_model()
2023-11-24 16:28:58,355:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2a58b1290>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              predictor=None, random_state=8851, ...), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:28:58,355:INFO:Checking exceptions
2023-11-24 16:28:58,355:INFO:Importing libraries
2023-11-24 16:28:58,355:INFO:Copying training dataset
2023-11-24 16:28:58,358:INFO:Defining folds
2023-11-24 16:28:58,358:INFO:Declaring metric variables
2023-11-24 16:28:58,358:INFO:Importing untrained model
2023-11-24 16:28:58,358:INFO:Declaring custom model
2023-11-24 16:28:58,358:INFO:Extreme Gradient Boosting Imported successfully
2023-11-24 16:28:58,359:INFO:Cross validation set to False
2023-11-24 16:28:58,359:INFO:Fitting Model
2023-11-24 16:29:01,302:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='multi:softprob', predictor=None, ...)
2023-11-24 16:29:01,302:INFO:create_model() successfully completed......................................
2023-11-24 16:29:01,395:INFO:_master_model_container: 14
2023-11-24 16:29:01,395:INFO:_display_container: 2
2023-11-24 16:29:01,395:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='multi:softprob', predictor=None, ...)
2023-11-24 16:29:01,395:INFO:compare_models() successfully completed......................................
2023-11-24 16:29:01,401:INFO:Initializing save_model()
2023-11-24 16:29:01,401:INFO:save_model(model=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='multi:softprob', predictor=None, ...), model_name=best_model, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/46/tcczvndd7xj_pqs5r176bl600000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Number_of_vehicles_involved',
                                             'Number_of_casualties'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrappe...
                                                                    'Vehicle_movement',
                                                                    'Casualty_class',
                                                                    'Sex_of_casualty',
                                                                    'Age_band_of_casualty',
                                                                    'Casualty_severity',
                                                                    'Work_of_casuality',
                                                                    'Fitness_of_casuality',
                                                                    'Pedestrian_movement',
                                                                    'Cause_of_accident'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['Time'],
                                    transformer=TargetEncoder(cols=['Time'],
                                                              handle_missing='return_nan')))]), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-11-24 16:29:01,401:INFO:Adding model into prep_pipe
2023-11-24 16:29:01,447:INFO:best_model.pkl saved in current working directory
2023-11-24 16:29:01,452:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Number_of_vehicles_involved',
                                             'Number_of_casualties'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Time', 'Day_of_week',
                                             'Age_band_of_driver',
                                             'S...
                               grow_policy=None, importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, n_estimators=100,
                               n_jobs=-1, num_parallel_tree=None,
                               objective='multi:softprob', predictor=None, ...))])
2023-11-24 16:29:01,452:INFO:save_model() successfully completed......................................
2023-11-24 16:35:34,039:INFO:PyCaret ClassificationExperiment
2023-11-24 16:35:34,039:INFO:Logging name: clf-default-name
2023-11-24 16:35:34,039:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-11-24 16:35:34,039:INFO:version 3.2.0
2023-11-24 16:35:34,039:INFO:Initializing setup()
2023-11-24 16:35:34,039:INFO:self.USI: 9802
2023-11-24 16:35:34,039:INFO:self._variable_keys: {'_available_plots', 'fix_imbalance', 'fold_shuffle_param', 'exp_id', 'y_test', 'y_train', 'n_jobs_param', 'memory', 'log_plots_param', 'html_param', 'gpu_param', '_ml_usecase', 'idx', 'pipeline', 'is_multiclass', 'seed', 'X_test', 'logging_param', 'data', 'fold_generator', 'exp_name_log', 'USI', 'X', 'fold_groups_param', 'X_train', 'y', 'gpu_n_jobs_param', 'target_param'}
2023-11-24 16:35:34,039:INFO:Checking environment
2023-11-24 16:35:34,039:INFO:python_version: 3.11.5
2023-11-24 16:35:34,039:INFO:python_build: ('main', 'Sep 11 2023 08:31:25')
2023-11-24 16:35:34,039:INFO:machine: arm64
2023-11-24 16:35:34,039:INFO:platform: macOS-14.0-arm64-arm-64bit
2023-11-24 16:35:34,039:INFO:Memory: svmem(total=17179869184, available=5513641984, percent=67.9, used=6416302080, free=1069678592, active=4454350848, inactive=4399857664, wired=1961951232)
2023-11-24 16:35:34,039:INFO:Physical Core: 10
2023-11-24 16:35:34,039:INFO:Logical Core: 10
2023-11-24 16:35:34,039:INFO:Checking libraries
2023-11-24 16:35:34,039:INFO:System:
2023-11-24 16:35:34,039:INFO:    python: 3.11.5 (main, Sep 11 2023, 08:31:25) [Clang 14.0.6 ]
2023-11-24 16:35:34,039:INFO:executable: /Users/saiakhil/anaconda3/envs/mlauto/bin/python
2023-11-24 16:35:34,039:INFO:   machine: macOS-14.0-arm64-arm-64bit
2023-11-24 16:35:34,039:INFO:PyCaret required dependencies:
2023-11-24 16:35:34,039:INFO:                 pip: 23.3.1
2023-11-24 16:35:34,040:INFO:          setuptools: 68.0.0
2023-11-24 16:35:34,040:INFO:             pycaret: 3.2.0
2023-11-24 16:35:34,040:INFO:             IPython: 8.15.0
2023-11-24 16:35:34,040:INFO:          ipywidgets: 8.1.1
2023-11-24 16:35:34,040:INFO:                tqdm: 4.66.1
2023-11-24 16:35:34,040:INFO:               numpy: 1.25.2
2023-11-24 16:35:34,040:INFO:              pandas: 1.5.3
2023-11-24 16:35:34,040:INFO:              jinja2: 3.1.2
2023-11-24 16:35:34,040:INFO:               scipy: 1.11.3
2023-11-24 16:35:34,040:INFO:              joblib: 1.3.2
2023-11-24 16:35:34,040:INFO:             sklearn: 1.2.2
2023-11-24 16:35:34,040:INFO:                pyod: 1.1.2
2023-11-24 16:35:34,040:INFO:            imblearn: 0.11.0
2023-11-24 16:35:34,040:INFO:   category_encoders: 2.6.3
2023-11-24 16:35:34,040:INFO:            lightgbm: 4.1.0
2023-11-24 16:35:34,040:INFO:               numba: 0.58.1
2023-11-24 16:35:34,040:INFO:            requests: 2.31.0
2023-11-24 16:35:34,040:INFO:          matplotlib: 3.6.0
2023-11-24 16:35:34,040:INFO:          scikitplot: 0.3.7
2023-11-24 16:35:34,040:INFO:         yellowbrick: 1.5
2023-11-24 16:35:34,040:INFO:              plotly: 5.18.0
2023-11-24 16:35:34,040:INFO:    plotly-resampler: Not installed
2023-11-24 16:35:34,040:INFO:             kaleido: 0.2.1
2023-11-24 16:35:34,040:INFO:           schemdraw: 0.15
2023-11-24 16:35:34,040:INFO:         statsmodels: 0.14.0
2023-11-24 16:35:34,040:INFO:              sktime: 0.21.1
2023-11-24 16:35:34,040:INFO:               tbats: 1.1.3
2023-11-24 16:35:34,040:INFO:            pmdarima: 2.0.4
2023-11-24 16:35:34,040:INFO:              psutil: 5.9.6
2023-11-24 16:35:34,040:INFO:          markupsafe: 2.1.3
2023-11-24 16:35:34,040:INFO:             pickle5: Not installed
2023-11-24 16:35:34,040:INFO:         cloudpickle: 3.0.0
2023-11-24 16:35:34,040:INFO:         deprecation: 2.1.0
2023-11-24 16:35:34,040:INFO:              xxhash: 3.4.1
2023-11-24 16:35:34,040:INFO:           wurlitzer: 3.0.3
2023-11-24 16:35:34,040:INFO:PyCaret optional dependencies:
2023-11-24 16:35:34,040:INFO:                shap: Not installed
2023-11-24 16:35:34,040:INFO:           interpret: Not installed
2023-11-24 16:35:34,040:INFO:                umap: Not installed
2023-11-24 16:35:34,040:INFO:     ydata_profiling: 4.6.2
2023-11-24 16:35:34,040:INFO:  explainerdashboard: Not installed
2023-11-24 16:35:34,040:INFO:             autoviz: Not installed
2023-11-24 16:35:34,040:INFO:           fairlearn: Not installed
2023-11-24 16:35:34,040:INFO:          deepchecks: Not installed
2023-11-24 16:35:34,040:INFO:             xgboost: 1.7.3
2023-11-24 16:35:34,040:INFO:            catboost: Not installed
2023-11-24 16:35:34,040:INFO:              kmodes: Not installed
2023-11-24 16:35:34,040:INFO:             mlxtend: Not installed
2023-11-24 16:35:34,040:INFO:       statsforecast: Not installed
2023-11-24 16:35:34,040:INFO:        tune_sklearn: Not installed
2023-11-24 16:35:34,040:INFO:                 ray: Not installed
2023-11-24 16:35:34,040:INFO:            hyperopt: Not installed
2023-11-24 16:35:34,040:INFO:              optuna: Not installed
2023-11-24 16:35:34,040:INFO:               skopt: Not installed
2023-11-24 16:35:34,040:INFO:              mlflow: Not installed
2023-11-24 16:35:34,040:INFO:              gradio: Not installed
2023-11-24 16:35:34,040:INFO:             fastapi: Not installed
2023-11-24 16:35:34,040:INFO:             uvicorn: Not installed
2023-11-24 16:35:34,040:INFO:              m2cgen: Not installed
2023-11-24 16:35:34,040:INFO:           evidently: Not installed
2023-11-24 16:35:34,040:INFO:               fugue: Not installed
2023-11-24 16:35:34,040:INFO:           streamlit: 1.28.2
2023-11-24 16:35:34,040:INFO:             prophet: Not installed
2023-11-24 16:35:34,040:INFO:None
2023-11-24 16:35:34,040:INFO:Set up data.
2023-11-24 16:35:34,064:INFO:Set up folding strategy.
2023-11-24 16:35:34,064:INFO:Set up train/test split.
2023-11-24 16:35:34,073:INFO:Set up index.
2023-11-24 16:35:34,073:INFO:Assigning column types.
2023-11-24 16:35:34,074:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-24 16:35:34,091:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 16:35:34,091:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:35:34,103:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:35:34,104:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:35:34,120:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 16:35:34,121:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:35:34,132:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:35:34,133:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:35:34,133:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-11-24 16:35:34,150:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:35:34,162:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:35:34,163:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:35:34,181:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:35:34,192:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:35:34,193:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:35:34,193:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-11-24 16:35:34,221:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:35:34,222:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:35:34,250:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:35:34,251:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:35:34,251:INFO:Preparing preprocessing pipeline...
2023-11-24 16:35:34,252:INFO:Set up label encoding.
2023-11-24 16:35:34,252:INFO:Set up simple imputation.
2023-11-24 16:35:34,254:INFO:Set up encoding of categorical features.
2023-11-24 16:35:34,623:INFO:Finished creating preprocessing pipeline.
2023-11-24 16:35:34,626:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/46/tcczvndd7xj_pqs5r176bl600000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Number_of_vehicles_involved',
                                             'Number_of_casualties'],
                                    transformer=SimpleImputer(add_i...
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['Time'],
                                    transformer=TargetEncoder(cols=['Time'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2023-11-24 16:35:34,626:INFO:Creating final display dataframe.
2023-11-24 16:35:35,072:INFO:Setup _display_container:                     Description                                              Value
0                    Session id                                               5731
1                        Target                                  Accident_severity
2                   Target type                                         Multiclass
3                Target mapping  Fatal injury: 0, Serious Injury: 1, Slight Inj...
4           Original data shape                                        (12316, 32)
5        Transformed data shape                                       (12316, 207)
6   Transformed train set shape                                        (8621, 207)
7    Transformed test set shape                                        (3695, 207)
8              Numeric features                                                  2
9          Categorical features                                                 29
10     Rows with missing values                                              76.5%
11                   Preprocess                                               True
12              Imputation type                                             simple
13           Numeric imputation                                               mean
14       Categorical imputation                                               mode
15     Maximum one-hot encoding                                                 25
16              Encoding method                                               None
17               Fold Generator                                    StratifiedKFold
18                  Fold Number                                                 10
19                     CPU Jobs                                                 -1
20                      Use GPU                                              False
21               Log Experiment                                              False
22              Experiment Name                                   clf-default-name
23                          USI                                               9802
2023-11-24 16:35:35,101:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:35:35,102:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:35:35,129:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:35:35,131:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:35:35,131:INFO:setup() successfully completed in 1.09s...............
2023-11-24 16:36:09,734:INFO:PyCaret ClassificationExperiment
2023-11-24 16:36:09,734:INFO:Logging name: clf-default-name
2023-11-24 16:36:09,734:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-11-24 16:36:09,734:INFO:version 3.2.0
2023-11-24 16:36:09,734:INFO:Initializing setup()
2023-11-24 16:36:09,734:INFO:self.USI: 1c20
2023-11-24 16:36:09,734:INFO:self._variable_keys: {'_available_plots', 'fix_imbalance', 'fold_shuffle_param', 'exp_id', 'y_test', 'y_train', 'n_jobs_param', 'memory', 'log_plots_param', 'html_param', 'gpu_param', '_ml_usecase', 'idx', 'pipeline', 'is_multiclass', 'seed', 'X_test', 'logging_param', 'data', 'fold_generator', 'exp_name_log', 'USI', 'X', 'fold_groups_param', 'X_train', 'y', 'gpu_n_jobs_param', 'target_param'}
2023-11-24 16:36:09,734:INFO:Checking environment
2023-11-24 16:36:09,734:INFO:python_version: 3.11.5
2023-11-24 16:36:09,734:INFO:python_build: ('main', 'Sep 11 2023 08:31:25')
2023-11-24 16:36:09,734:INFO:machine: arm64
2023-11-24 16:36:09,734:INFO:platform: macOS-14.0-arm64-arm-64bit
2023-11-24 16:36:09,734:INFO:Memory: svmem(total=17179869184, available=5337546752, percent=68.9, used=6607650816, free=755040256, active=4575707136, inactive=4533846016, wired=2031943680)
2023-11-24 16:36:09,734:INFO:Physical Core: 10
2023-11-24 16:36:09,734:INFO:Logical Core: 10
2023-11-24 16:36:09,734:INFO:Checking libraries
2023-11-24 16:36:09,734:INFO:System:
2023-11-24 16:36:09,734:INFO:    python: 3.11.5 (main, Sep 11 2023, 08:31:25) [Clang 14.0.6 ]
2023-11-24 16:36:09,734:INFO:executable: /Users/saiakhil/anaconda3/envs/mlauto/bin/python
2023-11-24 16:36:09,734:INFO:   machine: macOS-14.0-arm64-arm-64bit
2023-11-24 16:36:09,734:INFO:PyCaret required dependencies:
2023-11-24 16:36:09,734:INFO:                 pip: 23.3.1
2023-11-24 16:36:09,734:INFO:          setuptools: 68.0.0
2023-11-24 16:36:09,734:INFO:             pycaret: 3.2.0
2023-11-24 16:36:09,734:INFO:             IPython: 8.15.0
2023-11-24 16:36:09,734:INFO:          ipywidgets: 8.1.1
2023-11-24 16:36:09,734:INFO:                tqdm: 4.66.1
2023-11-24 16:36:09,734:INFO:               numpy: 1.25.2
2023-11-24 16:36:09,734:INFO:              pandas: 1.5.3
2023-11-24 16:36:09,734:INFO:              jinja2: 3.1.2
2023-11-24 16:36:09,734:INFO:               scipy: 1.11.3
2023-11-24 16:36:09,734:INFO:              joblib: 1.3.2
2023-11-24 16:36:09,734:INFO:             sklearn: 1.2.2
2023-11-24 16:36:09,734:INFO:                pyod: 1.1.2
2023-11-24 16:36:09,734:INFO:            imblearn: 0.11.0
2023-11-24 16:36:09,734:INFO:   category_encoders: 2.6.3
2023-11-24 16:36:09,734:INFO:            lightgbm: 4.1.0
2023-11-24 16:36:09,734:INFO:               numba: 0.58.1
2023-11-24 16:36:09,734:INFO:            requests: 2.31.0
2023-11-24 16:36:09,734:INFO:          matplotlib: 3.6.0
2023-11-24 16:36:09,734:INFO:          scikitplot: 0.3.7
2023-11-24 16:36:09,734:INFO:         yellowbrick: 1.5
2023-11-24 16:36:09,734:INFO:              plotly: 5.18.0
2023-11-24 16:36:09,734:INFO:    plotly-resampler: Not installed
2023-11-24 16:36:09,734:INFO:             kaleido: 0.2.1
2023-11-24 16:36:09,734:INFO:           schemdraw: 0.15
2023-11-24 16:36:09,734:INFO:         statsmodels: 0.14.0
2023-11-24 16:36:09,734:INFO:              sktime: 0.21.1
2023-11-24 16:36:09,735:INFO:               tbats: 1.1.3
2023-11-24 16:36:09,735:INFO:            pmdarima: 2.0.4
2023-11-24 16:36:09,735:INFO:              psutil: 5.9.6
2023-11-24 16:36:09,735:INFO:          markupsafe: 2.1.3
2023-11-24 16:36:09,735:INFO:             pickle5: Not installed
2023-11-24 16:36:09,735:INFO:         cloudpickle: 3.0.0
2023-11-24 16:36:09,735:INFO:         deprecation: 2.1.0
2023-11-24 16:36:09,735:INFO:              xxhash: 3.4.1
2023-11-24 16:36:09,735:INFO:           wurlitzer: 3.0.3
2023-11-24 16:36:09,735:INFO:PyCaret optional dependencies:
2023-11-24 16:36:09,735:INFO:                shap: Not installed
2023-11-24 16:36:09,735:INFO:           interpret: Not installed
2023-11-24 16:36:09,735:INFO:                umap: Not installed
2023-11-24 16:36:09,735:INFO:     ydata_profiling: 4.6.2
2023-11-24 16:36:09,735:INFO:  explainerdashboard: Not installed
2023-11-24 16:36:09,735:INFO:             autoviz: Not installed
2023-11-24 16:36:09,735:INFO:           fairlearn: Not installed
2023-11-24 16:36:09,735:INFO:          deepchecks: Not installed
2023-11-24 16:36:09,735:INFO:             xgboost: 1.7.3
2023-11-24 16:36:09,735:INFO:            catboost: Not installed
2023-11-24 16:36:09,735:INFO:              kmodes: Not installed
2023-11-24 16:36:09,735:INFO:             mlxtend: Not installed
2023-11-24 16:36:09,735:INFO:       statsforecast: Not installed
2023-11-24 16:36:09,735:INFO:        tune_sklearn: Not installed
2023-11-24 16:36:09,735:INFO:                 ray: Not installed
2023-11-24 16:36:09,735:INFO:            hyperopt: Not installed
2023-11-24 16:36:09,735:INFO:              optuna: Not installed
2023-11-24 16:36:09,735:INFO:               skopt: Not installed
2023-11-24 16:36:09,735:INFO:              mlflow: Not installed
2023-11-24 16:36:09,735:INFO:              gradio: Not installed
2023-11-24 16:36:09,735:INFO:             fastapi: Not installed
2023-11-24 16:36:09,735:INFO:             uvicorn: Not installed
2023-11-24 16:36:09,735:INFO:              m2cgen: Not installed
2023-11-24 16:36:09,735:INFO:           evidently: Not installed
2023-11-24 16:36:09,735:INFO:               fugue: Not installed
2023-11-24 16:36:09,735:INFO:           streamlit: 1.28.2
2023-11-24 16:36:09,735:INFO:             prophet: Not installed
2023-11-24 16:36:09,735:INFO:None
2023-11-24 16:36:09,735:INFO:Set up data.
2023-11-24 16:36:09,757:INFO:Set up folding strategy.
2023-11-24 16:36:09,757:INFO:Set up train/test split.
2023-11-24 16:36:09,764:INFO:Set up index.
2023-11-24 16:36:09,764:INFO:Assigning column types.
2023-11-24 16:36:09,765:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-24 16:36:09,782:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 16:36:09,782:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:36:09,793:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:36:09,794:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:36:09,810:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 16:36:09,810:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:36:09,820:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:36:09,821:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:36:09,821:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-11-24 16:36:09,838:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:36:09,848:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:36:09,849:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:36:09,866:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:36:09,876:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:36:09,877:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:36:09,877:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-11-24 16:36:09,903:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:36:09,904:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:36:09,931:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:36:09,931:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:36:09,932:INFO:Preparing preprocessing pipeline...
2023-11-24 16:36:09,932:INFO:Set up label encoding.
2023-11-24 16:36:09,932:INFO:Set up simple imputation.
2023-11-24 16:36:09,934:INFO:Set up encoding of categorical features.
2023-11-24 16:36:10,288:INFO:Finished creating preprocessing pipeline.
2023-11-24 16:36:10,291:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/46/tcczvndd7xj_pqs5r176bl600000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Number_of_vehicles_involved',
                                             'Number_of_casualties'],
                                    transformer=SimpleImputer(add_i...
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['Time'],
                                    transformer=TargetEncoder(cols=['Time'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2023-11-24 16:36:10,291:INFO:Creating final display dataframe.
2023-11-24 16:36:10,740:INFO:Setup _display_container:                     Description                                              Value
0                    Session id                                                467
1                        Target                                  Accident_severity
2                   Target type                                         Multiclass
3                Target mapping  Fatal injury: 0, Serious Injury: 1, Slight Inj...
4           Original data shape                                        (12316, 32)
5        Transformed data shape                                       (12316, 208)
6   Transformed train set shape                                        (8621, 208)
7    Transformed test set shape                                        (3695, 208)
8              Numeric features                                                  2
9          Categorical features                                                 29
10     Rows with missing values                                              76.5%
11                   Preprocess                                               True
12              Imputation type                                             simple
13           Numeric imputation                                               mean
14       Categorical imputation                                               mode
15     Maximum one-hot encoding                                                 25
16              Encoding method                                               None
17               Fold Generator                                    StratifiedKFold
18                  Fold Number                                                 10
19                     CPU Jobs                                                 -1
20                      Use GPU                                              False
21               Log Experiment                                              False
22              Experiment Name                                   clf-default-name
23                          USI                                               1c20
2023-11-24 16:36:10,770:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:36:10,771:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:36:10,798:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:36:10,799:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:36:10,800:INFO:setup() successfully completed in 1.07s...............
2023-11-24 16:36:50,054:INFO:PyCaret ClassificationExperiment
2023-11-24 16:36:50,054:INFO:Logging name: clf-default-name
2023-11-24 16:36:50,054:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-11-24 16:36:50,054:INFO:version 3.2.0
2023-11-24 16:36:50,054:INFO:Initializing setup()
2023-11-24 16:36:50,054:INFO:self.USI: 74d6
2023-11-24 16:36:50,054:INFO:self._variable_keys: {'_available_plots', 'fix_imbalance', 'fold_shuffle_param', 'exp_id', 'y_test', 'y_train', 'n_jobs_param', 'memory', 'log_plots_param', 'html_param', 'gpu_param', '_ml_usecase', 'idx', 'pipeline', 'is_multiclass', 'seed', 'X_test', 'logging_param', 'data', 'fold_generator', 'exp_name_log', 'USI', 'X', 'fold_groups_param', 'X_train', 'y', 'gpu_n_jobs_param', 'target_param'}
2023-11-24 16:36:50,054:INFO:Checking environment
2023-11-24 16:36:50,054:INFO:python_version: 3.11.5
2023-11-24 16:36:50,054:INFO:python_build: ('main', 'Sep 11 2023 08:31:25')
2023-11-24 16:36:50,054:INFO:machine: arm64
2023-11-24 16:36:50,054:INFO:platform: macOS-14.0-arm64-arm-64bit
2023-11-24 16:36:50,054:INFO:Memory: svmem(total=17179869184, available=5297045504, percent=69.2, used=6654263296, free=664109056, active=4632084480, inactive=4581605376, wired=2022178816)
2023-11-24 16:36:50,054:INFO:Physical Core: 10
2023-11-24 16:36:50,054:INFO:Logical Core: 10
2023-11-24 16:36:50,054:INFO:Checking libraries
2023-11-24 16:36:50,054:INFO:System:
2023-11-24 16:36:50,054:INFO:    python: 3.11.5 (main, Sep 11 2023, 08:31:25) [Clang 14.0.6 ]
2023-11-24 16:36:50,054:INFO:executable: /Users/saiakhil/anaconda3/envs/mlauto/bin/python
2023-11-24 16:36:50,054:INFO:   machine: macOS-14.0-arm64-arm-64bit
2023-11-24 16:36:50,054:INFO:PyCaret required dependencies:
2023-11-24 16:36:50,054:INFO:                 pip: 23.3.1
2023-11-24 16:36:50,054:INFO:          setuptools: 68.0.0
2023-11-24 16:36:50,054:INFO:             pycaret: 3.2.0
2023-11-24 16:36:50,054:INFO:             IPython: 8.15.0
2023-11-24 16:36:50,054:INFO:          ipywidgets: 8.1.1
2023-11-24 16:36:50,054:INFO:                tqdm: 4.66.1
2023-11-24 16:36:50,054:INFO:               numpy: 1.25.2
2023-11-24 16:36:50,054:INFO:              pandas: 1.5.3
2023-11-24 16:36:50,054:INFO:              jinja2: 3.1.2
2023-11-24 16:36:50,054:INFO:               scipy: 1.11.3
2023-11-24 16:36:50,054:INFO:              joblib: 1.3.2
2023-11-24 16:36:50,054:INFO:             sklearn: 1.2.2
2023-11-24 16:36:50,054:INFO:                pyod: 1.1.2
2023-11-24 16:36:50,054:INFO:            imblearn: 0.11.0
2023-11-24 16:36:50,054:INFO:   category_encoders: 2.6.3
2023-11-24 16:36:50,054:INFO:            lightgbm: 4.1.0
2023-11-24 16:36:50,054:INFO:               numba: 0.58.1
2023-11-24 16:36:50,054:INFO:            requests: 2.31.0
2023-11-24 16:36:50,054:INFO:          matplotlib: 3.6.0
2023-11-24 16:36:50,054:INFO:          scikitplot: 0.3.7
2023-11-24 16:36:50,054:INFO:         yellowbrick: 1.5
2023-11-24 16:36:50,054:INFO:              plotly: 5.18.0
2023-11-24 16:36:50,054:INFO:    plotly-resampler: Not installed
2023-11-24 16:36:50,054:INFO:             kaleido: 0.2.1
2023-11-24 16:36:50,054:INFO:           schemdraw: 0.15
2023-11-24 16:36:50,054:INFO:         statsmodels: 0.14.0
2023-11-24 16:36:50,054:INFO:              sktime: 0.21.1
2023-11-24 16:36:50,054:INFO:               tbats: 1.1.3
2023-11-24 16:36:50,054:INFO:            pmdarima: 2.0.4
2023-11-24 16:36:50,054:INFO:              psutil: 5.9.6
2023-11-24 16:36:50,055:INFO:          markupsafe: 2.1.3
2023-11-24 16:36:50,055:INFO:             pickle5: Not installed
2023-11-24 16:36:50,055:INFO:         cloudpickle: 3.0.0
2023-11-24 16:36:50,055:INFO:         deprecation: 2.1.0
2023-11-24 16:36:50,055:INFO:              xxhash: 3.4.1
2023-11-24 16:36:50,055:INFO:           wurlitzer: 3.0.3
2023-11-24 16:36:50,055:INFO:PyCaret optional dependencies:
2023-11-24 16:36:50,055:INFO:                shap: Not installed
2023-11-24 16:36:50,055:INFO:           interpret: Not installed
2023-11-24 16:36:50,055:INFO:                umap: Not installed
2023-11-24 16:36:50,055:INFO:     ydata_profiling: 4.6.2
2023-11-24 16:36:50,055:INFO:  explainerdashboard: Not installed
2023-11-24 16:36:50,055:INFO:             autoviz: Not installed
2023-11-24 16:36:50,055:INFO:           fairlearn: Not installed
2023-11-24 16:36:50,055:INFO:          deepchecks: Not installed
2023-11-24 16:36:50,055:INFO:             xgboost: 1.7.3
2023-11-24 16:36:50,055:INFO:            catboost: Not installed
2023-11-24 16:36:50,055:INFO:              kmodes: Not installed
2023-11-24 16:36:50,055:INFO:             mlxtend: Not installed
2023-11-24 16:36:50,055:INFO:       statsforecast: Not installed
2023-11-24 16:36:50,055:INFO:        tune_sklearn: Not installed
2023-11-24 16:36:50,055:INFO:                 ray: Not installed
2023-11-24 16:36:50,055:INFO:            hyperopt: Not installed
2023-11-24 16:36:50,055:INFO:              optuna: Not installed
2023-11-24 16:36:50,055:INFO:               skopt: Not installed
2023-11-24 16:36:50,055:INFO:              mlflow: Not installed
2023-11-24 16:36:50,055:INFO:              gradio: Not installed
2023-11-24 16:36:50,055:INFO:             fastapi: Not installed
2023-11-24 16:36:50,055:INFO:             uvicorn: Not installed
2023-11-24 16:36:50,055:INFO:              m2cgen: Not installed
2023-11-24 16:36:50,055:INFO:           evidently: Not installed
2023-11-24 16:36:50,055:INFO:               fugue: Not installed
2023-11-24 16:36:50,055:INFO:           streamlit: 1.28.2
2023-11-24 16:36:50,055:INFO:             prophet: Not installed
2023-11-24 16:36:50,055:INFO:None
2023-11-24 16:36:50,055:INFO:Set up data.
2023-11-24 16:36:50,079:INFO:Set up folding strategy.
2023-11-24 16:36:50,079:INFO:Set up train/test split.
2023-11-24 16:36:50,087:INFO:Set up index.
2023-11-24 16:36:50,087:INFO:Assigning column types.
2023-11-24 16:36:50,088:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-24 16:36:50,105:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 16:36:50,106:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:36:50,116:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:36:50,117:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:36:50,134:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 16:36:50,135:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:36:50,146:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:36:50,147:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:36:50,147:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-11-24 16:36:50,163:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:36:50,174:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:36:50,175:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:36:50,193:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:36:50,203:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:36:50,204:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:36:50,204:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-11-24 16:36:50,233:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:36:50,234:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:36:50,262:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:36:50,263:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:36:50,263:INFO:Preparing preprocessing pipeline...
2023-11-24 16:36:50,264:INFO:Set up label encoding.
2023-11-24 16:36:50,264:INFO:Set up simple imputation.
2023-11-24 16:36:50,266:INFO:Set up encoding of categorical features.
2023-11-24 16:36:50,667:INFO:Finished creating preprocessing pipeline.
2023-11-24 16:36:50,670:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/46/tcczvndd7xj_pqs5r176bl600000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Number_of_vehicles_involved',
                                             'Number_of_casualties'],
                                    transformer=SimpleImputer(add_i...
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['Time'],
                                    transformer=TargetEncoder(cols=['Time'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2023-11-24 16:36:50,670:INFO:Creating final display dataframe.
2023-11-24 16:36:51,132:INFO:Setup _display_container:                     Description                                              Value
0                    Session id                                               7633
1                        Target                                  Accident_severity
2                   Target type                                         Multiclass
3                Target mapping  Fatal injury: 0, Serious Injury: 1, Slight Inj...
4           Original data shape                                        (12316, 32)
5        Transformed data shape                                       (12316, 208)
6   Transformed train set shape                                        (8621, 208)
7    Transformed test set shape                                        (3695, 208)
8              Numeric features                                                  2
9          Categorical features                                                 29
10     Rows with missing values                                              76.5%
11                   Preprocess                                               True
12              Imputation type                                             simple
13           Numeric imputation                                               mean
14       Categorical imputation                                               mode
15     Maximum one-hot encoding                                                 25
16              Encoding method                                               None
17               Fold Generator                                    StratifiedKFold
18                  Fold Number                                                 10
19                     CPU Jobs                                                 -1
20                      Use GPU                                              False
21               Log Experiment                                              False
22              Experiment Name                                   clf-default-name
23                          USI                                               74d6
2023-11-24 16:36:51,160:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:36:51,161:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:36:51,188:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:36:51,189:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:36:51,189:INFO:setup() successfully completed in 1.14s...............
2023-11-24 16:37:10,088:INFO:PyCaret ClassificationExperiment
2023-11-24 16:37:10,088:INFO:Logging name: clf-default-name
2023-11-24 16:37:10,088:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-11-24 16:37:10,088:INFO:version 3.2.0
2023-11-24 16:37:10,088:INFO:Initializing setup()
2023-11-24 16:37:10,088:INFO:self.USI: 6fef
2023-11-24 16:37:10,088:INFO:self._variable_keys: {'_available_plots', 'fix_imbalance', 'fold_shuffle_param', 'exp_id', 'y_test', 'y_train', 'n_jobs_param', 'memory', 'log_plots_param', 'html_param', 'gpu_param', '_ml_usecase', 'idx', 'pipeline', 'is_multiclass', 'seed', 'X_test', 'logging_param', 'data', 'fold_generator', 'exp_name_log', 'USI', 'X', 'fold_groups_param', 'X_train', 'y', 'gpu_n_jobs_param', 'target_param'}
2023-11-24 16:37:10,088:INFO:Checking environment
2023-11-24 16:37:10,088:INFO:python_version: 3.11.5
2023-11-24 16:37:10,088:INFO:python_build: ('main', 'Sep 11 2023 08:31:25')
2023-11-24 16:37:10,088:INFO:machine: arm64
2023-11-24 16:37:10,088:INFO:platform: macOS-14.0-arm64-arm-64bit
2023-11-24 16:37:10,088:INFO:Memory: svmem(total=17179869184, available=5229723648, percent=69.6, used=6723469312, free=588054528, active=4703125504, inactive=4591517696, wired=2020343808)
2023-11-24 16:37:10,088:INFO:Physical Core: 10
2023-11-24 16:37:10,088:INFO:Logical Core: 10
2023-11-24 16:37:10,088:INFO:Checking libraries
2023-11-24 16:37:10,088:INFO:System:
2023-11-24 16:37:10,088:INFO:    python: 3.11.5 (main, Sep 11 2023, 08:31:25) [Clang 14.0.6 ]
2023-11-24 16:37:10,088:INFO:executable: /Users/saiakhil/anaconda3/envs/mlauto/bin/python
2023-11-24 16:37:10,088:INFO:   machine: macOS-14.0-arm64-arm-64bit
2023-11-24 16:37:10,088:INFO:PyCaret required dependencies:
2023-11-24 16:37:10,088:INFO:                 pip: 23.3.1
2023-11-24 16:37:10,088:INFO:          setuptools: 68.0.0
2023-11-24 16:37:10,088:INFO:             pycaret: 3.2.0
2023-11-24 16:37:10,088:INFO:             IPython: 8.15.0
2023-11-24 16:37:10,088:INFO:          ipywidgets: 8.1.1
2023-11-24 16:37:10,088:INFO:                tqdm: 4.66.1
2023-11-24 16:37:10,088:INFO:               numpy: 1.25.2
2023-11-24 16:37:10,088:INFO:              pandas: 1.5.3
2023-11-24 16:37:10,088:INFO:              jinja2: 3.1.2
2023-11-24 16:37:10,089:INFO:               scipy: 1.11.3
2023-11-24 16:37:10,089:INFO:              joblib: 1.3.2
2023-11-24 16:37:10,089:INFO:             sklearn: 1.2.2
2023-11-24 16:37:10,089:INFO:                pyod: 1.1.2
2023-11-24 16:37:10,089:INFO:            imblearn: 0.11.0
2023-11-24 16:37:10,089:INFO:   category_encoders: 2.6.3
2023-11-24 16:37:10,089:INFO:            lightgbm: 4.1.0
2023-11-24 16:37:10,089:INFO:               numba: 0.58.1
2023-11-24 16:37:10,089:INFO:            requests: 2.31.0
2023-11-24 16:37:10,089:INFO:          matplotlib: 3.6.0
2023-11-24 16:37:10,089:INFO:          scikitplot: 0.3.7
2023-11-24 16:37:10,089:INFO:         yellowbrick: 1.5
2023-11-24 16:37:10,089:INFO:              plotly: 5.18.0
2023-11-24 16:37:10,089:INFO:    plotly-resampler: Not installed
2023-11-24 16:37:10,089:INFO:             kaleido: 0.2.1
2023-11-24 16:37:10,089:INFO:           schemdraw: 0.15
2023-11-24 16:37:10,089:INFO:         statsmodels: 0.14.0
2023-11-24 16:37:10,089:INFO:              sktime: 0.21.1
2023-11-24 16:37:10,089:INFO:               tbats: 1.1.3
2023-11-24 16:37:10,089:INFO:            pmdarima: 2.0.4
2023-11-24 16:37:10,089:INFO:              psutil: 5.9.6
2023-11-24 16:37:10,089:INFO:          markupsafe: 2.1.3
2023-11-24 16:37:10,089:INFO:             pickle5: Not installed
2023-11-24 16:37:10,089:INFO:         cloudpickle: 3.0.0
2023-11-24 16:37:10,089:INFO:         deprecation: 2.1.0
2023-11-24 16:37:10,089:INFO:              xxhash: 3.4.1
2023-11-24 16:37:10,089:INFO:           wurlitzer: 3.0.3
2023-11-24 16:37:10,089:INFO:PyCaret optional dependencies:
2023-11-24 16:37:10,089:INFO:                shap: Not installed
2023-11-24 16:37:10,089:INFO:           interpret: Not installed
2023-11-24 16:37:10,089:INFO:                umap: Not installed
2023-11-24 16:37:10,089:INFO:     ydata_profiling: 4.6.2
2023-11-24 16:37:10,089:INFO:  explainerdashboard: Not installed
2023-11-24 16:37:10,089:INFO:             autoviz: Not installed
2023-11-24 16:37:10,089:INFO:           fairlearn: Not installed
2023-11-24 16:37:10,089:INFO:          deepchecks: Not installed
2023-11-24 16:37:10,089:INFO:             xgboost: 1.7.3
2023-11-24 16:37:10,089:INFO:            catboost: Not installed
2023-11-24 16:37:10,089:INFO:              kmodes: Not installed
2023-11-24 16:37:10,089:INFO:             mlxtend: Not installed
2023-11-24 16:37:10,089:INFO:       statsforecast: Not installed
2023-11-24 16:37:10,089:INFO:        tune_sklearn: Not installed
2023-11-24 16:37:10,089:INFO:                 ray: Not installed
2023-11-24 16:37:10,089:INFO:            hyperopt: Not installed
2023-11-24 16:37:10,089:INFO:              optuna: Not installed
2023-11-24 16:37:10,089:INFO:               skopt: Not installed
2023-11-24 16:37:10,089:INFO:              mlflow: Not installed
2023-11-24 16:37:10,089:INFO:              gradio: Not installed
2023-11-24 16:37:10,089:INFO:             fastapi: Not installed
2023-11-24 16:37:10,089:INFO:             uvicorn: Not installed
2023-11-24 16:37:10,089:INFO:              m2cgen: Not installed
2023-11-24 16:37:10,089:INFO:           evidently: Not installed
2023-11-24 16:37:10,089:INFO:               fugue: Not installed
2023-11-24 16:37:10,089:INFO:           streamlit: 1.28.2
2023-11-24 16:37:10,089:INFO:             prophet: Not installed
2023-11-24 16:37:10,089:INFO:None
2023-11-24 16:37:10,089:INFO:Set up data.
2023-11-24 16:37:10,114:INFO:Set up folding strategy.
2023-11-24 16:37:10,114:INFO:Set up train/test split.
2023-11-24 16:37:10,121:INFO:Set up index.
2023-11-24 16:37:10,122:INFO:Assigning column types.
2023-11-24 16:37:10,123:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-24 16:37:10,139:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 16:37:10,139:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:37:10,150:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:37:10,151:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:37:10,169:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 16:37:10,169:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:37:10,180:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:37:10,181:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:37:10,181:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-11-24 16:37:10,198:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:37:10,208:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:37:10,209:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:37:10,226:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:37:10,236:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:37:10,237:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:37:10,237:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-11-24 16:37:10,264:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:37:10,265:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:37:10,293:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:37:10,294:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:37:10,294:INFO:Preparing preprocessing pipeline...
2023-11-24 16:37:10,294:INFO:Set up label encoding.
2023-11-24 16:37:10,294:INFO:Set up simple imputation.
2023-11-24 16:37:10,297:INFO:Set up encoding of categorical features.
2023-11-24 16:37:10,681:INFO:Finished creating preprocessing pipeline.
2023-11-24 16:37:10,683:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/46/tcczvndd7xj_pqs5r176bl600000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Number_of_vehicles_involved',
                                             'Number_of_casualties'],
                                    transformer=SimpleImputer(add_i...
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['Time'],
                                    transformer=TargetEncoder(cols=['Time'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2023-11-24 16:37:10,683:INFO:Creating final display dataframe.
2023-11-24 16:37:11,109:INFO:Setup _display_container:                     Description                                              Value
0                    Session id                                               8096
1                        Target                                  Accident_severity
2                   Target type                                         Multiclass
3                Target mapping  Fatal injury: 0, Serious Injury: 1, Slight Inj...
4           Original data shape                                        (12316, 32)
5        Transformed data shape                                       (12316, 208)
6   Transformed train set shape                                        (8621, 208)
7    Transformed test set shape                                        (3695, 208)
8              Numeric features                                                  2
9          Categorical features                                                 29
10     Rows with missing values                                              76.5%
11                   Preprocess                                               True
12              Imputation type                                             simple
13           Numeric imputation                                               mean
14       Categorical imputation                                               mode
15     Maximum one-hot encoding                                                 25
16              Encoding method                                               None
17               Fold Generator                                    StratifiedKFold
18                  Fold Number                                                 10
19                     CPU Jobs                                                 -1
20                      Use GPU                                              False
21               Log Experiment                                              False
22              Experiment Name                                   clf-default-name
23                          USI                                               6fef
2023-11-24 16:37:11,138:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:37:11,139:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:37:11,166:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:37:11,167:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:37:11,167:INFO:setup() successfully completed in 1.08s...............
2023-11-24 16:38:22,758:INFO:PyCaret ClassificationExperiment
2023-11-24 16:38:22,758:INFO:Logging name: clf-default-name
2023-11-24 16:38:22,758:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-11-24 16:38:22,758:INFO:version 3.2.0
2023-11-24 16:38:22,758:INFO:Initializing setup()
2023-11-24 16:38:22,758:INFO:self.USI: 8faa
2023-11-24 16:38:22,758:INFO:self._variable_keys: {'_available_plots', 'fix_imbalance', 'fold_shuffle_param', 'exp_id', 'y_test', 'y_train', 'n_jobs_param', 'memory', 'log_plots_param', 'html_param', 'gpu_param', '_ml_usecase', 'idx', 'pipeline', 'is_multiclass', 'seed', 'X_test', 'logging_param', 'data', 'fold_generator', 'exp_name_log', 'USI', 'X', 'fold_groups_param', 'X_train', 'y', 'gpu_n_jobs_param', 'target_param'}
2023-11-24 16:38:22,758:INFO:Checking environment
2023-11-24 16:38:22,758:INFO:python_version: 3.11.5
2023-11-24 16:38:22,758:INFO:python_build: ('main', 'Sep 11 2023 08:31:25')
2023-11-24 16:38:22,758:INFO:machine: arm64
2023-11-24 16:38:22,758:INFO:platform: macOS-14.0-arm64-arm-64bit
2023-11-24 16:38:22,758:INFO:Memory: svmem(total=17179869184, available=5190090752, percent=69.8, used=6878887936, free=334020608, active=4878401536, inactive=4768350208, wired=2000486400)
2023-11-24 16:38:22,758:INFO:Physical Core: 10
2023-11-24 16:38:22,758:INFO:Logical Core: 10
2023-11-24 16:38:22,758:INFO:Checking libraries
2023-11-24 16:38:22,758:INFO:System:
2023-11-24 16:38:22,758:INFO:    python: 3.11.5 (main, Sep 11 2023, 08:31:25) [Clang 14.0.6 ]
2023-11-24 16:38:22,758:INFO:executable: /Users/saiakhil/anaconda3/envs/mlauto/bin/python
2023-11-24 16:38:22,758:INFO:   machine: macOS-14.0-arm64-arm-64bit
2023-11-24 16:38:22,758:INFO:PyCaret required dependencies:
2023-11-24 16:38:22,758:INFO:                 pip: 23.3.1
2023-11-24 16:38:22,758:INFO:          setuptools: 68.0.0
2023-11-24 16:38:22,758:INFO:             pycaret: 3.2.0
2023-11-24 16:38:22,758:INFO:             IPython: 8.15.0
2023-11-24 16:38:22,758:INFO:          ipywidgets: 8.1.1
2023-11-24 16:38:22,758:INFO:                tqdm: 4.66.1
2023-11-24 16:38:22,758:INFO:               numpy: 1.25.2
2023-11-24 16:38:22,758:INFO:              pandas: 1.5.3
2023-11-24 16:38:22,758:INFO:              jinja2: 3.1.2
2023-11-24 16:38:22,758:INFO:               scipy: 1.11.3
2023-11-24 16:38:22,758:INFO:              joblib: 1.3.2
2023-11-24 16:38:22,758:INFO:             sklearn: 1.2.2
2023-11-24 16:38:22,758:INFO:                pyod: 1.1.2
2023-11-24 16:38:22,758:INFO:            imblearn: 0.11.0
2023-11-24 16:38:22,758:INFO:   category_encoders: 2.6.3
2023-11-24 16:38:22,758:INFO:            lightgbm: 4.1.0
2023-11-24 16:38:22,758:INFO:               numba: 0.58.1
2023-11-24 16:38:22,758:INFO:            requests: 2.31.0
2023-11-24 16:38:22,758:INFO:          matplotlib: 3.6.0
2023-11-24 16:38:22,758:INFO:          scikitplot: 0.3.7
2023-11-24 16:38:22,758:INFO:         yellowbrick: 1.5
2023-11-24 16:38:22,758:INFO:              plotly: 5.18.0
2023-11-24 16:38:22,758:INFO:    plotly-resampler: Not installed
2023-11-24 16:38:22,758:INFO:             kaleido: 0.2.1
2023-11-24 16:38:22,758:INFO:           schemdraw: 0.15
2023-11-24 16:38:22,758:INFO:         statsmodels: 0.14.0
2023-11-24 16:38:22,758:INFO:              sktime: 0.21.1
2023-11-24 16:38:22,758:INFO:               tbats: 1.1.3
2023-11-24 16:38:22,758:INFO:            pmdarima: 2.0.4
2023-11-24 16:38:22,758:INFO:              psutil: 5.9.6
2023-11-24 16:38:22,758:INFO:          markupsafe: 2.1.3
2023-11-24 16:38:22,758:INFO:             pickle5: Not installed
2023-11-24 16:38:22,758:INFO:         cloudpickle: 3.0.0
2023-11-24 16:38:22,758:INFO:         deprecation: 2.1.0
2023-11-24 16:38:22,758:INFO:              xxhash: 3.4.1
2023-11-24 16:38:22,758:INFO:           wurlitzer: 3.0.3
2023-11-24 16:38:22,758:INFO:PyCaret optional dependencies:
2023-11-24 16:38:22,758:INFO:                shap: Not installed
2023-11-24 16:38:22,758:INFO:           interpret: Not installed
2023-11-24 16:38:22,758:INFO:                umap: Not installed
2023-11-24 16:38:22,758:INFO:     ydata_profiling: 4.6.2
2023-11-24 16:38:22,759:INFO:  explainerdashboard: Not installed
2023-11-24 16:38:22,759:INFO:             autoviz: Not installed
2023-11-24 16:38:22,759:INFO:           fairlearn: Not installed
2023-11-24 16:38:22,759:INFO:          deepchecks: Not installed
2023-11-24 16:38:22,759:INFO:             xgboost: 1.7.3
2023-11-24 16:38:22,759:INFO:            catboost: Not installed
2023-11-24 16:38:22,759:INFO:              kmodes: Not installed
2023-11-24 16:38:22,759:INFO:             mlxtend: Not installed
2023-11-24 16:38:22,759:INFO:       statsforecast: Not installed
2023-11-24 16:38:22,759:INFO:        tune_sklearn: Not installed
2023-11-24 16:38:22,759:INFO:                 ray: Not installed
2023-11-24 16:38:22,759:INFO:            hyperopt: Not installed
2023-11-24 16:38:22,759:INFO:              optuna: Not installed
2023-11-24 16:38:22,759:INFO:               skopt: Not installed
2023-11-24 16:38:22,759:INFO:              mlflow: Not installed
2023-11-24 16:38:22,759:INFO:              gradio: Not installed
2023-11-24 16:38:22,759:INFO:             fastapi: Not installed
2023-11-24 16:38:22,759:INFO:             uvicorn: Not installed
2023-11-24 16:38:22,759:INFO:              m2cgen: Not installed
2023-11-24 16:38:22,759:INFO:           evidently: Not installed
2023-11-24 16:38:22,759:INFO:               fugue: Not installed
2023-11-24 16:38:22,759:INFO:           streamlit: 1.28.2
2023-11-24 16:38:22,759:INFO:             prophet: Not installed
2023-11-24 16:38:22,759:INFO:None
2023-11-24 16:38:22,759:INFO:Set up data.
2023-11-24 16:38:22,782:INFO:Set up folding strategy.
2023-11-24 16:38:22,783:INFO:Set up train/test split.
2023-11-24 16:38:22,791:INFO:Set up index.
2023-11-24 16:38:22,791:INFO:Assigning column types.
2023-11-24 16:38:22,792:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-24 16:38:22,810:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 16:38:22,811:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:38:22,822:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:38:22,823:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:38:22,841:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 16:38:22,842:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:38:22,853:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:38:22,854:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:38:22,854:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-11-24 16:38:22,872:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:38:22,882:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:38:22,883:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:38:22,901:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:38:22,911:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:38:22,912:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:38:22,912:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-11-24 16:38:22,940:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:38:22,941:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:38:22,969:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:38:22,970:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:38:22,970:INFO:Preparing preprocessing pipeline...
2023-11-24 16:38:22,971:INFO:Set up label encoding.
2023-11-24 16:38:22,971:INFO:Set up simple imputation.
2023-11-24 16:38:22,973:INFO:Set up encoding of categorical features.
2023-11-24 16:38:23,333:INFO:Finished creating preprocessing pipeline.
2023-11-24 16:38:23,336:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/46/tcczvndd7xj_pqs5r176bl600000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Number_of_vehicles_involved',
                                             'Number_of_casualties'],
                                    transformer=SimpleImputer(add_i...
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['Time'],
                                    transformer=TargetEncoder(cols=['Time'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2023-11-24 16:38:23,336:INFO:Creating final display dataframe.
2023-11-24 16:38:23,772:INFO:Setup _display_container:                     Description                                              Value
0                    Session id                                               6494
1                        Target                                  Accident_severity
2                   Target type                                         Multiclass
3                Target mapping  Fatal injury: 0, Serious Injury: 1, Slight Inj...
4           Original data shape                                        (12316, 32)
5        Transformed data shape                                       (12316, 208)
6   Transformed train set shape                                        (8621, 208)
7    Transformed test set shape                                        (3695, 208)
8              Numeric features                                                  2
9          Categorical features                                                 29
10     Rows with missing values                                              76.5%
11                   Preprocess                                               True
12              Imputation type                                             simple
13           Numeric imputation                                               mean
14       Categorical imputation                                               mode
15     Maximum one-hot encoding                                                 25
16              Encoding method                                               None
17               Fold Generator                                    StratifiedKFold
18                  Fold Number                                                 10
19                     CPU Jobs                                                 -1
20                      Use GPU                                              False
21               Log Experiment                                              False
22              Experiment Name                                   clf-default-name
23                          USI                                               8faa
2023-11-24 16:38:23,801:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:38:23,802:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:38:23,829:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:38:23,830:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:38:23,830:INFO:setup() successfully completed in 1.07s...............
2023-11-24 16:38:37,122:INFO:PyCaret ClassificationExperiment
2023-11-24 16:38:37,122:INFO:Logging name: clf-default-name
2023-11-24 16:38:37,122:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-11-24 16:38:37,122:INFO:version 3.2.0
2023-11-24 16:38:37,122:INFO:Initializing setup()
2023-11-24 16:38:37,122:INFO:self.USI: 07db
2023-11-24 16:38:37,122:INFO:self._variable_keys: {'_available_plots', 'fix_imbalance', 'fold_shuffle_param', 'exp_id', 'y_test', 'y_train', 'n_jobs_param', 'memory', 'log_plots_param', 'html_param', 'gpu_param', '_ml_usecase', 'idx', 'pipeline', 'is_multiclass', 'seed', 'X_test', 'logging_param', 'data', 'fold_generator', 'exp_name_log', 'USI', 'X', 'fold_groups_param', 'X_train', 'y', 'gpu_n_jobs_param', 'target_param'}
2023-11-24 16:38:37,122:INFO:Checking environment
2023-11-24 16:38:37,122:INFO:python_version: 3.11.5
2023-11-24 16:38:37,122:INFO:python_build: ('main', 'Sep 11 2023 08:31:25')
2023-11-24 16:38:37,122:INFO:machine: arm64
2023-11-24 16:38:37,122:INFO:platform: macOS-14.0-arm64-arm-64bit
2023-11-24 16:38:37,122:INFO:Memory: svmem(total=17179869184, available=5189206016, percent=69.8, used=6881132544, free=300630016, active=4880531456, inactive=4799561728, wired=2000601088)
2023-11-24 16:38:37,122:INFO:Physical Core: 10
2023-11-24 16:38:37,122:INFO:Logical Core: 10
2023-11-24 16:38:37,122:INFO:Checking libraries
2023-11-24 16:38:37,122:INFO:System:
2023-11-24 16:38:37,122:INFO:    python: 3.11.5 (main, Sep 11 2023, 08:31:25) [Clang 14.0.6 ]
2023-11-24 16:38:37,122:INFO:executable: /Users/saiakhil/anaconda3/envs/mlauto/bin/python
2023-11-24 16:38:37,122:INFO:   machine: macOS-14.0-arm64-arm-64bit
2023-11-24 16:38:37,122:INFO:PyCaret required dependencies:
2023-11-24 16:38:37,122:INFO:                 pip: 23.3.1
2023-11-24 16:38:37,122:INFO:          setuptools: 68.0.0
2023-11-24 16:38:37,122:INFO:             pycaret: 3.2.0
2023-11-24 16:38:37,122:INFO:             IPython: 8.15.0
2023-11-24 16:38:37,122:INFO:          ipywidgets: 8.1.1
2023-11-24 16:38:37,122:INFO:                tqdm: 4.66.1
2023-11-24 16:38:37,122:INFO:               numpy: 1.25.2
2023-11-24 16:38:37,122:INFO:              pandas: 1.5.3
2023-11-24 16:38:37,122:INFO:              jinja2: 3.1.2
2023-11-24 16:38:37,122:INFO:               scipy: 1.11.3
2023-11-24 16:38:37,122:INFO:              joblib: 1.3.2
2023-11-24 16:38:37,122:INFO:             sklearn: 1.2.2
2023-11-24 16:38:37,122:INFO:                pyod: 1.1.2
2023-11-24 16:38:37,122:INFO:            imblearn: 0.11.0
2023-11-24 16:38:37,122:INFO:   category_encoders: 2.6.3
2023-11-24 16:38:37,122:INFO:            lightgbm: 4.1.0
2023-11-24 16:38:37,122:INFO:               numba: 0.58.1
2023-11-24 16:38:37,122:INFO:            requests: 2.31.0
2023-11-24 16:38:37,122:INFO:          matplotlib: 3.6.0
2023-11-24 16:38:37,122:INFO:          scikitplot: 0.3.7
2023-11-24 16:38:37,122:INFO:         yellowbrick: 1.5
2023-11-24 16:38:37,122:INFO:              plotly: 5.18.0
2023-11-24 16:38:37,122:INFO:    plotly-resampler: Not installed
2023-11-24 16:38:37,122:INFO:             kaleido: 0.2.1
2023-11-24 16:38:37,122:INFO:           schemdraw: 0.15
2023-11-24 16:38:37,122:INFO:         statsmodels: 0.14.0
2023-11-24 16:38:37,122:INFO:              sktime: 0.21.1
2023-11-24 16:38:37,122:INFO:               tbats: 1.1.3
2023-11-24 16:38:37,122:INFO:            pmdarima: 2.0.4
2023-11-24 16:38:37,122:INFO:              psutil: 5.9.6
2023-11-24 16:38:37,122:INFO:          markupsafe: 2.1.3
2023-11-24 16:38:37,122:INFO:             pickle5: Not installed
2023-11-24 16:38:37,122:INFO:         cloudpickle: 3.0.0
2023-11-24 16:38:37,122:INFO:         deprecation: 2.1.0
2023-11-24 16:38:37,122:INFO:              xxhash: 3.4.1
2023-11-24 16:38:37,122:INFO:           wurlitzer: 3.0.3
2023-11-24 16:38:37,122:INFO:PyCaret optional dependencies:
2023-11-24 16:38:37,122:INFO:                shap: Not installed
2023-11-24 16:38:37,122:INFO:           interpret: Not installed
2023-11-24 16:38:37,122:INFO:                umap: Not installed
2023-11-24 16:38:37,122:INFO:     ydata_profiling: 4.6.2
2023-11-24 16:38:37,122:INFO:  explainerdashboard: Not installed
2023-11-24 16:38:37,122:INFO:             autoviz: Not installed
2023-11-24 16:38:37,122:INFO:           fairlearn: Not installed
2023-11-24 16:38:37,122:INFO:          deepchecks: Not installed
2023-11-24 16:38:37,122:INFO:             xgboost: 1.7.3
2023-11-24 16:38:37,122:INFO:            catboost: Not installed
2023-11-24 16:38:37,122:INFO:              kmodes: Not installed
2023-11-24 16:38:37,122:INFO:             mlxtend: Not installed
2023-11-24 16:38:37,122:INFO:       statsforecast: Not installed
2023-11-24 16:38:37,122:INFO:        tune_sklearn: Not installed
2023-11-24 16:38:37,122:INFO:                 ray: Not installed
2023-11-24 16:38:37,122:INFO:            hyperopt: Not installed
2023-11-24 16:38:37,122:INFO:              optuna: Not installed
2023-11-24 16:38:37,122:INFO:               skopt: Not installed
2023-11-24 16:38:37,122:INFO:              mlflow: Not installed
2023-11-24 16:38:37,123:INFO:              gradio: Not installed
2023-11-24 16:38:37,123:INFO:             fastapi: Not installed
2023-11-24 16:38:37,123:INFO:             uvicorn: Not installed
2023-11-24 16:38:37,123:INFO:              m2cgen: Not installed
2023-11-24 16:38:37,123:INFO:           evidently: Not installed
2023-11-24 16:38:37,123:INFO:               fugue: Not installed
2023-11-24 16:38:37,123:INFO:           streamlit: 1.28.2
2023-11-24 16:38:37,123:INFO:             prophet: Not installed
2023-11-24 16:38:37,123:INFO:None
2023-11-24 16:38:37,123:INFO:Set up data.
2023-11-24 16:38:37,147:INFO:Set up folding strategy.
2023-11-24 16:38:37,147:INFO:Set up train/test split.
2023-11-24 16:38:37,155:INFO:Set up index.
2023-11-24 16:38:37,155:INFO:Assigning column types.
2023-11-24 16:38:37,156:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-24 16:38:37,173:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 16:38:37,173:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:38:37,185:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:38:37,186:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:38:37,203:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 16:38:37,203:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:38:37,214:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:38:37,215:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:38:37,215:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-11-24 16:38:37,233:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:38:37,243:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:38:37,244:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:38:37,261:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:38:37,272:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:38:37,273:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:38:37,273:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-11-24 16:38:37,300:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:38:37,301:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:38:37,329:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:38:37,330:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:38:37,330:INFO:Preparing preprocessing pipeline...
2023-11-24 16:38:37,331:INFO:Set up label encoding.
2023-11-24 16:38:37,331:INFO:Set up simple imputation.
2023-11-24 16:38:37,333:INFO:Set up encoding of categorical features.
2023-11-24 16:38:37,736:INFO:Finished creating preprocessing pipeline.
2023-11-24 16:38:37,739:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/46/tcczvndd7xj_pqs5r176bl600000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Number_of_vehicles_involved',
                                             'Number_of_casualties'],
                                    transformer=SimpleImputer(add_i...
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['Time'],
                                    transformer=TargetEncoder(cols=['Time'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2023-11-24 16:38:37,739:INFO:Creating final display dataframe.
2023-11-24 16:38:38,193:INFO:Setup _display_container:                     Description                                              Value
0                    Session id                                               2397
1                        Target                                  Accident_severity
2                   Target type                                         Multiclass
3                Target mapping  Fatal injury: 0, Serious Injury: 1, Slight Inj...
4           Original data shape                                        (12316, 32)
5        Transformed data shape                                       (12316, 208)
6   Transformed train set shape                                        (8621, 208)
7    Transformed test set shape                                        (3695, 208)
8              Numeric features                                                  2
9          Categorical features                                                 29
10     Rows with missing values                                              76.5%
11                   Preprocess                                               True
12              Imputation type                                             simple
13           Numeric imputation                                               mean
14       Categorical imputation                                               mode
15     Maximum one-hot encoding                                                 25
16              Encoding method                                               None
17               Fold Generator                                    StratifiedKFold
18                  Fold Number                                                 10
19                     CPU Jobs                                                 -1
20                      Use GPU                                              False
21               Log Experiment                                              False
22              Experiment Name                                   clf-default-name
23                          USI                                               07db
2023-11-24 16:38:38,223:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:38:38,224:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:38:38,253:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:38:38,254:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:38:38,254:INFO:setup() successfully completed in 1.13s...............
2023-11-24 16:39:17,011:INFO:PyCaret ClassificationExperiment
2023-11-24 16:39:17,011:INFO:Logging name: clf-default-name
2023-11-24 16:39:17,011:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-11-24 16:39:17,011:INFO:version 3.2.0
2023-11-24 16:39:17,011:INFO:Initializing setup()
2023-11-24 16:39:17,011:INFO:self.USI: c942
2023-11-24 16:39:17,011:INFO:self._variable_keys: {'_available_plots', 'fix_imbalance', 'fold_shuffle_param', 'exp_id', 'y_test', 'y_train', 'n_jobs_param', 'memory', 'log_plots_param', 'html_param', 'gpu_param', '_ml_usecase', 'idx', 'pipeline', 'is_multiclass', 'seed', 'X_test', 'logging_param', 'data', 'fold_generator', 'exp_name_log', 'USI', 'X', 'fold_groups_param', 'X_train', 'y', 'gpu_n_jobs_param', 'target_param'}
2023-11-24 16:39:17,011:INFO:Checking environment
2023-11-24 16:39:17,011:INFO:python_version: 3.11.5
2023-11-24 16:39:17,011:INFO:python_build: ('main', 'Sep 11 2023 08:31:25')
2023-11-24 16:39:17,011:INFO:machine: arm64
2023-11-24 16:39:17,012:INFO:platform: macOS-14.0-arm64-arm-64bit
2023-11-24 16:39:17,012:INFO:Memory: svmem(total=17179869184, available=5174542336, percent=69.9, used=6901219328, free=258490368, active=4922900480, inactive=4809228288, wired=1978318848)
2023-11-24 16:39:17,012:INFO:Physical Core: 10
2023-11-24 16:39:17,012:INFO:Logical Core: 10
2023-11-24 16:39:17,012:INFO:Checking libraries
2023-11-24 16:39:17,012:INFO:System:
2023-11-24 16:39:17,012:INFO:    python: 3.11.5 (main, Sep 11 2023, 08:31:25) [Clang 14.0.6 ]
2023-11-24 16:39:17,012:INFO:executable: /Users/saiakhil/anaconda3/envs/mlauto/bin/python
2023-11-24 16:39:17,012:INFO:   machine: macOS-14.0-arm64-arm-64bit
2023-11-24 16:39:17,012:INFO:PyCaret required dependencies:
2023-11-24 16:39:17,012:INFO:                 pip: 23.3.1
2023-11-24 16:39:17,012:INFO:          setuptools: 68.0.0
2023-11-24 16:39:17,012:INFO:             pycaret: 3.2.0
2023-11-24 16:39:17,012:INFO:             IPython: 8.15.0
2023-11-24 16:39:17,012:INFO:          ipywidgets: 8.1.1
2023-11-24 16:39:17,012:INFO:                tqdm: 4.66.1
2023-11-24 16:39:17,012:INFO:               numpy: 1.25.2
2023-11-24 16:39:17,012:INFO:              pandas: 1.5.3
2023-11-24 16:39:17,012:INFO:              jinja2: 3.1.2
2023-11-24 16:39:17,012:INFO:               scipy: 1.11.3
2023-11-24 16:39:17,012:INFO:              joblib: 1.3.2
2023-11-24 16:39:17,012:INFO:             sklearn: 1.2.2
2023-11-24 16:39:17,012:INFO:                pyod: 1.1.2
2023-11-24 16:39:17,012:INFO:            imblearn: 0.11.0
2023-11-24 16:39:17,012:INFO:   category_encoders: 2.6.3
2023-11-24 16:39:17,012:INFO:            lightgbm: 4.1.0
2023-11-24 16:39:17,012:INFO:               numba: 0.58.1
2023-11-24 16:39:17,012:INFO:            requests: 2.31.0
2023-11-24 16:39:17,012:INFO:          matplotlib: 3.6.0
2023-11-24 16:39:17,012:INFO:          scikitplot: 0.3.7
2023-11-24 16:39:17,012:INFO:         yellowbrick: 1.5
2023-11-24 16:39:17,012:INFO:              plotly: 5.18.0
2023-11-24 16:39:17,012:INFO:    plotly-resampler: Not installed
2023-11-24 16:39:17,012:INFO:             kaleido: 0.2.1
2023-11-24 16:39:17,012:INFO:           schemdraw: 0.15
2023-11-24 16:39:17,012:INFO:         statsmodels: 0.14.0
2023-11-24 16:39:17,012:INFO:              sktime: 0.21.1
2023-11-24 16:39:17,012:INFO:               tbats: 1.1.3
2023-11-24 16:39:17,012:INFO:            pmdarima: 2.0.4
2023-11-24 16:39:17,012:INFO:              psutil: 5.9.6
2023-11-24 16:39:17,012:INFO:          markupsafe: 2.1.3
2023-11-24 16:39:17,012:INFO:             pickle5: Not installed
2023-11-24 16:39:17,012:INFO:         cloudpickle: 3.0.0
2023-11-24 16:39:17,012:INFO:         deprecation: 2.1.0
2023-11-24 16:39:17,012:INFO:              xxhash: 3.4.1
2023-11-24 16:39:17,012:INFO:           wurlitzer: 3.0.3
2023-11-24 16:39:17,012:INFO:PyCaret optional dependencies:
2023-11-24 16:39:17,012:INFO:                shap: Not installed
2023-11-24 16:39:17,012:INFO:           interpret: Not installed
2023-11-24 16:39:17,012:INFO:                umap: Not installed
2023-11-24 16:39:17,012:INFO:     ydata_profiling: 4.6.2
2023-11-24 16:39:17,012:INFO:  explainerdashboard: Not installed
2023-11-24 16:39:17,012:INFO:             autoviz: Not installed
2023-11-24 16:39:17,012:INFO:           fairlearn: Not installed
2023-11-24 16:39:17,012:INFO:          deepchecks: Not installed
2023-11-24 16:39:17,012:INFO:             xgboost: 1.7.3
2023-11-24 16:39:17,012:INFO:            catboost: Not installed
2023-11-24 16:39:17,012:INFO:              kmodes: Not installed
2023-11-24 16:39:17,012:INFO:             mlxtend: Not installed
2023-11-24 16:39:17,012:INFO:       statsforecast: Not installed
2023-11-24 16:39:17,012:INFO:        tune_sklearn: Not installed
2023-11-24 16:39:17,012:INFO:                 ray: Not installed
2023-11-24 16:39:17,012:INFO:            hyperopt: Not installed
2023-11-24 16:39:17,012:INFO:              optuna: Not installed
2023-11-24 16:39:17,012:INFO:               skopt: Not installed
2023-11-24 16:39:17,012:INFO:              mlflow: Not installed
2023-11-24 16:39:17,012:INFO:              gradio: Not installed
2023-11-24 16:39:17,012:INFO:             fastapi: Not installed
2023-11-24 16:39:17,012:INFO:             uvicorn: Not installed
2023-11-24 16:39:17,012:INFO:              m2cgen: Not installed
2023-11-24 16:39:17,012:INFO:           evidently: Not installed
2023-11-24 16:39:17,012:INFO:               fugue: Not installed
2023-11-24 16:39:17,012:INFO:           streamlit: 1.28.2
2023-11-24 16:39:17,012:INFO:             prophet: Not installed
2023-11-24 16:39:17,012:INFO:None
2023-11-24 16:39:17,012:INFO:Set up data.
2023-11-24 16:39:17,036:INFO:Set up folding strategy.
2023-11-24 16:39:17,036:INFO:Set up train/test split.
2023-11-24 16:39:17,044:INFO:Set up index.
2023-11-24 16:39:17,044:INFO:Assigning column types.
2023-11-24 16:39:17,045:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-24 16:39:17,061:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 16:39:17,062:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:39:17,072:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:39:17,073:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:39:17,090:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 16:39:17,090:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:39:17,100:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:39:17,101:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:39:17,101:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-11-24 16:39:17,118:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:39:17,128:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:39:17,129:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:39:17,145:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:39:17,156:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:39:17,157:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:39:17,157:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-11-24 16:39:17,184:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:39:17,185:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:39:17,212:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:39:17,213:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:39:17,213:INFO:Preparing preprocessing pipeline...
2023-11-24 16:39:17,214:INFO:Set up label encoding.
2023-11-24 16:39:17,214:INFO:Set up simple imputation.
2023-11-24 16:39:17,216:INFO:Set up encoding of categorical features.
2023-11-24 16:39:17,632:INFO:Finished creating preprocessing pipeline.
2023-11-24 16:39:17,634:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/46/tcczvndd7xj_pqs5r176bl600000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Number_of_vehicles_involved',
                                             'Number_of_casualties'],
                                    transformer=SimpleImputer(add_i...
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['Time'],
                                    transformer=TargetEncoder(cols=['Time'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2023-11-24 16:39:17,634:INFO:Creating final display dataframe.
2023-11-24 16:39:18,078:INFO:Setup _display_container:                     Description                                              Value
0                    Session id                                               6530
1                        Target                                  Accident_severity
2                   Target type                                         Multiclass
3                Target mapping  Fatal injury: 0, Serious Injury: 1, Slight Inj...
4           Original data shape                                        (12316, 32)
5        Transformed data shape                                       (12316, 208)
6   Transformed train set shape                                        (8621, 208)
7    Transformed test set shape                                        (3695, 208)
8              Numeric features                                                  2
9          Categorical features                                                 29
10     Rows with missing values                                              76.5%
11                   Preprocess                                               True
12              Imputation type                                             simple
13           Numeric imputation                                               mean
14       Categorical imputation                                               mode
15     Maximum one-hot encoding                                                 25
16              Encoding method                                               None
17               Fold Generator                                    StratifiedKFold
18                  Fold Number                                                 10
19                     CPU Jobs                                                 -1
20                      Use GPU                                              False
21               Log Experiment                                              False
22              Experiment Name                                   clf-default-name
23                          USI                                               c942
2023-11-24 16:39:18,108:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:39:18,109:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:39:18,135:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:39:18,136:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:39:18,137:INFO:setup() successfully completed in 1.13s...............
2023-11-24 16:39:52,972:INFO:PyCaret RegressionExperiment
2023-11-24 16:39:52,972:INFO:Logging name: reg-default-name
2023-11-24 16:39:52,972:INFO:ML Usecase: MLUsecase.REGRESSION
2023-11-24 16:39:52,972:INFO:version 3.2.0
2023-11-24 16:39:52,972:INFO:Initializing setup()
2023-11-24 16:39:52,972:INFO:self.USI: d168
2023-11-24 16:39:52,972:INFO:self._variable_keys: {'_available_plots', 'fold_shuffle_param', 'exp_id', 'y_test', 'y_train', 'n_jobs_param', 'memory', 'log_plots_param', 'html_param', 'gpu_param', '_ml_usecase', 'idx', 'pipeline', 'seed', 'X_test', 'transform_target_param', 'logging_param', 'data', 'fold_generator', 'exp_name_log', 'USI', 'X', 'fold_groups_param', 'X_train', 'y', 'gpu_n_jobs_param', 'target_param'}
2023-11-24 16:39:52,973:INFO:Checking environment
2023-11-24 16:39:52,973:INFO:python_version: 3.11.5
2023-11-24 16:39:52,973:INFO:python_build: ('main', 'Sep 11 2023 08:31:25')
2023-11-24 16:39:52,973:INFO:machine: arm64
2023-11-24 16:39:52,973:INFO:platform: macOS-14.0-arm64-arm-64bit
2023-11-24 16:39:52,973:INFO:Memory: svmem(total=17179869184, available=5168365568, percent=69.9, used=6912278528, free=250658816, active=4920721408, inactive=4809490432, wired=1991557120)
2023-11-24 16:39:52,973:INFO:Physical Core: 10
2023-11-24 16:39:52,973:INFO:Logical Core: 10
2023-11-24 16:39:52,973:INFO:Checking libraries
2023-11-24 16:39:52,973:INFO:System:
2023-11-24 16:39:52,973:INFO:    python: 3.11.5 (main, Sep 11 2023, 08:31:25) [Clang 14.0.6 ]
2023-11-24 16:39:52,973:INFO:executable: /Users/saiakhil/anaconda3/envs/mlauto/bin/python
2023-11-24 16:39:52,973:INFO:   machine: macOS-14.0-arm64-arm-64bit
2023-11-24 16:39:52,973:INFO:PyCaret required dependencies:
2023-11-24 16:39:52,973:INFO:                 pip: 23.3.1
2023-11-24 16:39:52,973:INFO:          setuptools: 68.0.0
2023-11-24 16:39:52,973:INFO:             pycaret: 3.2.0
2023-11-24 16:39:52,973:INFO:             IPython: 8.15.0
2023-11-24 16:39:52,973:INFO:          ipywidgets: 8.1.1
2023-11-24 16:39:52,973:INFO:                tqdm: 4.66.1
2023-11-24 16:39:52,973:INFO:               numpy: 1.25.2
2023-11-24 16:39:52,973:INFO:              pandas: 1.5.3
2023-11-24 16:39:52,973:INFO:              jinja2: 3.1.2
2023-11-24 16:39:52,973:INFO:               scipy: 1.11.3
2023-11-24 16:39:52,973:INFO:              joblib: 1.3.2
2023-11-24 16:39:52,973:INFO:             sklearn: 1.2.2
2023-11-24 16:39:52,973:INFO:                pyod: 1.1.2
2023-11-24 16:39:52,973:INFO:            imblearn: 0.11.0
2023-11-24 16:39:52,973:INFO:   category_encoders: 2.6.3
2023-11-24 16:39:52,973:INFO:            lightgbm: 4.1.0
2023-11-24 16:39:52,973:INFO:               numba: 0.58.1
2023-11-24 16:39:52,973:INFO:            requests: 2.31.0
2023-11-24 16:39:52,973:INFO:          matplotlib: 3.6.0
2023-11-24 16:39:52,973:INFO:          scikitplot: 0.3.7
2023-11-24 16:39:52,973:INFO:         yellowbrick: 1.5
2023-11-24 16:39:52,973:INFO:              plotly: 5.18.0
2023-11-24 16:39:52,973:INFO:    plotly-resampler: Not installed
2023-11-24 16:39:52,973:INFO:             kaleido: 0.2.1
2023-11-24 16:39:52,973:INFO:           schemdraw: 0.15
2023-11-24 16:39:52,973:INFO:         statsmodels: 0.14.0
2023-11-24 16:39:52,973:INFO:              sktime: 0.21.1
2023-11-24 16:39:52,973:INFO:               tbats: 1.1.3
2023-11-24 16:39:52,973:INFO:            pmdarima: 2.0.4
2023-11-24 16:39:52,973:INFO:              psutil: 5.9.6
2023-11-24 16:39:52,973:INFO:          markupsafe: 2.1.3
2023-11-24 16:39:52,973:INFO:             pickle5: Not installed
2023-11-24 16:39:52,973:INFO:         cloudpickle: 3.0.0
2023-11-24 16:39:52,973:INFO:         deprecation: 2.1.0
2023-11-24 16:39:52,973:INFO:              xxhash: 3.4.1
2023-11-24 16:39:52,973:INFO:           wurlitzer: 3.0.3
2023-11-24 16:39:52,973:INFO:PyCaret optional dependencies:
2023-11-24 16:39:52,973:INFO:                shap: Not installed
2023-11-24 16:39:52,973:INFO:           interpret: Not installed
2023-11-24 16:39:52,973:INFO:                umap: Not installed
2023-11-24 16:39:52,973:INFO:     ydata_profiling: 4.6.2
2023-11-24 16:39:52,973:INFO:  explainerdashboard: Not installed
2023-11-24 16:39:52,973:INFO:             autoviz: Not installed
2023-11-24 16:39:52,973:INFO:           fairlearn: Not installed
2023-11-24 16:39:52,973:INFO:          deepchecks: Not installed
2023-11-24 16:39:52,973:INFO:             xgboost: 1.7.3
2023-11-24 16:39:52,973:INFO:            catboost: Not installed
2023-11-24 16:39:52,973:INFO:              kmodes: Not installed
2023-11-24 16:39:52,973:INFO:             mlxtend: Not installed
2023-11-24 16:39:52,973:INFO:       statsforecast: Not installed
2023-11-24 16:39:52,973:INFO:        tune_sklearn: Not installed
2023-11-24 16:39:52,973:INFO:                 ray: Not installed
2023-11-24 16:39:52,973:INFO:            hyperopt: Not installed
2023-11-24 16:39:52,973:INFO:              optuna: Not installed
2023-11-24 16:39:52,973:INFO:               skopt: Not installed
2023-11-24 16:39:52,973:INFO:              mlflow: Not installed
2023-11-24 16:39:52,973:INFO:              gradio: Not installed
2023-11-24 16:39:52,973:INFO:             fastapi: Not installed
2023-11-24 16:39:52,973:INFO:             uvicorn: Not installed
2023-11-24 16:39:52,973:INFO:              m2cgen: Not installed
2023-11-24 16:39:52,973:INFO:           evidently: Not installed
2023-11-24 16:39:52,973:INFO:               fugue: Not installed
2023-11-24 16:39:52,973:INFO:           streamlit: 1.28.2
2023-11-24 16:39:52,973:INFO:             prophet: Not installed
2023-11-24 16:39:52,973:INFO:None
2023-11-24 16:39:52,973:INFO:Set up data.
2023-11-24 16:39:59,559:INFO:PyCaret ClassificationExperiment
2023-11-24 16:39:59,559:INFO:Logging name: clf-default-name
2023-11-24 16:39:59,559:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-11-24 16:39:59,559:INFO:version 3.2.0
2023-11-24 16:39:59,559:INFO:Initializing setup()
2023-11-24 16:39:59,559:INFO:self.USI: 430c
2023-11-24 16:39:59,559:INFO:self._variable_keys: {'_available_plots', 'fix_imbalance', 'fold_shuffle_param', 'exp_id', 'y_test', 'y_train', 'n_jobs_param', 'memory', 'log_plots_param', 'html_param', 'gpu_param', '_ml_usecase', 'idx', 'pipeline', 'is_multiclass', 'seed', 'X_test', 'logging_param', 'data', 'fold_generator', 'exp_name_log', 'USI', 'X', 'fold_groups_param', 'X_train', 'y', 'gpu_n_jobs_param', 'target_param'}
2023-11-24 16:39:59,559:INFO:Checking environment
2023-11-24 16:39:59,559:INFO:python_version: 3.11.5
2023-11-24 16:39:59,559:INFO:python_build: ('main', 'Sep 11 2023 08:31:25')
2023-11-24 16:39:59,559:INFO:machine: arm64
2023-11-24 16:39:59,559:INFO:platform: macOS-14.0-arm64-arm-64bit
2023-11-24 16:39:59,559:INFO:Memory: svmem(total=17179869184, available=5167349760, percent=69.9, used=6914506752, free=232652800, active=4923965440, inactive=4826480640, wired=1990541312)
2023-11-24 16:39:59,559:INFO:Physical Core: 10
2023-11-24 16:39:59,559:INFO:Logical Core: 10
2023-11-24 16:39:59,559:INFO:Checking libraries
2023-11-24 16:39:59,559:INFO:System:
2023-11-24 16:39:59,559:INFO:    python: 3.11.5 (main, Sep 11 2023, 08:31:25) [Clang 14.0.6 ]
2023-11-24 16:39:59,559:INFO:executable: /Users/saiakhil/anaconda3/envs/mlauto/bin/python
2023-11-24 16:39:59,559:INFO:   machine: macOS-14.0-arm64-arm-64bit
2023-11-24 16:39:59,559:INFO:PyCaret required dependencies:
2023-11-24 16:39:59,559:INFO:                 pip: 23.3.1
2023-11-24 16:39:59,559:INFO:          setuptools: 68.0.0
2023-11-24 16:39:59,559:INFO:             pycaret: 3.2.0
2023-11-24 16:39:59,559:INFO:             IPython: 8.15.0
2023-11-24 16:39:59,559:INFO:          ipywidgets: 8.1.1
2023-11-24 16:39:59,559:INFO:                tqdm: 4.66.1
2023-11-24 16:39:59,559:INFO:               numpy: 1.25.2
2023-11-24 16:39:59,559:INFO:              pandas: 1.5.3
2023-11-24 16:39:59,559:INFO:              jinja2: 3.1.2
2023-11-24 16:39:59,559:INFO:               scipy: 1.11.3
2023-11-24 16:39:59,559:INFO:              joblib: 1.3.2
2023-11-24 16:39:59,559:INFO:             sklearn: 1.2.2
2023-11-24 16:39:59,559:INFO:                pyod: 1.1.2
2023-11-24 16:39:59,559:INFO:            imblearn: 0.11.0
2023-11-24 16:39:59,559:INFO:   category_encoders: 2.6.3
2023-11-24 16:39:59,560:INFO:            lightgbm: 4.1.0
2023-11-24 16:39:59,560:INFO:               numba: 0.58.1
2023-11-24 16:39:59,560:INFO:            requests: 2.31.0
2023-11-24 16:39:59,560:INFO:          matplotlib: 3.6.0
2023-11-24 16:39:59,560:INFO:          scikitplot: 0.3.7
2023-11-24 16:39:59,560:INFO:         yellowbrick: 1.5
2023-11-24 16:39:59,560:INFO:              plotly: 5.18.0
2023-11-24 16:39:59,560:INFO:    plotly-resampler: Not installed
2023-11-24 16:39:59,560:INFO:             kaleido: 0.2.1
2023-11-24 16:39:59,560:INFO:           schemdraw: 0.15
2023-11-24 16:39:59,560:INFO:         statsmodels: 0.14.0
2023-11-24 16:39:59,560:INFO:              sktime: 0.21.1
2023-11-24 16:39:59,560:INFO:               tbats: 1.1.3
2023-11-24 16:39:59,560:INFO:            pmdarima: 2.0.4
2023-11-24 16:39:59,560:INFO:              psutil: 5.9.6
2023-11-24 16:39:59,560:INFO:          markupsafe: 2.1.3
2023-11-24 16:39:59,560:INFO:             pickle5: Not installed
2023-11-24 16:39:59,560:INFO:         cloudpickle: 3.0.0
2023-11-24 16:39:59,560:INFO:         deprecation: 2.1.0
2023-11-24 16:39:59,560:INFO:              xxhash: 3.4.1
2023-11-24 16:39:59,560:INFO:           wurlitzer: 3.0.3
2023-11-24 16:39:59,560:INFO:PyCaret optional dependencies:
2023-11-24 16:39:59,560:INFO:                shap: Not installed
2023-11-24 16:39:59,560:INFO:           interpret: Not installed
2023-11-24 16:39:59,560:INFO:                umap: Not installed
2023-11-24 16:39:59,560:INFO:     ydata_profiling: 4.6.2
2023-11-24 16:39:59,560:INFO:  explainerdashboard: Not installed
2023-11-24 16:39:59,560:INFO:             autoviz: Not installed
2023-11-24 16:39:59,560:INFO:           fairlearn: Not installed
2023-11-24 16:39:59,560:INFO:          deepchecks: Not installed
2023-11-24 16:39:59,560:INFO:             xgboost: 1.7.3
2023-11-24 16:39:59,560:INFO:            catboost: Not installed
2023-11-24 16:39:59,560:INFO:              kmodes: Not installed
2023-11-24 16:39:59,560:INFO:             mlxtend: Not installed
2023-11-24 16:39:59,560:INFO:       statsforecast: Not installed
2023-11-24 16:39:59,560:INFO:        tune_sklearn: Not installed
2023-11-24 16:39:59,560:INFO:                 ray: Not installed
2023-11-24 16:39:59,560:INFO:            hyperopt: Not installed
2023-11-24 16:39:59,560:INFO:              optuna: Not installed
2023-11-24 16:39:59,560:INFO:               skopt: Not installed
2023-11-24 16:39:59,560:INFO:              mlflow: Not installed
2023-11-24 16:39:59,560:INFO:              gradio: Not installed
2023-11-24 16:39:59,560:INFO:             fastapi: Not installed
2023-11-24 16:39:59,560:INFO:             uvicorn: Not installed
2023-11-24 16:39:59,560:INFO:              m2cgen: Not installed
2023-11-24 16:39:59,560:INFO:           evidently: Not installed
2023-11-24 16:39:59,560:INFO:               fugue: Not installed
2023-11-24 16:39:59,560:INFO:           streamlit: 1.28.2
2023-11-24 16:39:59,560:INFO:             prophet: Not installed
2023-11-24 16:39:59,560:INFO:None
2023-11-24 16:39:59,560:INFO:Set up data.
2023-11-24 16:40:01,237:INFO:PyCaret ClassificationExperiment
2023-11-24 16:40:01,237:INFO:Logging name: clf-default-name
2023-11-24 16:40:01,237:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-11-24 16:40:01,237:INFO:version 3.2.0
2023-11-24 16:40:01,237:INFO:Initializing setup()
2023-11-24 16:40:01,237:INFO:self.USI: df59
2023-11-24 16:40:01,238:INFO:self._variable_keys: {'_available_plots', 'fix_imbalance', 'fold_shuffle_param', 'exp_id', 'y_test', 'y_train', 'n_jobs_param', 'memory', 'log_plots_param', 'html_param', 'gpu_param', '_ml_usecase', 'idx', 'pipeline', 'is_multiclass', 'seed', 'X_test', 'logging_param', 'data', 'fold_generator', 'exp_name_log', 'USI', 'X', 'fold_groups_param', 'X_train', 'y', 'gpu_n_jobs_param', 'target_param'}
2023-11-24 16:40:01,238:INFO:Checking environment
2023-11-24 16:40:01,238:INFO:python_version: 3.11.5
2023-11-24 16:40:01,238:INFO:python_build: ('main', 'Sep 11 2023 08:31:25')
2023-11-24 16:40:01,238:INFO:machine: arm64
2023-11-24 16:40:01,238:INFO:platform: macOS-14.0-arm64-arm-64bit
2023-11-24 16:40:01,238:INFO:Memory: svmem(total=17179869184, available=5139283968, percent=70.1, used=6942294016, free=201064448, active=4954849280, inactive=4829937664, wired=1987444736)
2023-11-24 16:40:01,238:INFO:Physical Core: 10
2023-11-24 16:40:01,238:INFO:Logical Core: 10
2023-11-24 16:40:01,238:INFO:Checking libraries
2023-11-24 16:40:01,238:INFO:System:
2023-11-24 16:40:01,238:INFO:    python: 3.11.5 (main, Sep 11 2023, 08:31:25) [Clang 14.0.6 ]
2023-11-24 16:40:01,238:INFO:executable: /Users/saiakhil/anaconda3/envs/mlauto/bin/python
2023-11-24 16:40:01,238:INFO:   machine: macOS-14.0-arm64-arm-64bit
2023-11-24 16:40:01,238:INFO:PyCaret required dependencies:
2023-11-24 16:40:01,238:INFO:                 pip: 23.3.1
2023-11-24 16:40:01,238:INFO:          setuptools: 68.0.0
2023-11-24 16:40:01,238:INFO:             pycaret: 3.2.0
2023-11-24 16:40:01,238:INFO:             IPython: 8.15.0
2023-11-24 16:40:01,238:INFO:          ipywidgets: 8.1.1
2023-11-24 16:40:01,238:INFO:                tqdm: 4.66.1
2023-11-24 16:40:01,238:INFO:               numpy: 1.25.2
2023-11-24 16:40:01,238:INFO:              pandas: 1.5.3
2023-11-24 16:40:01,238:INFO:              jinja2: 3.1.2
2023-11-24 16:40:01,238:INFO:               scipy: 1.11.3
2023-11-24 16:40:01,238:INFO:              joblib: 1.3.2
2023-11-24 16:40:01,238:INFO:             sklearn: 1.2.2
2023-11-24 16:40:01,238:INFO:                pyod: 1.1.2
2023-11-24 16:40:01,238:INFO:            imblearn: 0.11.0
2023-11-24 16:40:01,238:INFO:   category_encoders: 2.6.3
2023-11-24 16:40:01,238:INFO:            lightgbm: 4.1.0
2023-11-24 16:40:01,238:INFO:               numba: 0.58.1
2023-11-24 16:40:01,238:INFO:            requests: 2.31.0
2023-11-24 16:40:01,238:INFO:          matplotlib: 3.6.0
2023-11-24 16:40:01,238:INFO:          scikitplot: 0.3.7
2023-11-24 16:40:01,238:INFO:         yellowbrick: 1.5
2023-11-24 16:40:01,238:INFO:              plotly: 5.18.0
2023-11-24 16:40:01,238:INFO:    plotly-resampler: Not installed
2023-11-24 16:40:01,238:INFO:             kaleido: 0.2.1
2023-11-24 16:40:01,238:INFO:           schemdraw: 0.15
2023-11-24 16:40:01,238:INFO:         statsmodels: 0.14.0
2023-11-24 16:40:01,238:INFO:              sktime: 0.21.1
2023-11-24 16:40:01,238:INFO:               tbats: 1.1.3
2023-11-24 16:40:01,238:INFO:            pmdarima: 2.0.4
2023-11-24 16:40:01,238:INFO:              psutil: 5.9.6
2023-11-24 16:40:01,238:INFO:          markupsafe: 2.1.3
2023-11-24 16:40:01,238:INFO:             pickle5: Not installed
2023-11-24 16:40:01,238:INFO:         cloudpickle: 3.0.0
2023-11-24 16:40:01,238:INFO:         deprecation: 2.1.0
2023-11-24 16:40:01,238:INFO:              xxhash: 3.4.1
2023-11-24 16:40:01,238:INFO:           wurlitzer: 3.0.3
2023-11-24 16:40:01,238:INFO:PyCaret optional dependencies:
2023-11-24 16:40:01,238:INFO:                shap: Not installed
2023-11-24 16:40:01,238:INFO:           interpret: Not installed
2023-11-24 16:40:01,238:INFO:                umap: Not installed
2023-11-24 16:40:01,238:INFO:     ydata_profiling: 4.6.2
2023-11-24 16:40:01,238:INFO:  explainerdashboard: Not installed
2023-11-24 16:40:01,238:INFO:             autoviz: Not installed
2023-11-24 16:40:01,238:INFO:           fairlearn: Not installed
2023-11-24 16:40:01,238:INFO:          deepchecks: Not installed
2023-11-24 16:40:01,238:INFO:             xgboost: 1.7.3
2023-11-24 16:40:01,238:INFO:            catboost: Not installed
2023-11-24 16:40:01,238:INFO:              kmodes: Not installed
2023-11-24 16:40:01,238:INFO:             mlxtend: Not installed
2023-11-24 16:40:01,238:INFO:       statsforecast: Not installed
2023-11-24 16:40:01,238:INFO:        tune_sklearn: Not installed
2023-11-24 16:40:01,238:INFO:                 ray: Not installed
2023-11-24 16:40:01,238:INFO:            hyperopt: Not installed
2023-11-24 16:40:01,238:INFO:              optuna: Not installed
2023-11-24 16:40:01,238:INFO:               skopt: Not installed
2023-11-24 16:40:01,238:INFO:              mlflow: Not installed
2023-11-24 16:40:01,238:INFO:              gradio: Not installed
2023-11-24 16:40:01,238:INFO:             fastapi: Not installed
2023-11-24 16:40:01,238:INFO:             uvicorn: Not installed
2023-11-24 16:40:01,238:INFO:              m2cgen: Not installed
2023-11-24 16:40:01,238:INFO:           evidently: Not installed
2023-11-24 16:40:01,238:INFO:               fugue: Not installed
2023-11-24 16:40:01,238:INFO:           streamlit: 1.28.2
2023-11-24 16:40:01,238:INFO:             prophet: Not installed
2023-11-24 16:40:01,238:INFO:None
2023-11-24 16:40:01,238:INFO:Set up data.
2023-11-24 16:40:13,101:INFO:PyCaret ClassificationExperiment
2023-11-24 16:40:13,102:INFO:Logging name: clf-default-name
2023-11-24 16:40:13,102:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-11-24 16:40:13,102:INFO:version 3.2.0
2023-11-24 16:40:13,102:INFO:Initializing setup()
2023-11-24 16:40:13,102:INFO:self.USI: 23a6
2023-11-24 16:40:13,102:INFO:self._variable_keys: {'_available_plots', 'fix_imbalance', 'fold_shuffle_param', 'exp_id', 'y_test', 'y_train', 'n_jobs_param', 'memory', 'log_plots_param', 'html_param', 'gpu_param', '_ml_usecase', 'idx', 'pipeline', 'is_multiclass', 'seed', 'X_test', 'logging_param', 'data', 'fold_generator', 'exp_name_log', 'USI', 'X', 'fold_groups_param', 'X_train', 'y', 'gpu_n_jobs_param', 'target_param'}
2023-11-24 16:40:13,102:INFO:Checking environment
2023-11-24 16:40:13,102:INFO:python_version: 3.11.5
2023-11-24 16:40:13,102:INFO:python_build: ('main', 'Sep 11 2023 08:31:25')
2023-11-24 16:40:13,102:INFO:machine: arm64
2023-11-24 16:40:13,102:INFO:platform: macOS-14.0-arm64-arm-64bit
2023-11-24 16:40:13,102:INFO:Memory: svmem(total=17179869184, available=5177491456, percent=69.9, used=6920126464, free=242417664, active=4930174976, inactive=4826513408, wired=1989951488)
2023-11-24 16:40:13,102:INFO:Physical Core: 10
2023-11-24 16:40:13,102:INFO:Logical Core: 10
2023-11-24 16:40:13,102:INFO:Checking libraries
2023-11-24 16:40:13,102:INFO:System:
2023-11-24 16:40:13,102:INFO:    python: 3.11.5 (main, Sep 11 2023, 08:31:25) [Clang 14.0.6 ]
2023-11-24 16:40:13,102:INFO:executable: /Users/saiakhil/anaconda3/envs/mlauto/bin/python
2023-11-24 16:40:13,102:INFO:   machine: macOS-14.0-arm64-arm-64bit
2023-11-24 16:40:13,102:INFO:PyCaret required dependencies:
2023-11-24 16:40:13,102:INFO:                 pip: 23.3.1
2023-11-24 16:40:13,102:INFO:          setuptools: 68.0.0
2023-11-24 16:40:13,102:INFO:             pycaret: 3.2.0
2023-11-24 16:40:13,102:INFO:             IPython: 8.15.0
2023-11-24 16:40:13,102:INFO:          ipywidgets: 8.1.1
2023-11-24 16:40:13,102:INFO:                tqdm: 4.66.1
2023-11-24 16:40:13,102:INFO:               numpy: 1.25.2
2023-11-24 16:40:13,102:INFO:              pandas: 1.5.3
2023-11-24 16:40:13,102:INFO:              jinja2: 3.1.2
2023-11-24 16:40:13,102:INFO:               scipy: 1.11.3
2023-11-24 16:40:13,102:INFO:              joblib: 1.3.2
2023-11-24 16:40:13,102:INFO:             sklearn: 1.2.2
2023-11-24 16:40:13,102:INFO:                pyod: 1.1.2
2023-11-24 16:40:13,102:INFO:            imblearn: 0.11.0
2023-11-24 16:40:13,102:INFO:   category_encoders: 2.6.3
2023-11-24 16:40:13,102:INFO:            lightgbm: 4.1.0
2023-11-24 16:40:13,102:INFO:               numba: 0.58.1
2023-11-24 16:40:13,102:INFO:            requests: 2.31.0
2023-11-24 16:40:13,102:INFO:          matplotlib: 3.6.0
2023-11-24 16:40:13,102:INFO:          scikitplot: 0.3.7
2023-11-24 16:40:13,102:INFO:         yellowbrick: 1.5
2023-11-24 16:40:13,102:INFO:              plotly: 5.18.0
2023-11-24 16:40:13,102:INFO:    plotly-resampler: Not installed
2023-11-24 16:40:13,102:INFO:             kaleido: 0.2.1
2023-11-24 16:40:13,102:INFO:           schemdraw: 0.15
2023-11-24 16:40:13,102:INFO:         statsmodels: 0.14.0
2023-11-24 16:40:13,102:INFO:              sktime: 0.21.1
2023-11-24 16:40:13,102:INFO:               tbats: 1.1.3
2023-11-24 16:40:13,102:INFO:            pmdarima: 2.0.4
2023-11-24 16:40:13,102:INFO:              psutil: 5.9.6
2023-11-24 16:40:13,102:INFO:          markupsafe: 2.1.3
2023-11-24 16:40:13,102:INFO:             pickle5: Not installed
2023-11-24 16:40:13,102:INFO:         cloudpickle: 3.0.0
2023-11-24 16:40:13,102:INFO:         deprecation: 2.1.0
2023-11-24 16:40:13,102:INFO:              xxhash: 3.4.1
2023-11-24 16:40:13,102:INFO:           wurlitzer: 3.0.3
2023-11-24 16:40:13,102:INFO:PyCaret optional dependencies:
2023-11-24 16:40:13,102:INFO:                shap: Not installed
2023-11-24 16:40:13,102:INFO:           interpret: Not installed
2023-11-24 16:40:13,102:INFO:                umap: Not installed
2023-11-24 16:40:13,102:INFO:     ydata_profiling: 4.6.2
2023-11-24 16:40:13,102:INFO:  explainerdashboard: Not installed
2023-11-24 16:40:13,102:INFO:             autoviz: Not installed
2023-11-24 16:40:13,102:INFO:           fairlearn: Not installed
2023-11-24 16:40:13,102:INFO:          deepchecks: Not installed
2023-11-24 16:40:13,102:INFO:             xgboost: 1.7.3
2023-11-24 16:40:13,102:INFO:            catboost: Not installed
2023-11-24 16:40:13,102:INFO:              kmodes: Not installed
2023-11-24 16:40:13,102:INFO:             mlxtend: Not installed
2023-11-24 16:40:13,102:INFO:       statsforecast: Not installed
2023-11-24 16:40:13,102:INFO:        tune_sklearn: Not installed
2023-11-24 16:40:13,102:INFO:                 ray: Not installed
2023-11-24 16:40:13,102:INFO:            hyperopt: Not installed
2023-11-24 16:40:13,102:INFO:              optuna: Not installed
2023-11-24 16:40:13,102:INFO:               skopt: Not installed
2023-11-24 16:40:13,102:INFO:              mlflow: Not installed
2023-11-24 16:40:13,102:INFO:              gradio: Not installed
2023-11-24 16:40:13,102:INFO:             fastapi: Not installed
2023-11-24 16:40:13,102:INFO:             uvicorn: Not installed
2023-11-24 16:40:13,102:INFO:              m2cgen: Not installed
2023-11-24 16:40:13,102:INFO:           evidently: Not installed
2023-11-24 16:40:13,102:INFO:               fugue: Not installed
2023-11-24 16:40:13,102:INFO:           streamlit: 1.28.2
2023-11-24 16:40:13,102:INFO:             prophet: Not installed
2023-11-24 16:40:13,102:INFO:None
2023-11-24 16:40:13,102:INFO:Set up data.
2023-11-24 16:40:13,130:INFO:Set up folding strategy.
2023-11-24 16:40:13,130:INFO:Set up train/test split.
2023-11-24 16:40:13,137:INFO:Set up index.
2023-11-24 16:40:13,137:INFO:Assigning column types.
2023-11-24 16:40:13,138:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-24 16:40:13,156:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 16:40:13,156:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:40:13,167:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:40:13,168:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:40:13,185:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 16:40:13,186:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:40:13,196:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:40:13,197:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:40:13,198:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-11-24 16:40:13,215:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:40:13,225:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:40:13,226:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:40:13,243:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:40:13,253:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:40:13,254:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:40:13,254:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-11-24 16:40:13,282:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:40:13,283:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:40:13,311:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:40:13,312:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:40:13,313:INFO:Preparing preprocessing pipeline...
2023-11-24 16:40:13,313:INFO:Set up label encoding.
2023-11-24 16:40:13,313:INFO:Set up simple imputation.
2023-11-24 16:40:13,315:INFO:Set up encoding of categorical features.
2023-11-24 16:40:13,707:INFO:Finished creating preprocessing pipeline.
2023-11-24 16:40:13,710:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/46/tcczvndd7xj_pqs5r176bl600000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Number_of_vehicles_involved',
                                             'Number_of_casualties'],
                                    transformer=SimpleImputer(add_i...
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['Time'],
                                    transformer=TargetEncoder(cols=['Time'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2023-11-24 16:40:13,710:INFO:Creating final display dataframe.
2023-11-24 16:40:14,099:INFO:Setup _display_container:                     Description                                              Value
0                    Session id                                               8276
1                        Target                                  Accident_severity
2                   Target type                                         Multiclass
3                Target mapping  Fatal injury: 0, Serious Injury: 1, Slight Inj...
4           Original data shape                                        (12316, 32)
5        Transformed data shape                                       (12316, 208)
6   Transformed train set shape                                        (8621, 208)
7    Transformed test set shape                                        (3695, 208)
8              Numeric features                                                  2
9          Categorical features                                                 29
10     Rows with missing values                                              76.5%
11                   Preprocess                                               True
12              Imputation type                                             simple
13           Numeric imputation                                               mean
14       Categorical imputation                                               mode
15     Maximum one-hot encoding                                                 25
16              Encoding method                                               None
17               Fold Generator                                    StratifiedKFold
18                  Fold Number                                                 10
19                     CPU Jobs                                                 -1
20                      Use GPU                                              False
21               Log Experiment                                              False
22              Experiment Name                                   clf-default-name
23                          USI                                               23a6
2023-11-24 16:40:14,128:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:40:14,129:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:40:14,156:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:40:14,158:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:40:14,158:INFO:setup() successfully completed in 1.06s...............
2023-11-24 16:40:42,503:INFO:Initializing compare_models()
2023-11-24 16:40:42,503:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28ea7ef10>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x28ea7ef10>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2023-11-24 16:40:42,503:INFO:Checking exceptions
2023-11-24 16:40:42,505:INFO:Preparing display monitor
2023-11-24 16:40:42,506:INFO:Initializing Logistic Regression
2023-11-24 16:40:42,506:INFO:Total runtime is 5.68230946858724e-07 minutes
2023-11-24 16:40:42,506:INFO:SubProcess create_model() called ==================================
2023-11-24 16:40:42,506:INFO:Initializing create_model()
2023-11-24 16:40:42,506:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28ea7ef10>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2a642b7d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:40:42,506:INFO:Checking exceptions
2023-11-24 16:40:42,506:INFO:Importing libraries
2023-11-24 16:40:42,507:INFO:Copying training dataset
2023-11-24 16:40:42,509:INFO:Defining folds
2023-11-24 16:40:42,509:INFO:Declaring metric variables
2023-11-24 16:40:42,509:INFO:Importing untrained model
2023-11-24 16:40:42,509:INFO:Logistic Regression Imported successfully
2023-11-24 16:40:42,509:INFO:Starting cross validation
2023-11-24 16:40:42,510:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:40:48,189:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:48,192:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:48,194:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:48,393:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:48,396:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:48,398:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:48,531:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:48,539:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:48,542:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:48,656:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:48,658:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:48,661:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:48,739:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:48,742:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:48,743:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:40:48,744:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:49,062:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:49,064:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:49,065:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:40:49,066:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:49,241:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:49,243:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:49,245:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:40:49,246:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:49,261:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:49,264:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:49,265:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:40:49,266:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:49,273:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:49,276:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:49,277:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:40:49,278:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:49,324:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:49,326:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:49,327:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:40:49,328:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:49,333:INFO:Calculating mean and std
2023-11-24 16:40:49,334:INFO:Creating metrics dataframe
2023-11-24 16:40:49,337:INFO:Uploading results into container
2023-11-24 16:40:49,338:INFO:Uploading model into container now
2023-11-24 16:40:49,338:INFO:_master_model_container: 1
2023-11-24 16:40:49,338:INFO:_display_container: 2
2023-11-24 16:40:49,338:INFO:LogisticRegression(max_iter=1000, random_state=8276)
2023-11-24 16:40:49,338:INFO:create_model() successfully completed......................................
2023-11-24 16:40:49,461:INFO:SubProcess create_model() end ==================================
2023-11-24 16:40:49,462:INFO:Creating metrics dataframe
2023-11-24 16:40:49,463:INFO:Initializing K Neighbors Classifier
2023-11-24 16:40:49,463:INFO:Total runtime is 0.1159461816151937 minutes
2023-11-24 16:40:49,463:INFO:SubProcess create_model() called ==================================
2023-11-24 16:40:49,463:INFO:Initializing create_model()
2023-11-24 16:40:49,463:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28ea7ef10>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2a642b7d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:40:49,463:INFO:Checking exceptions
2023-11-24 16:40:49,463:INFO:Importing libraries
2023-11-24 16:40:49,463:INFO:Copying training dataset
2023-11-24 16:40:49,466:INFO:Defining folds
2023-11-24 16:40:49,466:INFO:Declaring metric variables
2023-11-24 16:40:49,466:INFO:Importing untrained model
2023-11-24 16:40:49,466:INFO:K Neighbors Classifier Imported successfully
2023-11-24 16:40:49,466:INFO:Starting cross validation
2023-11-24 16:40:49,467:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:40:50,403:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:50,407:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:50,409:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:50,410:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:50,416:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:50,417:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:50,418:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:50,418:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:40:50,419:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:50,419:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:40:50,420:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:50,436:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:50,436:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:50,438:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:50,438:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:50,441:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:50,441:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:50,446:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:50,448:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:50,449:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:40:50,450:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:50,453:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:50,453:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:50,455:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:50,455:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:50,457:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:50,458:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:50,472:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:50,474:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:50,476:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:50,477:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:50,480:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:50,482:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:50,487:INFO:Calculating mean and std
2023-11-24 16:40:50,487:INFO:Creating metrics dataframe
2023-11-24 16:40:50,488:INFO:Uploading results into container
2023-11-24 16:40:50,489:INFO:Uploading model into container now
2023-11-24 16:40:50,489:INFO:_master_model_container: 2
2023-11-24 16:40:50,489:INFO:_display_container: 2
2023-11-24 16:40:50,489:INFO:KNeighborsClassifier(n_jobs=-1)
2023-11-24 16:40:50,489:INFO:create_model() successfully completed......................................
2023-11-24 16:40:50,578:INFO:SubProcess create_model() end ==================================
2023-11-24 16:40:50,578:INFO:Creating metrics dataframe
2023-11-24 16:40:50,581:INFO:Initializing Naive Bayes
2023-11-24 16:40:50,581:INFO:Total runtime is 0.13457866509755453 minutes
2023-11-24 16:40:50,581:INFO:SubProcess create_model() called ==================================
2023-11-24 16:40:50,581:INFO:Initializing create_model()
2023-11-24 16:40:50,581:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28ea7ef10>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2a642b7d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:40:50,581:INFO:Checking exceptions
2023-11-24 16:40:50,581:INFO:Importing libraries
2023-11-24 16:40:50,581:INFO:Copying training dataset
2023-11-24 16:40:50,584:INFO:Defining folds
2023-11-24 16:40:50,584:INFO:Declaring metric variables
2023-11-24 16:40:50,584:INFO:Importing untrained model
2023-11-24 16:40:50,584:INFO:Naive Bayes Imported successfully
2023-11-24 16:40:50,584:INFO:Starting cross validation
2023-11-24 16:40:50,585:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:40:51,249:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:51,251:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:51,254:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:51,255:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:51,257:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:51,260:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:51,285:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:51,286:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:51,287:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:51,288:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:51,289:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:51,290:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:51,297:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:51,300:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:51,300:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:51,302:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:51,303:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:51,303:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:51,305:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:51,306:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:51,308:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:51,309:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:51,312:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:51,314:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:51,325:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:51,328:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:51,330:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:51,331:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:51,332:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:51,335:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:51,339:INFO:Calculating mean and std
2023-11-24 16:40:51,340:INFO:Creating metrics dataframe
2023-11-24 16:40:51,341:INFO:Uploading results into container
2023-11-24 16:40:51,341:INFO:Uploading model into container now
2023-11-24 16:40:51,341:INFO:_master_model_container: 3
2023-11-24 16:40:51,341:INFO:_display_container: 2
2023-11-24 16:40:51,341:INFO:GaussianNB()
2023-11-24 16:40:51,341:INFO:create_model() successfully completed......................................
2023-11-24 16:40:51,431:INFO:SubProcess create_model() end ==================================
2023-11-24 16:40:51,431:INFO:Creating metrics dataframe
2023-11-24 16:40:51,433:INFO:Initializing Decision Tree Classifier
2023-11-24 16:40:51,433:INFO:Total runtime is 0.14877796570460003 minutes
2023-11-24 16:40:51,433:INFO:SubProcess create_model() called ==================================
2023-11-24 16:40:51,433:INFO:Initializing create_model()
2023-11-24 16:40:51,433:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28ea7ef10>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2a642b7d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:40:51,433:INFO:Checking exceptions
2023-11-24 16:40:51,433:INFO:Importing libraries
2023-11-24 16:40:51,433:INFO:Copying training dataset
2023-11-24 16:40:51,436:INFO:Defining folds
2023-11-24 16:40:51,436:INFO:Declaring metric variables
2023-11-24 16:40:51,436:INFO:Importing untrained model
2023-11-24 16:40:51,436:INFO:Decision Tree Classifier Imported successfully
2023-11-24 16:40:51,436:INFO:Starting cross validation
2023-11-24 16:40:51,437:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:40:52,139:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:52,141:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:52,143:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:52,183:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:52,185:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:52,190:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:52,203:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:52,206:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:52,209:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:52,225:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:52,228:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:52,228:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:52,230:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:52,230:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:52,232:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:52,232:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:52,234:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:52,236:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:52,243:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:52,245:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:52,246:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:52,249:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:52,250:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:52,250:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:52,252:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:52,252:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:52,254:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:52,293:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:52,295:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:52,297:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:52,301:INFO:Calculating mean and std
2023-11-24 16:40:52,301:INFO:Creating metrics dataframe
2023-11-24 16:40:52,302:INFO:Uploading results into container
2023-11-24 16:40:52,303:INFO:Uploading model into container now
2023-11-24 16:40:52,303:INFO:_master_model_container: 4
2023-11-24 16:40:52,303:INFO:_display_container: 2
2023-11-24 16:40:52,303:INFO:DecisionTreeClassifier(random_state=8276)
2023-11-24 16:40:52,303:INFO:create_model() successfully completed......................................
2023-11-24 16:40:52,396:INFO:SubProcess create_model() end ==================================
2023-11-24 16:40:52,396:INFO:Creating metrics dataframe
2023-11-24 16:40:52,398:INFO:Initializing SVM - Linear Kernel
2023-11-24 16:40:52,398:INFO:Total runtime is 0.16486494541168215 minutes
2023-11-24 16:40:52,398:INFO:SubProcess create_model() called ==================================
2023-11-24 16:40:52,398:INFO:Initializing create_model()
2023-11-24 16:40:52,398:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28ea7ef10>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2a642b7d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:40:52,398:INFO:Checking exceptions
2023-11-24 16:40:52,398:INFO:Importing libraries
2023-11-24 16:40:52,398:INFO:Copying training dataset
2023-11-24 16:40:52,401:INFO:Defining folds
2023-11-24 16:40:52,401:INFO:Declaring metric variables
2023-11-24 16:40:52,401:INFO:Importing untrained model
2023-11-24 16:40:52,401:INFO:SVM - Linear Kernel Imported successfully
2023-11-24 16:40:52,401:INFO:Starting cross validation
2023-11-24 16:40:52,402:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:40:53,931:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:40:53,932:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:53,934:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:53,936:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:53,941:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:40:53,942:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:53,944:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:53,946:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:53,959:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:40:53,960:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:53,963:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:53,965:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:53,976:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:40:53,977:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:53,979:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:53,981:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:53,983:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:40:53,984:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:53,987:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:53,989:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:53,991:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:40:53,992:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:53,994:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:53,995:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:40:53,997:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:54,003:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:40:54,004:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:54,006:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:40:54,006:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:54,007:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:54,008:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:40:54,009:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:54,009:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:54,011:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:40:54,011:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:54,066:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:40:54,067:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:54,069:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:40:54,070:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:54,070:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:54,071:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:40:54,072:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:54,072:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:54,074:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:40:54,075:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:54,079:INFO:Calculating mean and std
2023-11-24 16:40:54,079:INFO:Creating metrics dataframe
2023-11-24 16:40:54,080:INFO:Uploading results into container
2023-11-24 16:40:54,081:INFO:Uploading model into container now
2023-11-24 16:40:54,081:INFO:_master_model_container: 5
2023-11-24 16:40:54,081:INFO:_display_container: 2
2023-11-24 16:40:54,081:INFO:SGDClassifier(eta0=0.001, n_jobs=-1, random_state=8276)
2023-11-24 16:40:54,081:INFO:create_model() successfully completed......................................
2023-11-24 16:40:54,167:INFO:SubProcess create_model() end ==================================
2023-11-24 16:40:54,167:INFO:Creating metrics dataframe
2023-11-24 16:40:54,168:INFO:Initializing Ridge Classifier
2023-11-24 16:40:54,168:INFO:Total runtime is 0.1943673650423686 minutes
2023-11-24 16:40:54,168:INFO:SubProcess create_model() called ==================================
2023-11-24 16:40:54,168:INFO:Initializing create_model()
2023-11-24 16:40:54,168:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28ea7ef10>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2a642b7d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:40:54,169:INFO:Checking exceptions
2023-11-24 16:40:54,169:INFO:Importing libraries
2023-11-24 16:40:54,169:INFO:Copying training dataset
2023-11-24 16:40:54,171:INFO:Defining folds
2023-11-24 16:40:54,171:INFO:Declaring metric variables
2023-11-24 16:40:54,171:INFO:Importing untrained model
2023-11-24 16:40:54,171:INFO:Ridge Classifier Imported successfully
2023-11-24 16:40:54,171:INFO:Starting cross validation
2023-11-24 16:40:54,172:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:40:54,822:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:40:54,823:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:54,825:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:54,827:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:40:54,830:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:54,840:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:40:54,841:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:54,843:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:54,845:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:40:54,846:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:54,851:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:40:54,852:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:54,854:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:54,855:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:40:54,856:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:40:54,856:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:54,857:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:54,858:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:54,859:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:40:54,860:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:54,874:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:40:54,875:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:54,878:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:54,879:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:40:54,880:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:54,880:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:40:54,881:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:54,883:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:54,885:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:40:54,886:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:54,902:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:40:54,903:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:54,905:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:40:54,906:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:54,907:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:54,907:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:40:54,908:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:54,909:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:54,910:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:40:54,910:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:40:54,911:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:54,911:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:54,912:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:40:54,913:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:54,913:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:54,914:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:40:54,915:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:54,915:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:54,917:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:40:54,918:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:54,923:INFO:Calculating mean and std
2023-11-24 16:40:54,923:INFO:Creating metrics dataframe
2023-11-24 16:40:54,924:INFO:Uploading results into container
2023-11-24 16:40:54,925:INFO:Uploading model into container now
2023-11-24 16:40:54,925:INFO:_master_model_container: 6
2023-11-24 16:40:54,925:INFO:_display_container: 2
2023-11-24 16:40:54,925:INFO:RidgeClassifier(random_state=8276)
2023-11-24 16:40:54,925:INFO:create_model() successfully completed......................................
2023-11-24 16:40:55,013:INFO:SubProcess create_model() end ==================================
2023-11-24 16:40:55,014:INFO:Creating metrics dataframe
2023-11-24 16:40:55,015:INFO:Initializing Random Forest Classifier
2023-11-24 16:40:55,015:INFO:Total runtime is 0.2084804654121399 minutes
2023-11-24 16:40:55,015:INFO:SubProcess create_model() called ==================================
2023-11-24 16:40:55,015:INFO:Initializing create_model()
2023-11-24 16:40:55,015:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28ea7ef10>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2a642b7d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:40:55,015:INFO:Checking exceptions
2023-11-24 16:40:55,015:INFO:Importing libraries
2023-11-24 16:40:55,015:INFO:Copying training dataset
2023-11-24 16:40:55,018:INFO:Defining folds
2023-11-24 16:40:55,018:INFO:Declaring metric variables
2023-11-24 16:40:55,018:INFO:Importing untrained model
2023-11-24 16:40:55,018:INFO:Random Forest Classifier Imported successfully
2023-11-24 16:40:55,018:INFO:Starting cross validation
2023-11-24 16:40:55,019:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:40:56,450:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:56,453:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:56,455:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:56,482:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:56,486:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:56,487:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:40:56,489:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:56,619:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:56,621:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:56,623:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:40:56,625:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:56,667:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:56,670:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:56,673:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:40:56,674:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:56,856:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:56,859:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:56,861:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:40:56,863:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:56,876:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:56,877:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:56,880:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:56,880:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:56,881:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:40:56,882:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:40:56,882:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:56,883:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:56,893:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:56,894:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:56,896:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:56,896:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:56,896:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:56,897:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:40:56,897:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:40:56,898:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:56,898:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:56,898:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:56,899:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:40:56,900:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:56,904:INFO:Calculating mean and std
2023-11-24 16:40:56,904:INFO:Creating metrics dataframe
2023-11-24 16:40:56,905:INFO:Uploading results into container
2023-11-24 16:40:56,905:INFO:Uploading model into container now
2023-11-24 16:40:56,906:INFO:_master_model_container: 7
2023-11-24 16:40:56,906:INFO:_display_container: 2
2023-11-24 16:40:56,906:INFO:RandomForestClassifier(n_jobs=-1, random_state=8276)
2023-11-24 16:40:56,906:INFO:create_model() successfully completed......................................
2023-11-24 16:40:56,991:INFO:SubProcess create_model() end ==================================
2023-11-24 16:40:56,991:INFO:Creating metrics dataframe
2023-11-24 16:40:56,992:INFO:Initializing Quadratic Discriminant Analysis
2023-11-24 16:40:56,992:INFO:Total runtime is 0.2414353132247925 minutes
2023-11-24 16:40:56,992:INFO:SubProcess create_model() called ==================================
2023-11-24 16:40:56,993:INFO:Initializing create_model()
2023-11-24 16:40:56,993:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28ea7ef10>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2a642b7d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:40:56,993:INFO:Checking exceptions
2023-11-24 16:40:56,993:INFO:Importing libraries
2023-11-24 16:40:56,993:INFO:Copying training dataset
2023-11-24 16:40:56,995:INFO:Defining folds
2023-11-24 16:40:56,995:INFO:Declaring metric variables
2023-11-24 16:40:56,995:INFO:Importing untrained model
2023-11-24 16:40:56,995:INFO:Quadratic Discriminant Analysis Imported successfully
2023-11-24 16:40:56,995:INFO:Starting cross validation
2023-11-24 16:40:56,996:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:40:57,488:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 16:40:57,500:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 16:40:57,517:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 16:40:57,535:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 16:40:57,583:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 16:40:57,593:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 16:40:57,617:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 16:40:57,670:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 16:40:57,682:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 16:40:57,761:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 16:40:57,780:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:57,783:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:57,784:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:40:57,789:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:57,808:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:57,811:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:57,813:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:40:57,814:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:57,827:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:57,829:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:57,831:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:40:57,832:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:57,838:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:57,841:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:57,843:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:40:57,844:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:57,863:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:57,866:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:57,867:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:40:57,868:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:57,868:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:57,871:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:57,872:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:40:57,873:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:57,887:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:57,890:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:57,891:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:40:57,892:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:57,906:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:57,907:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:57,909:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:57,909:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:57,910:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:40:57,910:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:40:57,911:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:57,911:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:57,957:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:57,959:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:57,961:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:57,966:INFO:Calculating mean and std
2023-11-24 16:40:57,966:INFO:Creating metrics dataframe
2023-11-24 16:40:57,967:INFO:Uploading results into container
2023-11-24 16:40:57,967:INFO:Uploading model into container now
2023-11-24 16:40:57,967:INFO:_master_model_container: 8
2023-11-24 16:40:57,967:INFO:_display_container: 2
2023-11-24 16:40:57,967:INFO:QuadraticDiscriminantAnalysis()
2023-11-24 16:40:57,967:INFO:create_model() successfully completed......................................
2023-11-24 16:40:58,056:INFO:SubProcess create_model() end ==================================
2023-11-24 16:40:58,056:INFO:Creating metrics dataframe
2023-11-24 16:40:58,057:INFO:Initializing Ada Boost Classifier
2023-11-24 16:40:58,057:INFO:Total runtime is 0.2591855128606161 minutes
2023-11-24 16:40:58,057:INFO:SubProcess create_model() called ==================================
2023-11-24 16:40:58,058:INFO:Initializing create_model()
2023-11-24 16:40:58,058:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28ea7ef10>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2a642b7d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:40:58,058:INFO:Checking exceptions
2023-11-24 16:40:58,058:INFO:Importing libraries
2023-11-24 16:40:58,058:INFO:Copying training dataset
2023-11-24 16:40:58,060:INFO:Defining folds
2023-11-24 16:40:58,060:INFO:Declaring metric variables
2023-11-24 16:40:58,060:INFO:Importing untrained model
2023-11-24 16:40:58,060:INFO:Ada Boost Classifier Imported successfully
2023-11-24 16:40:58,060:INFO:Starting cross validation
2023-11-24 16:40:58,061:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:40:59,334:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:59,337:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:59,340:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:59,413:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:59,415:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:59,418:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:59,425:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:59,427:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:59,431:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:59,435:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:59,438:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:59,440:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:59,449:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:59,452:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:59,454:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:59,461:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:59,463:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:59,465:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:59,465:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:59,467:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:59,470:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:59,474:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:59,477:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:59,477:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:59,479:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:59,480:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:59,482:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:59,492:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:59,495:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:59,497:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:40:59,501:INFO:Calculating mean and std
2023-11-24 16:40:59,502:INFO:Creating metrics dataframe
2023-11-24 16:40:59,503:INFO:Uploading results into container
2023-11-24 16:40:59,503:INFO:Uploading model into container now
2023-11-24 16:40:59,503:INFO:_master_model_container: 9
2023-11-24 16:40:59,503:INFO:_display_container: 2
2023-11-24 16:40:59,503:INFO:AdaBoostClassifier(random_state=8276)
2023-11-24 16:40:59,503:INFO:create_model() successfully completed......................................
2023-11-24 16:40:59,590:INFO:SubProcess create_model() end ==================================
2023-11-24 16:40:59,590:INFO:Creating metrics dataframe
2023-11-24 16:40:59,592:INFO:Initializing Gradient Boosting Classifier
2023-11-24 16:40:59,592:INFO:Total runtime is 0.28475863536198937 minutes
2023-11-24 16:40:59,592:INFO:SubProcess create_model() called ==================================
2023-11-24 16:40:59,592:INFO:Initializing create_model()
2023-11-24 16:40:59,592:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28ea7ef10>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2a642b7d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:40:59,592:INFO:Checking exceptions
2023-11-24 16:40:59,592:INFO:Importing libraries
2023-11-24 16:40:59,592:INFO:Copying training dataset
2023-11-24 16:40:59,594:INFO:Defining folds
2023-11-24 16:40:59,594:INFO:Declaring metric variables
2023-11-24 16:40:59,594:INFO:Importing untrained model
2023-11-24 16:40:59,594:INFO:Gradient Boosting Classifier Imported successfully
2023-11-24 16:40:59,594:INFO:Starting cross validation
2023-11-24 16:40:59,595:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:41:07,670:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:07,676:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:07,681:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:07,686:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:07,689:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:07,691:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:07,697:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:07,699:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:07,702:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:07,745:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:07,745:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:07,748:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:07,748:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:07,750:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:07,750:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:07,755:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:07,756:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:07,757:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:07,759:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:07,759:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:07,761:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:07,788:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:07,790:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:07,792:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:07,792:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:07,793:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:07,794:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:07,795:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:07,796:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:07,797:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:07,801:INFO:Calculating mean and std
2023-11-24 16:41:07,801:INFO:Creating metrics dataframe
2023-11-24 16:41:07,802:INFO:Uploading results into container
2023-11-24 16:41:07,802:INFO:Uploading model into container now
2023-11-24 16:41:07,803:INFO:_master_model_container: 10
2023-11-24 16:41:07,803:INFO:_display_container: 2
2023-11-24 16:41:07,803:INFO:GradientBoostingClassifier(random_state=8276)
2023-11-24 16:41:07,803:INFO:create_model() successfully completed......................................
2023-11-24 16:41:07,892:INFO:SubProcess create_model() end ==================================
2023-11-24 16:41:07,892:INFO:Creating metrics dataframe
2023-11-24 16:41:07,894:INFO:Initializing Linear Discriminant Analysis
2023-11-24 16:41:07,894:INFO:Total runtime is 0.4231267333030701 minutes
2023-11-24 16:41:07,894:INFO:SubProcess create_model() called ==================================
2023-11-24 16:41:07,894:INFO:Initializing create_model()
2023-11-24 16:41:07,894:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28ea7ef10>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2a642b7d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:41:07,894:INFO:Checking exceptions
2023-11-24 16:41:07,894:INFO:Importing libraries
2023-11-24 16:41:07,894:INFO:Copying training dataset
2023-11-24 16:41:07,896:INFO:Defining folds
2023-11-24 16:41:07,896:INFO:Declaring metric variables
2023-11-24 16:41:07,896:INFO:Importing untrained model
2023-11-24 16:41:07,896:INFO:Linear Discriminant Analysis Imported successfully
2023-11-24 16:41:07,897:INFO:Starting cross validation
2023-11-24 16:41:07,898:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:41:08,632:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:08,633:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:08,635:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:08,636:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:08,638:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:08,639:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:08,749:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:08,752:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:08,756:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:08,761:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:08,763:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:08,763:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:08,765:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:08,767:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:08,767:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:08,770:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:08,773:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:08,773:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:08,775:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:08,775:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:08,778:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:08,801:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:08,803:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:08,804:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:08,806:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:08,806:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:08,808:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:08,836:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:08,838:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:08,841:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:08,845:INFO:Calculating mean and std
2023-11-24 16:41:08,846:INFO:Creating metrics dataframe
2023-11-24 16:41:08,849:INFO:Uploading results into container
2023-11-24 16:41:08,849:INFO:Uploading model into container now
2023-11-24 16:41:08,850:INFO:_master_model_container: 11
2023-11-24 16:41:08,850:INFO:_display_container: 2
2023-11-24 16:41:08,851:INFO:LinearDiscriminantAnalysis()
2023-11-24 16:41:08,851:INFO:create_model() successfully completed......................................
2023-11-24 16:41:08,973:INFO:SubProcess create_model() end ==================================
2023-11-24 16:41:08,973:INFO:Creating metrics dataframe
2023-11-24 16:41:08,975:INFO:Initializing Extra Trees Classifier
2023-11-24 16:41:08,975:INFO:Total runtime is 0.44114050070444744 minutes
2023-11-24 16:41:08,975:INFO:SubProcess create_model() called ==================================
2023-11-24 16:41:08,975:INFO:Initializing create_model()
2023-11-24 16:41:08,975:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28ea7ef10>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2a642b7d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:41:08,975:INFO:Checking exceptions
2023-11-24 16:41:08,975:INFO:Importing libraries
2023-11-24 16:41:08,975:INFO:Copying training dataset
2023-11-24 16:41:08,978:INFO:Defining folds
2023-11-24 16:41:08,978:INFO:Declaring metric variables
2023-11-24 16:41:08,978:INFO:Importing untrained model
2023-11-24 16:41:08,978:INFO:Extra Trees Classifier Imported successfully
2023-11-24 16:41:08,978:INFO:Starting cross validation
2023-11-24 16:41:08,979:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:41:10,595:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:10,598:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:10,599:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:41:10,600:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:11,261:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:11,263:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:11,265:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:41:11,266:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:11,267:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:11,269:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:11,271:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:41:11,272:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:11,295:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:11,298:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:11,300:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:41:11,300:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:11,301:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:11,302:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:11,304:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:41:11,305:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:11,306:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:11,306:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:11,307:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:11,307:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:11,309:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:11,309:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:11,309:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:11,310:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:41:11,310:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:11,311:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:41:11,311:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:11,311:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:11,312:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:11,314:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:41:11,315:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:11,315:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:11,318:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:11,320:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:11,323:INFO:Calculating mean and std
2023-11-24 16:41:11,323:INFO:Creating metrics dataframe
2023-11-24 16:41:11,325:INFO:Uploading results into container
2023-11-24 16:41:11,325:INFO:Uploading model into container now
2023-11-24 16:41:11,325:INFO:_master_model_container: 12
2023-11-24 16:41:11,325:INFO:_display_container: 2
2023-11-24 16:41:11,325:INFO:ExtraTreesClassifier(n_jobs=-1, random_state=8276)
2023-11-24 16:41:11,325:INFO:create_model() successfully completed......................................
2023-11-24 16:41:11,416:INFO:SubProcess create_model() end ==================================
2023-11-24 16:41:11,416:INFO:Creating metrics dataframe
2023-11-24 16:41:11,417:INFO:Initializing Extreme Gradient Boosting
2023-11-24 16:41:11,417:INFO:Total runtime is 0.48185179630915326 minutes
2023-11-24 16:41:11,417:INFO:SubProcess create_model() called ==================================
2023-11-24 16:41:11,418:INFO:Initializing create_model()
2023-11-24 16:41:11,418:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28ea7ef10>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2a642b7d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:41:11,418:INFO:Checking exceptions
2023-11-24 16:41:11,418:INFO:Importing libraries
2023-11-24 16:41:11,418:INFO:Copying training dataset
2023-11-24 16:41:11,420:INFO:Defining folds
2023-11-24 16:41:11,420:INFO:Declaring metric variables
2023-11-24 16:41:11,420:INFO:Importing untrained model
2023-11-24 16:41:11,420:INFO:Extreme Gradient Boosting Imported successfully
2023-11-24 16:41:11,420:INFO:Starting cross validation
2023-11-24 16:41:11,422:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:41:28,343:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:28,345:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:28,348:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:28,436:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:28,439:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:28,441:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:28,462:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:28,464:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:28,466:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:28,521:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:28,523:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:28,525:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:28,676:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:28,679:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:28,681:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:28,745:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:28,747:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:28,748:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:28,750:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:28,750:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:28,753:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:28,757:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:28,757:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:28,759:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:28,760:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:28,761:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:28,762:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:28,792:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:28,795:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:28,797:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:28,801:INFO:Calculating mean and std
2023-11-24 16:41:28,802:INFO:Creating metrics dataframe
2023-11-24 16:41:28,803:INFO:Uploading results into container
2023-11-24 16:41:28,803:INFO:Uploading model into container now
2023-11-24 16:41:28,803:INFO:_master_model_container: 13
2023-11-24 16:41:28,803:INFO:_display_container: 2
2023-11-24 16:41:28,804:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              predictor=None, random_state=8276, ...)
2023-11-24 16:41:28,804:INFO:create_model() successfully completed......................................
2023-11-24 16:41:28,889:INFO:SubProcess create_model() end ==================================
2023-11-24 16:41:28,889:INFO:Creating metrics dataframe
2023-11-24 16:41:28,890:INFO:Initializing Light Gradient Boosting Machine
2023-11-24 16:41:28,890:INFO:Total runtime is 0.7730690320332845 minutes
2023-11-24 16:41:28,890:INFO:SubProcess create_model() called ==================================
2023-11-24 16:41:28,891:INFO:Initializing create_model()
2023-11-24 16:41:28,891:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28ea7ef10>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2a642b7d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:41:28,891:INFO:Checking exceptions
2023-11-24 16:41:28,891:INFO:Importing libraries
2023-11-24 16:41:28,891:INFO:Copying training dataset
2023-11-24 16:41:28,893:INFO:Defining folds
2023-11-24 16:41:28,893:INFO:Declaring metric variables
2023-11-24 16:41:28,893:INFO:Importing untrained model
2023-11-24 16:41:28,893:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-24 16:41:28,893:INFO:Starting cross validation
2023-11-24 16:41:28,894:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:41:29,576:WARNING:create_model() for lightgbm raised an exception or returned all 0.0, trying without fit_kwargs:
2023-11-24 16:41:29,576:WARNING:Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/sklearn.py", line 1142, in fit
    super().fit(
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/sklearn.py", line 842, in fit
    self._Booster = train(
                    ^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/engine.py", line 255, in train
    booster = Booster(params=params, train_set=train_set)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 3200, in __init__
    train_set.construct()
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 2276, in construct
    self._lazy_init(data=self.data, label=self.label, reference=None,
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 1959, in _lazy_init
    return self.set_feature_name(feature_name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 2639, in set_feature_name
    _safe_call(_LIB.LGBM_DatasetSetFeatureNames(
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 242, in _safe_call
    raise LightGBMError(_LIB.LGBM_GetLastError().decode('utf-8'))
lightgbm.basic.LightGBMError: Do not support special JSON characters in feature name.


2023-11-24 16:41:29,576:INFO:Initializing create_model()
2023-11-24 16:41:29,576:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28ea7ef10>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2a642b7d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:41:29,576:INFO:Checking exceptions
2023-11-24 16:41:29,576:INFO:Importing libraries
2023-11-24 16:41:29,576:INFO:Copying training dataset
2023-11-24 16:41:29,579:INFO:Defining folds
2023-11-24 16:41:29,579:INFO:Declaring metric variables
2023-11-24 16:41:29,579:INFO:Importing untrained model
2023-11-24 16:41:29,579:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-24 16:41:29,579:INFO:Starting cross validation
2023-11-24 16:41:29,581:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:41:30,253:ERROR:create_model() for lightgbm raised an exception or returned all 0.0:
2023-11-24 16:41:30,254:ERROR:Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/sklearn.py", line 1142, in fit
    super().fit(
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/sklearn.py", line 842, in fit
    self._Booster = train(
                    ^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/engine.py", line 255, in train
    booster = Booster(params=params, train_set=train_set)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 3200, in __init__
    train_set.construct()
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 2276, in construct
    self._lazy_init(data=self.data, label=self.label, reference=None,
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 1959, in _lazy_init
    return self.set_feature_name(feature_name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 2639, in set_feature_name
    _safe_call(_LIB.LGBM_DatasetSetFeatureNames(
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 242, in _safe_call
    raise LightGBMError(_LIB.LGBM_GetLastError().decode('utf-8'))
lightgbm.basic.LightGBMError: Do not support special JSON characters in feature name.


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/sklearn.py", line 1142, in fit
    super().fit(
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/sklearn.py", line 842, in fit
    self._Booster = train(
                    ^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/engine.py", line 255, in train
    booster = Booster(params=params, train_set=train_set)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 3200, in __init__
    train_set.construct()
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 2276, in construct
    self._lazy_init(data=self.data, label=self.label, reference=None,
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 1959, in _lazy_init
    return self.set_feature_name(feature_name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 2639, in set_feature_name
    _safe_call(_LIB.LGBM_DatasetSetFeatureNames(
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 242, in _safe_call
    raise LightGBMError(_LIB.LGBM_GetLastError().decode('utf-8'))
lightgbm.basic.LightGBMError: Do not support special JSON characters in feature name.


2023-11-24 16:41:30,254:INFO:Initializing Dummy Classifier
2023-11-24 16:41:30,254:INFO:Total runtime is 0.7958028157552083 minutes
2023-11-24 16:41:30,255:INFO:SubProcess create_model() called ==================================
2023-11-24 16:41:30,255:INFO:Initializing create_model()
2023-11-24 16:41:30,255:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28ea7ef10>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2a642b7d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:41:30,255:INFO:Checking exceptions
2023-11-24 16:41:30,255:INFO:Importing libraries
2023-11-24 16:41:30,255:INFO:Copying training dataset
2023-11-24 16:41:30,258:INFO:Defining folds
2023-11-24 16:41:30,258:INFO:Declaring metric variables
2023-11-24 16:41:30,258:INFO:Importing untrained model
2023-11-24 16:41:30,258:INFO:Dummy Classifier Imported successfully
2023-11-24 16:41:30,258:INFO:Starting cross validation
2023-11-24 16:41:30,259:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:41:30,910:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:30,913:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:30,915:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:41:30,915:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:30,916:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:30,918:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:30,919:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:41:30,919:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:30,920:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:30,923:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:30,927:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:41:30,929:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:30,946:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:30,948:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:30,948:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:30,949:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:41:30,950:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:30,950:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:30,951:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:41:30,952:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:30,960:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:30,962:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:30,964:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:41:30,965:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:30,966:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:30,968:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:30,968:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:30,969:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:41:30,970:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:30,971:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:30,972:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:41:30,973:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:30,977:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:30,979:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:30,981:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:41:30,982:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:30,983:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:30,985:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:30,986:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:41:30,987:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:41:30,991:INFO:Calculating mean and std
2023-11-24 16:41:30,991:INFO:Creating metrics dataframe
2023-11-24 16:41:30,992:INFO:Uploading results into container
2023-11-24 16:41:30,993:INFO:Uploading model into container now
2023-11-24 16:41:30,993:INFO:_master_model_container: 14
2023-11-24 16:41:30,993:INFO:_display_container: 2
2023-11-24 16:41:30,993:INFO:DummyClassifier(random_state=8276)
2023-11-24 16:41:30,993:INFO:create_model() successfully completed......................................
2023-11-24 16:41:31,085:INFO:SubProcess create_model() end ==================================
2023-11-24 16:41:31,085:INFO:Creating metrics dataframe
2023-11-24 16:41:31,088:INFO:Initializing create_model()
2023-11-24 16:41:31,088:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28ea7ef10>, estimator=GradientBoostingClassifier(random_state=8276), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:41:31,088:INFO:Checking exceptions
2023-11-24 16:41:31,088:INFO:Importing libraries
2023-11-24 16:41:31,088:INFO:Copying training dataset
2023-11-24 16:41:31,090:INFO:Defining folds
2023-11-24 16:41:31,090:INFO:Declaring metric variables
2023-11-24 16:41:31,090:INFO:Importing untrained model
2023-11-24 16:41:31,090:INFO:Declaring custom model
2023-11-24 16:41:31,091:INFO:Gradient Boosting Classifier Imported successfully
2023-11-24 16:41:31,092:INFO:Cross validation set to False
2023-11-24 16:41:31,092:INFO:Fitting Model
2023-11-24 16:41:36,272:INFO:GradientBoostingClassifier(random_state=8276)
2023-11-24 16:41:36,272:INFO:create_model() successfully completed......................................
2023-11-24 16:41:36,361:INFO:_master_model_container: 14
2023-11-24 16:41:36,361:INFO:_display_container: 2
2023-11-24 16:41:36,361:INFO:GradientBoostingClassifier(random_state=8276)
2023-11-24 16:41:36,361:INFO:compare_models() successfully completed......................................
2023-11-24 16:41:36,366:INFO:Initializing save_model()
2023-11-24 16:41:36,366:INFO:save_model(model=GradientBoostingClassifier(random_state=8276), model_name=best_model, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/46/tcczvndd7xj_pqs5r176bl600000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Number_of_vehicles_involved',
                                             'Number_of_casualties'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrappe...
                                                                    'Vehicle_movement',
                                                                    'Casualty_class',
                                                                    'Sex_of_casualty',
                                                                    'Age_band_of_casualty',
                                                                    'Casualty_severity',
                                                                    'Work_of_casuality',
                                                                    'Fitness_of_casuality',
                                                                    'Pedestrian_movement',
                                                                    'Cause_of_accident'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['Time'],
                                    transformer=TargetEncoder(cols=['Time'],
                                                              handle_missing='return_nan')))]), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-11-24 16:41:36,366:INFO:Adding model into prep_pipe
2023-11-24 16:41:36,385:INFO:best_model.pkl saved in current working directory
2023-11-24 16:41:36,389:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Number_of_vehicles_involved',
                                             'Number_of_casualties'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Time', 'Day_of_week',
                                             'Age_band_of_driver',
                                             'S...
                                                                    'Age_band_of_casualty',
                                                                    'Casualty_severity',
                                                                    'Work_of_casuality',
                                                                    'Fitness_of_casuality',
                                                                    'Pedestrian_movement',
                                                                    'Cause_of_accident'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['Time'],
                                    transformer=TargetEncoder(cols=['Time'],
                                                              handle_missing='return_nan'))),
                ('trained_model',
                 GradientBoostingClassifier(random_state=8276))])
2023-11-24 16:41:36,390:INFO:save_model() successfully completed......................................
2023-11-24 16:47:35,506:INFO:PyCaret RegressionExperiment
2023-11-24 16:47:35,506:INFO:Logging name: reg-default-name
2023-11-24 16:47:35,506:INFO:ML Usecase: MLUsecase.REGRESSION
2023-11-24 16:47:35,506:INFO:version 3.2.0
2023-11-24 16:47:35,506:INFO:Initializing setup()
2023-11-24 16:47:35,506:INFO:self.USI: e58c
2023-11-24 16:47:35,506:INFO:self._variable_keys: {'_available_plots', 'fold_shuffle_param', 'exp_id', 'y_test', 'y_train', 'n_jobs_param', 'memory', 'log_plots_param', 'html_param', 'gpu_param', '_ml_usecase', 'idx', 'pipeline', 'seed', 'X_test', 'transform_target_param', 'logging_param', 'data', 'fold_generator', 'exp_name_log', 'USI', 'X', 'fold_groups_param', 'X_train', 'y', 'gpu_n_jobs_param', 'target_param'}
2023-11-24 16:47:35,506:INFO:Checking environment
2023-11-24 16:47:35,506:INFO:python_version: 3.11.5
2023-11-24 16:47:35,506:INFO:python_build: ('main', 'Sep 11 2023 08:31:25')
2023-11-24 16:47:35,506:INFO:machine: arm64
2023-11-24 16:47:35,506:INFO:platform: macOS-14.0-arm64-arm-64bit
2023-11-24 16:47:35,507:INFO:Memory: svmem(total=17179869184, available=5456510976, percent=68.2, used=6280069120, free=1174683648, active=4302798848, inactive=4269260800, wired=1977270272)
2023-11-24 16:47:35,507:INFO:Physical Core: 10
2023-11-24 16:47:35,507:INFO:Logical Core: 10
2023-11-24 16:47:35,507:INFO:Checking libraries
2023-11-24 16:47:35,507:INFO:System:
2023-11-24 16:47:35,507:INFO:    python: 3.11.5 (main, Sep 11 2023, 08:31:25) [Clang 14.0.6 ]
2023-11-24 16:47:35,507:INFO:executable: /Users/saiakhil/anaconda3/envs/mlauto/bin/python
2023-11-24 16:47:35,507:INFO:   machine: macOS-14.0-arm64-arm-64bit
2023-11-24 16:47:35,507:INFO:PyCaret required dependencies:
2023-11-24 16:47:35,507:INFO:                 pip: 23.3.1
2023-11-24 16:47:35,507:INFO:          setuptools: 68.0.0
2023-11-24 16:47:35,507:INFO:             pycaret: 3.2.0
2023-11-24 16:47:35,507:INFO:             IPython: 8.15.0
2023-11-24 16:47:35,507:INFO:          ipywidgets: 8.1.1
2023-11-24 16:47:35,507:INFO:                tqdm: 4.66.1
2023-11-24 16:47:35,507:INFO:               numpy: 1.25.2
2023-11-24 16:47:35,507:INFO:              pandas: 1.5.3
2023-11-24 16:47:35,507:INFO:              jinja2: 3.1.2
2023-11-24 16:47:35,507:INFO:               scipy: 1.11.3
2023-11-24 16:47:35,507:INFO:              joblib: 1.3.2
2023-11-24 16:47:35,507:INFO:             sklearn: 1.2.2
2023-11-24 16:47:35,507:INFO:                pyod: 1.1.2
2023-11-24 16:47:35,507:INFO:            imblearn: 0.11.0
2023-11-24 16:47:35,507:INFO:   category_encoders: 2.6.3
2023-11-24 16:47:35,507:INFO:            lightgbm: 4.1.0
2023-11-24 16:47:35,507:INFO:               numba: 0.58.1
2023-11-24 16:47:35,507:INFO:            requests: 2.31.0
2023-11-24 16:47:35,507:INFO:          matplotlib: 3.6.0
2023-11-24 16:47:35,507:INFO:          scikitplot: 0.3.7
2023-11-24 16:47:35,507:INFO:         yellowbrick: 1.5
2023-11-24 16:47:35,507:INFO:              plotly: 5.18.0
2023-11-24 16:47:35,507:INFO:    plotly-resampler: Not installed
2023-11-24 16:47:35,507:INFO:             kaleido: 0.2.1
2023-11-24 16:47:35,507:INFO:           schemdraw: 0.15
2023-11-24 16:47:35,507:INFO:         statsmodels: 0.14.0
2023-11-24 16:47:35,507:INFO:              sktime: 0.21.1
2023-11-24 16:47:35,507:INFO:               tbats: 1.1.3
2023-11-24 16:47:35,507:INFO:            pmdarima: 2.0.4
2023-11-24 16:47:35,507:INFO:              psutil: 5.9.6
2023-11-24 16:47:35,507:INFO:          markupsafe: 2.1.3
2023-11-24 16:47:35,507:INFO:             pickle5: Not installed
2023-11-24 16:47:35,507:INFO:         cloudpickle: 3.0.0
2023-11-24 16:47:35,507:INFO:         deprecation: 2.1.0
2023-11-24 16:47:35,507:INFO:              xxhash: 3.4.1
2023-11-24 16:47:35,507:INFO:           wurlitzer: 3.0.3
2023-11-24 16:47:35,507:INFO:PyCaret optional dependencies:
2023-11-24 16:47:35,507:INFO:                shap: Not installed
2023-11-24 16:47:35,507:INFO:           interpret: Not installed
2023-11-24 16:47:35,507:INFO:                umap: Not installed
2023-11-24 16:47:35,507:INFO:     ydata_profiling: 4.6.2
2023-11-24 16:47:35,507:INFO:  explainerdashboard: Not installed
2023-11-24 16:47:35,507:INFO:             autoviz: Not installed
2023-11-24 16:47:35,507:INFO:           fairlearn: Not installed
2023-11-24 16:47:35,507:INFO:          deepchecks: Not installed
2023-11-24 16:47:35,507:INFO:             xgboost: 1.7.3
2023-11-24 16:47:35,507:INFO:            catboost: Not installed
2023-11-24 16:47:35,507:INFO:              kmodes: Not installed
2023-11-24 16:47:35,507:INFO:             mlxtend: Not installed
2023-11-24 16:47:35,507:INFO:       statsforecast: Not installed
2023-11-24 16:47:35,507:INFO:        tune_sklearn: Not installed
2023-11-24 16:47:35,507:INFO:                 ray: Not installed
2023-11-24 16:47:35,507:INFO:            hyperopt: Not installed
2023-11-24 16:47:35,507:INFO:              optuna: Not installed
2023-11-24 16:47:35,507:INFO:               skopt: Not installed
2023-11-24 16:47:35,507:INFO:              mlflow: Not installed
2023-11-24 16:47:35,507:INFO:              gradio: Not installed
2023-11-24 16:47:35,507:INFO:             fastapi: Not installed
2023-11-24 16:47:35,507:INFO:             uvicorn: Not installed
2023-11-24 16:47:35,507:INFO:              m2cgen: Not installed
2023-11-24 16:47:35,507:INFO:           evidently: Not installed
2023-11-24 16:47:35,507:INFO:               fugue: Not installed
2023-11-24 16:47:35,507:INFO:           streamlit: 1.28.2
2023-11-24 16:47:35,507:INFO:             prophet: Not installed
2023-11-24 16:47:35,507:INFO:None
2023-11-24 16:47:35,507:INFO:Set up data.
2023-11-24 16:47:35,530:INFO:Set up folding strategy.
2023-11-24 16:47:35,530:INFO:Set up train/test split.
2023-11-24 16:47:35,534:INFO:Set up index.
2023-11-24 16:47:35,534:INFO:Assigning column types.
2023-11-24 16:47:35,535:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-24 16:47:35,535:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-11-24 16:47:35,537:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-24 16:47:35,539:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-24 16:47:35,563:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 16:47:35,579:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 16:47:35,580:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:47:35,580:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:47:35,581:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-11-24 16:47:35,582:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-24 16:47:35,584:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-24 16:47:35,606:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 16:47:35,623:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 16:47:35,623:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:47:35,624:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:47:35,624:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-11-24 16:47:35,626:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-24 16:47:35,628:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-24 16:47:35,650:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 16:47:35,668:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 16:47:35,668:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:47:35,669:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:47:35,671:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-24 16:47:35,673:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-24 16:47:35,696:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 16:47:35,713:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 16:47:35,713:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:47:35,714:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:47:35,714:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-11-24 16:47:35,718:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-24 16:47:35,741:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 16:47:35,758:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 16:47:35,758:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:47:35,759:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:47:35,763:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-24 16:47:35,786:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 16:47:35,804:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 16:47:35,804:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:47:35,805:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:47:35,805:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-11-24 16:47:35,833:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 16:47:35,851:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 16:47:35,851:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:47:35,852:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:47:35,879:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 16:47:35,897:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 16:47:35,897:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:47:35,898:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:47:35,898:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-11-24 16:47:35,925:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 16:47:35,943:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:47:35,944:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:47:35,971:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 16:47:35,989:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:47:35,990:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:47:35,990:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-11-24 16:47:36,037:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:47:36,038:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:47:36,082:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:47:36,083:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:47:36,083:INFO:Preparing preprocessing pipeline...
2023-11-24 16:47:36,083:INFO:Set up simple imputation.
2023-11-24 16:47:36,086:INFO:Set up encoding of categorical features.
2023-11-24 16:47:40,413:INFO:PyCaret ClassificationExperiment
2023-11-24 16:47:40,413:INFO:Logging name: clf-default-name
2023-11-24 16:47:40,413:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-11-24 16:47:40,413:INFO:version 3.2.0
2023-11-24 16:47:40,413:INFO:Initializing setup()
2023-11-24 16:47:40,413:INFO:self.USI: 8d32
2023-11-24 16:47:40,413:INFO:self._variable_keys: {'_available_plots', 'fix_imbalance', 'fold_shuffle_param', 'exp_id', 'y_test', 'y_train', 'n_jobs_param', 'memory', 'log_plots_param', 'html_param', 'gpu_param', '_ml_usecase', 'idx', 'pipeline', 'is_multiclass', 'seed', 'X_test', 'logging_param', 'data', 'fold_generator', 'exp_name_log', 'USI', 'X', 'fold_groups_param', 'X_train', 'y', 'gpu_n_jobs_param', 'target_param'}
2023-11-24 16:47:40,413:INFO:Checking environment
2023-11-24 16:47:40,413:INFO:python_version: 3.11.5
2023-11-24 16:47:40,413:INFO:python_build: ('main', 'Sep 11 2023 08:31:25')
2023-11-24 16:47:40,413:INFO:machine: arm64
2023-11-24 16:47:40,413:INFO:platform: macOS-14.0-arm64-arm-64bit
2023-11-24 16:47:40,413:INFO:Memory: svmem(total=17179869184, available=5392875520, percent=68.6, used=6373851136, free=998391808, active=4410736640, inactive=4380852224, wired=1963114496)
2023-11-24 16:47:40,413:INFO:Physical Core: 10
2023-11-24 16:47:40,413:INFO:Logical Core: 10
2023-11-24 16:47:40,413:INFO:Checking libraries
2023-11-24 16:47:40,413:INFO:System:
2023-11-24 16:47:40,413:INFO:    python: 3.11.5 (main, Sep 11 2023, 08:31:25) [Clang 14.0.6 ]
2023-11-24 16:47:40,413:INFO:executable: /Users/saiakhil/anaconda3/envs/mlauto/bin/python
2023-11-24 16:47:40,413:INFO:   machine: macOS-14.0-arm64-arm-64bit
2023-11-24 16:47:40,413:INFO:PyCaret required dependencies:
2023-11-24 16:47:40,413:INFO:                 pip: 23.3.1
2023-11-24 16:47:40,414:INFO:          setuptools: 68.0.0
2023-11-24 16:47:40,414:INFO:             pycaret: 3.2.0
2023-11-24 16:47:40,414:INFO:             IPython: 8.15.0
2023-11-24 16:47:40,414:INFO:          ipywidgets: 8.1.1
2023-11-24 16:47:40,414:INFO:                tqdm: 4.66.1
2023-11-24 16:47:40,414:INFO:               numpy: 1.25.2
2023-11-24 16:47:40,414:INFO:              pandas: 1.5.3
2023-11-24 16:47:40,414:INFO:              jinja2: 3.1.2
2023-11-24 16:47:40,414:INFO:               scipy: 1.11.3
2023-11-24 16:47:40,414:INFO:              joblib: 1.3.2
2023-11-24 16:47:40,414:INFO:             sklearn: 1.2.2
2023-11-24 16:47:40,414:INFO:                pyod: 1.1.2
2023-11-24 16:47:40,414:INFO:            imblearn: 0.11.0
2023-11-24 16:47:40,414:INFO:   category_encoders: 2.6.3
2023-11-24 16:47:40,414:INFO:            lightgbm: 4.1.0
2023-11-24 16:47:40,414:INFO:               numba: 0.58.1
2023-11-24 16:47:40,414:INFO:            requests: 2.31.0
2023-11-24 16:47:40,414:INFO:          matplotlib: 3.6.0
2023-11-24 16:47:40,414:INFO:          scikitplot: 0.3.7
2023-11-24 16:47:40,414:INFO:         yellowbrick: 1.5
2023-11-24 16:47:40,414:INFO:              plotly: 5.18.0
2023-11-24 16:47:40,414:INFO:    plotly-resampler: Not installed
2023-11-24 16:47:40,414:INFO:             kaleido: 0.2.1
2023-11-24 16:47:40,414:INFO:           schemdraw: 0.15
2023-11-24 16:47:40,414:INFO:         statsmodels: 0.14.0
2023-11-24 16:47:40,414:INFO:              sktime: 0.21.1
2023-11-24 16:47:40,414:INFO:               tbats: 1.1.3
2023-11-24 16:47:40,414:INFO:            pmdarima: 2.0.4
2023-11-24 16:47:40,414:INFO:              psutil: 5.9.6
2023-11-24 16:47:40,414:INFO:          markupsafe: 2.1.3
2023-11-24 16:47:40,414:INFO:             pickle5: Not installed
2023-11-24 16:47:40,414:INFO:         cloudpickle: 3.0.0
2023-11-24 16:47:40,414:INFO:         deprecation: 2.1.0
2023-11-24 16:47:40,414:INFO:              xxhash: 3.4.1
2023-11-24 16:47:40,414:INFO:           wurlitzer: 3.0.3
2023-11-24 16:47:40,414:INFO:PyCaret optional dependencies:
2023-11-24 16:47:40,414:INFO:                shap: Not installed
2023-11-24 16:47:40,414:INFO:           interpret: Not installed
2023-11-24 16:47:40,414:INFO:                umap: Not installed
2023-11-24 16:47:40,414:INFO:     ydata_profiling: 4.6.2
2023-11-24 16:47:40,414:INFO:  explainerdashboard: Not installed
2023-11-24 16:47:40,414:INFO:             autoviz: Not installed
2023-11-24 16:47:40,414:INFO:           fairlearn: Not installed
2023-11-24 16:47:40,414:INFO:          deepchecks: Not installed
2023-11-24 16:47:40,414:INFO:             xgboost: 1.7.3
2023-11-24 16:47:40,414:INFO:            catboost: Not installed
2023-11-24 16:47:40,414:INFO:              kmodes: Not installed
2023-11-24 16:47:40,414:INFO:             mlxtend: Not installed
2023-11-24 16:47:40,414:INFO:       statsforecast: Not installed
2023-11-24 16:47:40,414:INFO:        tune_sklearn: Not installed
2023-11-24 16:47:40,414:INFO:                 ray: Not installed
2023-11-24 16:47:40,414:INFO:            hyperopt: Not installed
2023-11-24 16:47:40,414:INFO:              optuna: Not installed
2023-11-24 16:47:40,414:INFO:               skopt: Not installed
2023-11-24 16:47:40,414:INFO:              mlflow: Not installed
2023-11-24 16:47:40,414:INFO:              gradio: Not installed
2023-11-24 16:47:40,414:INFO:             fastapi: Not installed
2023-11-24 16:47:40,414:INFO:             uvicorn: Not installed
2023-11-24 16:47:40,414:INFO:              m2cgen: Not installed
2023-11-24 16:47:40,414:INFO:           evidently: Not installed
2023-11-24 16:47:40,414:INFO:               fugue: Not installed
2023-11-24 16:47:40,414:INFO:           streamlit: 1.28.2
2023-11-24 16:47:40,414:INFO:             prophet: Not installed
2023-11-24 16:47:40,414:INFO:None
2023-11-24 16:47:40,414:INFO:Set up data.
2023-11-24 16:47:40,438:INFO:Set up folding strategy.
2023-11-24 16:47:40,438:INFO:Set up train/test split.
2023-11-24 16:47:40,445:INFO:Set up index.
2023-11-24 16:47:40,445:INFO:Assigning column types.
2023-11-24 16:47:40,446:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-24 16:47:40,463:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 16:47:40,463:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:47:40,474:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:47:40,475:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:47:40,492:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 16:47:40,493:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:47:40,503:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:47:40,504:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:47:40,505:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-11-24 16:47:40,522:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:47:40,532:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:47:40,533:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:47:40,550:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:47:40,561:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:47:40,562:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:47:40,562:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-11-24 16:47:40,590:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:47:40,591:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:47:40,619:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:47:40,620:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:47:40,620:INFO:Preparing preprocessing pipeline...
2023-11-24 16:47:40,620:INFO:Set up label encoding.
2023-11-24 16:47:40,620:INFO:Set up simple imputation.
2023-11-24 16:47:40,623:INFO:Set up encoding of categorical features.
2023-11-24 16:47:40,977:INFO:Finished creating preprocessing pipeline.
2023-11-24 16:47:40,980:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/46/tcczvndd7xj_pqs5r176bl600000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Number_of_vehicles_involved',
                                             'Number_of_casualties'],
                                    transformer=SimpleImputer(add_i...
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['Time'],
                                    transformer=TargetEncoder(cols=['Time'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2023-11-24 16:47:40,980:INFO:Creating final display dataframe.
2023-11-24 16:47:41,420:INFO:Setup _display_container:                     Description                                              Value
0                    Session id                                               3002
1                        Target                                  Accident_severity
2                   Target type                                         Multiclass
3                Target mapping  Fatal injury: 0, Serious Injury: 1, Slight Inj...
4           Original data shape                                        (12316, 32)
5        Transformed data shape                                       (12316, 208)
6   Transformed train set shape                                        (8621, 208)
7    Transformed test set shape                                        (3695, 208)
8              Numeric features                                                  2
9          Categorical features                                                 29
10     Rows with missing values                                              76.5%
11                   Preprocess                                               True
12              Imputation type                                             simple
13           Numeric imputation                                               mean
14       Categorical imputation                                               mode
15     Maximum one-hot encoding                                                 25
16              Encoding method                                               None
17               Fold Generator                                    StratifiedKFold
18                  Fold Number                                                 10
19                     CPU Jobs                                                 -1
20                      Use GPU                                              False
21               Log Experiment                                              False
22              Experiment Name                                   clf-default-name
23                          USI                                               8d32
2023-11-24 16:47:41,449:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:47:41,450:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:47:41,478:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:47:41,479:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:47:41,479:INFO:setup() successfully completed in 1.07s...............
2023-11-24 16:49:25,523:INFO:PyCaret RegressionExperiment
2023-11-24 16:49:25,523:INFO:Logging name: reg-default-name
2023-11-24 16:49:25,523:INFO:ML Usecase: MLUsecase.REGRESSION
2023-11-24 16:49:25,523:INFO:version 3.2.0
2023-11-24 16:49:25,523:INFO:Initializing setup()
2023-11-24 16:49:25,523:INFO:self.USI: 99e6
2023-11-24 16:49:25,523:INFO:self._variable_keys: {'_available_plots', 'fold_shuffle_param', 'exp_id', 'y_test', 'y_train', 'n_jobs_param', 'memory', 'log_plots_param', 'html_param', 'gpu_param', '_ml_usecase', 'idx', 'pipeline', 'seed', 'X_test', 'transform_target_param', 'logging_param', 'data', 'fold_generator', 'exp_name_log', 'USI', 'X', 'fold_groups_param', 'X_train', 'y', 'gpu_n_jobs_param', 'target_param'}
2023-11-24 16:49:25,523:INFO:Checking environment
2023-11-24 16:49:25,523:INFO:python_version: 3.11.5
2023-11-24 16:49:25,523:INFO:python_build: ('main', 'Sep 11 2023 08:31:25')
2023-11-24 16:49:25,523:INFO:machine: arm64
2023-11-24 16:49:25,523:INFO:platform: macOS-14.0-arm64-arm-64bit
2023-11-24 16:49:25,523:INFO:Memory: svmem(total=17179869184, available=4999446528, percent=70.9, used=6916243456, free=66486272, active=4960436224, inactive=4930322432, wired=1955807232)
2023-11-24 16:49:25,523:INFO:Physical Core: 10
2023-11-24 16:49:25,523:INFO:Logical Core: 10
2023-11-24 16:49:25,523:INFO:Checking libraries
2023-11-24 16:49:25,523:INFO:System:
2023-11-24 16:49:25,523:INFO:    python: 3.11.5 (main, Sep 11 2023, 08:31:25) [Clang 14.0.6 ]
2023-11-24 16:49:25,523:INFO:executable: /Users/saiakhil/anaconda3/envs/mlauto/bin/python
2023-11-24 16:49:25,523:INFO:   machine: macOS-14.0-arm64-arm-64bit
2023-11-24 16:49:25,523:INFO:PyCaret required dependencies:
2023-11-24 16:49:25,523:INFO:                 pip: 23.3.1
2023-11-24 16:49:25,523:INFO:          setuptools: 68.0.0
2023-11-24 16:49:25,523:INFO:             pycaret: 3.2.0
2023-11-24 16:49:25,523:INFO:             IPython: 8.15.0
2023-11-24 16:49:25,523:INFO:          ipywidgets: 8.1.1
2023-11-24 16:49:25,523:INFO:                tqdm: 4.66.1
2023-11-24 16:49:25,523:INFO:               numpy: 1.25.2
2023-11-24 16:49:25,523:INFO:              pandas: 1.5.3
2023-11-24 16:49:25,523:INFO:              jinja2: 3.1.2
2023-11-24 16:49:25,523:INFO:               scipy: 1.11.3
2023-11-24 16:49:25,523:INFO:              joblib: 1.3.2
2023-11-24 16:49:25,523:INFO:             sklearn: 1.2.2
2023-11-24 16:49:25,523:INFO:                pyod: 1.1.2
2023-11-24 16:49:25,523:INFO:            imblearn: 0.11.0
2023-11-24 16:49:25,523:INFO:   category_encoders: 2.6.3
2023-11-24 16:49:25,523:INFO:            lightgbm: 4.1.0
2023-11-24 16:49:25,523:INFO:               numba: 0.58.1
2023-11-24 16:49:25,523:INFO:            requests: 2.31.0
2023-11-24 16:49:25,523:INFO:          matplotlib: 3.6.0
2023-11-24 16:49:25,523:INFO:          scikitplot: 0.3.7
2023-11-24 16:49:25,523:INFO:         yellowbrick: 1.5
2023-11-24 16:49:25,523:INFO:              plotly: 5.18.0
2023-11-24 16:49:25,523:INFO:    plotly-resampler: Not installed
2023-11-24 16:49:25,523:INFO:             kaleido: 0.2.1
2023-11-24 16:49:25,523:INFO:           schemdraw: 0.15
2023-11-24 16:49:25,523:INFO:         statsmodels: 0.14.0
2023-11-24 16:49:25,523:INFO:              sktime: 0.21.1
2023-11-24 16:49:25,523:INFO:               tbats: 1.1.3
2023-11-24 16:49:25,523:INFO:            pmdarima: 2.0.4
2023-11-24 16:49:25,523:INFO:              psutil: 5.9.6
2023-11-24 16:49:25,524:INFO:          markupsafe: 2.1.3
2023-11-24 16:49:25,524:INFO:             pickle5: Not installed
2023-11-24 16:49:25,524:INFO:         cloudpickle: 3.0.0
2023-11-24 16:49:25,524:INFO:         deprecation: 2.1.0
2023-11-24 16:49:25,524:INFO:              xxhash: 3.4.1
2023-11-24 16:49:25,524:INFO:           wurlitzer: 3.0.3
2023-11-24 16:49:25,524:INFO:PyCaret optional dependencies:
2023-11-24 16:49:25,524:INFO:                shap: Not installed
2023-11-24 16:49:25,524:INFO:           interpret: Not installed
2023-11-24 16:49:25,524:INFO:                umap: Not installed
2023-11-24 16:49:25,524:INFO:     ydata_profiling: 4.6.2
2023-11-24 16:49:25,524:INFO:  explainerdashboard: Not installed
2023-11-24 16:49:25,524:INFO:             autoviz: Not installed
2023-11-24 16:49:25,524:INFO:           fairlearn: Not installed
2023-11-24 16:49:25,524:INFO:          deepchecks: Not installed
2023-11-24 16:49:25,524:INFO:             xgboost: 1.7.3
2023-11-24 16:49:25,524:INFO:            catboost: Not installed
2023-11-24 16:49:25,524:INFO:              kmodes: Not installed
2023-11-24 16:49:25,524:INFO:             mlxtend: Not installed
2023-11-24 16:49:25,524:INFO:       statsforecast: Not installed
2023-11-24 16:49:25,524:INFO:        tune_sklearn: Not installed
2023-11-24 16:49:25,524:INFO:                 ray: Not installed
2023-11-24 16:49:25,524:INFO:            hyperopt: Not installed
2023-11-24 16:49:25,524:INFO:              optuna: Not installed
2023-11-24 16:49:25,524:INFO:               skopt: Not installed
2023-11-24 16:49:25,524:INFO:              mlflow: Not installed
2023-11-24 16:49:25,524:INFO:              gradio: Not installed
2023-11-24 16:49:25,524:INFO:             fastapi: Not installed
2023-11-24 16:49:25,524:INFO:             uvicorn: Not installed
2023-11-24 16:49:25,524:INFO:              m2cgen: Not installed
2023-11-24 16:49:25,524:INFO:           evidently: Not installed
2023-11-24 16:49:25,524:INFO:               fugue: Not installed
2023-11-24 16:49:25,524:INFO:           streamlit: 1.28.2
2023-11-24 16:49:25,524:INFO:             prophet: Not installed
2023-11-24 16:49:25,524:INFO:None
2023-11-24 16:49:25,524:INFO:Set up data.
2023-11-24 16:49:25,548:INFO:Set up folding strategy.
2023-11-24 16:49:25,548:INFO:Set up train/test split.
2023-11-24 16:49:25,553:INFO:Set up index.
2023-11-24 16:49:25,553:INFO:Assigning column types.
2023-11-24 16:49:25,554:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-24 16:49:25,554:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-11-24 16:49:25,556:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-24 16:49:25,557:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-24 16:49:25,581:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 16:49:25,598:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 16:49:25,598:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:49:25,599:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:49:25,599:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-11-24 16:49:25,601:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-24 16:49:25,602:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-24 16:49:25,626:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 16:49:25,643:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 16:49:25,643:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:49:25,644:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:49:25,644:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-11-24 16:49:25,646:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-24 16:49:25,647:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-24 16:49:25,670:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 16:49:25,688:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 16:49:25,688:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:49:25,689:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:49:25,691:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-24 16:49:25,693:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-24 16:49:25,715:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 16:49:25,732:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 16:49:25,732:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:49:25,733:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:49:25,733:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-11-24 16:49:25,737:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-24 16:49:25,759:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 16:49:25,776:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 16:49:25,776:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:49:25,777:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:49:25,780:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-24 16:49:25,802:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 16:49:25,818:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 16:49:25,819:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:49:25,820:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:49:25,820:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-11-24 16:49:25,845:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 16:49:25,861:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 16:49:25,861:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:49:25,862:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:49:25,888:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 16:49:25,905:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 16:49:25,905:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:49:25,906:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:49:25,906:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-11-24 16:49:25,932:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 16:49:25,950:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:49:25,951:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:49:25,978:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 16:49:25,995:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:49:25,996:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:49:25,996:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-11-24 16:49:26,042:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:49:26,043:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:49:26,086:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:49:26,087:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:49:26,088:INFO:Preparing preprocessing pipeline...
2023-11-24 16:49:26,088:INFO:Set up simple imputation.
2023-11-24 16:49:26,090:INFO:Set up encoding of categorical features.
2023-11-24 16:49:26,336:INFO:Finished creating preprocessing pipeline.
2023-11-24 16:49:26,339:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/46/tcczvndd7xj_pqs5r176bl600000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Number_of_vehicles_involved',
                                             'Number_of_casualties'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Day_of_week',
                                             'Age_band_of_driver',
                                             'Sex_of_driver',
                                             'Educational_le...
                                                                    'Road_surface_type',
                                                                    'Road_surface_conditions',
                                                                    'Light_conditions',
                                                                    'Weather_conditions',
                                                                    'Type_of_collision',
                                                                    'Vehicle_movement',
                                                                    'Casualty_class',
                                                                    'Sex_of_casualty',
                                                                    'Age_band_of_casualty',
                                                                    'Casualty_severity',
                                                                    'Work_of_casuality',
                                                                    'Fitness_of_casuality',
                                                                    'Pedestrian_movement',
                                                                    'Cause_of_accident',
                                                                    'Accident_severity'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True)))])
2023-11-24 16:49:26,339:INFO:Creating final display dataframe.
2023-11-24 16:49:26,747:INFO:Setup _display_container:                     Description             Value
0                    Session id              7426
1                        Target              Time
2                   Target type        Regression
3           Original data shape       (12316, 32)
4        Transformed data shape      (12316, 210)
5   Transformed train set shape       (8621, 210)
6    Transformed test set shape       (3695, 210)
7              Numeric features                 2
8          Categorical features                29
9      Rows with missing values             76.5%
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator             KFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  reg-default-name
22                          USI              99e6
2023-11-24 16:49:26,790:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:49:26,791:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:49:26,834:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:49:26,835:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:49:26,835:INFO:setup() successfully completed in 1.31s...............
2023-11-24 16:49:29,975:INFO:Initializing compare_models()
2023-11-24 16:49:29,975:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x28e4b7bd0>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x28e4b7bd0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2023-11-24 16:49:29,975:INFO:Checking exceptions
2023-11-24 16:49:29,978:INFO:Preparing display monitor
2023-11-24 16:49:29,979:INFO:Initializing Linear Regression
2023-11-24 16:49:29,979:INFO:Total runtime is 6.039937337239583e-07 minutes
2023-11-24 16:49:29,979:INFO:SubProcess create_model() called ==================================
2023-11-24 16:49:29,979:INFO:Initializing create_model()
2023-11-24 16:49:29,979:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28e4b7bd0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28e9c63d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:49:29,979:INFO:Checking exceptions
2023-11-24 16:49:29,979:INFO:Importing libraries
2023-11-24 16:49:29,979:INFO:Copying training dataset
2023-11-24 16:49:29,982:INFO:Defining folds
2023-11-24 16:49:29,982:INFO:Declaring metric variables
2023-11-24 16:49:29,982:INFO:Importing untrained model
2023-11-24 16:49:29,982:INFO:Linear Regression Imported successfully
2023-11-24 16:49:29,982:INFO:Starting cross validation
2023-11-24 16:49:29,983:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:49:32,658:WARNING:create_model() for lr raised an exception or returned all 0.0, trying without fit_kwargs:
2023-11-24 16:49:32,660:WARNING:Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_base.py", line 648, in fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/base.py", line 584, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1122, in check_X_y
    y = _check_y(y, multi_output=multi_output, y_numeric=y_numeric, estimator=estimator)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1147, in _check_y
    y = y.astype(np.float64)
        ^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '12:44:00'

--------------------------------------------------------------------------------
9 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_base.py", line 648, in fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/base.py", line 584, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1122, in check_X_y
    y = _check_y(y, multi_output=multi_output, y_numeric=y_numeric, estimator=estimator)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1147, in _check_y
    y = y.astype(np.float64)
        ^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '10:36:00'


2023-11-24 16:49:32,661:INFO:Initializing create_model()
2023-11-24 16:49:32,661:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28e4b7bd0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28e9c63d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:49:32,661:INFO:Checking exceptions
2023-11-24 16:49:32,661:INFO:Importing libraries
2023-11-24 16:49:32,661:INFO:Copying training dataset
2023-11-24 16:49:32,667:INFO:Defining folds
2023-11-24 16:49:32,667:INFO:Declaring metric variables
2023-11-24 16:49:32,667:INFO:Importing untrained model
2023-11-24 16:49:32,668:INFO:Linear Regression Imported successfully
2023-11-24 16:49:32,668:INFO:Starting cross validation
2023-11-24 16:49:32,671:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:49:33,355:ERROR:create_model() for lr raised an exception or returned all 0.0:
2023-11-24 16:49:33,355:ERROR:Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_base.py", line 648, in fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/base.py", line 584, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1122, in check_X_y
    y = _check_y(y, multi_output=multi_output, y_numeric=y_numeric, estimator=estimator)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1147, in _check_y
    y = y.astype(np.float64)
        ^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '12:44:00'

--------------------------------------------------------------------------------
9 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_base.py", line 648, in fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/base.py", line 584, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1122, in check_X_y
    y = _check_y(y, multi_output=multi_output, y_numeric=y_numeric, estimator=estimator)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1147, in _check_y
    y = y.astype(np.float64)
        ^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '10:36:00'


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_base.py", line 648, in fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/base.py", line 584, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1122, in check_X_y
    y = _check_y(y, multi_output=multi_output, y_numeric=y_numeric, estimator=estimator)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1147, in _check_y
    y = y.astype(np.float64)
        ^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '12:44:00'

--------------------------------------------------------------------------------
9 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_base.py", line 648, in fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/base.py", line 584, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1122, in check_X_y
    y = _check_y(y, multi_output=multi_output, y_numeric=y_numeric, estimator=estimator)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1147, in _check_y
    y = y.astype(np.float64)
        ^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '10:36:00'


2023-11-24 16:49:33,357:INFO:Initializing Lasso Regression
2023-11-24 16:49:33,357:INFO:Total runtime is 0.05629647175470988 minutes
2023-11-24 16:49:33,357:INFO:SubProcess create_model() called ==================================
2023-11-24 16:49:33,357:INFO:Initializing create_model()
2023-11-24 16:49:33,357:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28e4b7bd0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28e9c63d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:49:33,357:INFO:Checking exceptions
2023-11-24 16:49:33,357:INFO:Importing libraries
2023-11-24 16:49:33,357:INFO:Copying training dataset
2023-11-24 16:49:33,360:INFO:Defining folds
2023-11-24 16:49:33,360:INFO:Declaring metric variables
2023-11-24 16:49:33,360:INFO:Importing untrained model
2023-11-24 16:49:33,360:INFO:Lasso Regression Imported successfully
2023-11-24 16:49:33,360:INFO:Starting cross validation
2023-11-24 16:49:33,361:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:49:34,043:WARNING:create_model() for lasso raised an exception or returned all 0.0, trying without fit_kwargs:
2023-11-24 16:49:34,044:WARNING:Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py", line 908, in fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/base.py", line 584, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1122, in check_X_y
    y = _check_y(y, multi_output=multi_output, y_numeric=y_numeric, estimator=estimator)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1147, in _check_y
    y = y.astype(np.float64)
        ^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '12:44:00'

--------------------------------------------------------------------------------
9 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py", line 908, in fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/base.py", line 584, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1122, in check_X_y
    y = _check_y(y, multi_output=multi_output, y_numeric=y_numeric, estimator=estimator)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1147, in _check_y
    y = y.astype(np.float64)
        ^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '10:36:00'


2023-11-24 16:49:34,044:INFO:Initializing create_model()
2023-11-24 16:49:34,044:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28e4b7bd0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28e9c63d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:49:34,044:INFO:Checking exceptions
2023-11-24 16:49:34,044:INFO:Importing libraries
2023-11-24 16:49:34,044:INFO:Copying training dataset
2023-11-24 16:49:34,047:INFO:Defining folds
2023-11-24 16:49:34,047:INFO:Declaring metric variables
2023-11-24 16:49:34,047:INFO:Importing untrained model
2023-11-24 16:49:34,047:INFO:Lasso Regression Imported successfully
2023-11-24 16:49:34,047:INFO:Starting cross validation
2023-11-24 16:49:34,048:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:49:34,693:ERROR:create_model() for lasso raised an exception or returned all 0.0:
2023-11-24 16:49:34,694:ERROR:Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py", line 908, in fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/base.py", line 584, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1122, in check_X_y
    y = _check_y(y, multi_output=multi_output, y_numeric=y_numeric, estimator=estimator)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1147, in _check_y
    y = y.astype(np.float64)
        ^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '12:44:00'

--------------------------------------------------------------------------------
9 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py", line 908, in fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/base.py", line 584, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1122, in check_X_y
    y = _check_y(y, multi_output=multi_output, y_numeric=y_numeric, estimator=estimator)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1147, in _check_y
    y = y.astype(np.float64)
        ^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '10:36:00'


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py", line 908, in fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/base.py", line 584, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1122, in check_X_y
    y = _check_y(y, multi_output=multi_output, y_numeric=y_numeric, estimator=estimator)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1147, in _check_y
    y = y.astype(np.float64)
        ^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '12:44:00'

--------------------------------------------------------------------------------
9 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py", line 908, in fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/base.py", line 584, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1122, in check_X_y
    y = _check_y(y, multi_output=multi_output, y_numeric=y_numeric, estimator=estimator)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1147, in _check_y
    y = y.astype(np.float64)
        ^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '10:36:00'


2023-11-24 16:49:34,694:INFO:Initializing Ridge Regression
2023-11-24 16:49:34,694:INFO:Total runtime is 0.0785805344581604 minutes
2023-11-24 16:49:34,694:INFO:SubProcess create_model() called ==================================
2023-11-24 16:49:34,694:INFO:Initializing create_model()
2023-11-24 16:49:34,694:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28e4b7bd0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28e9c63d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:49:34,694:INFO:Checking exceptions
2023-11-24 16:49:34,694:INFO:Importing libraries
2023-11-24 16:49:34,694:INFO:Copying training dataset
2023-11-24 16:49:34,697:INFO:Defining folds
2023-11-24 16:49:34,697:INFO:Declaring metric variables
2023-11-24 16:49:34,697:INFO:Importing untrained model
2023-11-24 16:49:34,697:INFO:Ridge Regression Imported successfully
2023-11-24 16:49:34,697:INFO:Starting cross validation
2023-11-24 16:49:34,698:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:49:35,298:WARNING:create_model() for ridge raised an exception or returned all 0.0, trying without fit_kwargs:
2023-11-24 16:49:35,298:WARNING:Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_ridge.py", line 1126, in fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/base.py", line 584, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1122, in check_X_y
    y = _check_y(y, multi_output=multi_output, y_numeric=y_numeric, estimator=estimator)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1147, in _check_y
    y = y.astype(np.float64)
        ^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '12:44:00'

--------------------------------------------------------------------------------
9 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_ridge.py", line 1126, in fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/base.py", line 584, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1122, in check_X_y
    y = _check_y(y, multi_output=multi_output, y_numeric=y_numeric, estimator=estimator)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1147, in _check_y
    y = y.astype(np.float64)
        ^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '10:36:00'


2023-11-24 16:49:35,298:INFO:Initializing create_model()
2023-11-24 16:49:35,298:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28e4b7bd0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28e9c63d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:49:35,298:INFO:Checking exceptions
2023-11-24 16:49:35,298:INFO:Importing libraries
2023-11-24 16:49:35,298:INFO:Copying training dataset
2023-11-24 16:49:35,301:INFO:Defining folds
2023-11-24 16:49:35,301:INFO:Declaring metric variables
2023-11-24 16:49:35,301:INFO:Importing untrained model
2023-11-24 16:49:35,301:INFO:Ridge Regression Imported successfully
2023-11-24 16:49:35,301:INFO:Starting cross validation
2023-11-24 16:49:35,302:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:49:35,924:ERROR:create_model() for ridge raised an exception or returned all 0.0:
2023-11-24 16:49:35,925:ERROR:Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_ridge.py", line 1126, in fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/base.py", line 584, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1122, in check_X_y
    y = _check_y(y, multi_output=multi_output, y_numeric=y_numeric, estimator=estimator)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1147, in _check_y
    y = y.astype(np.float64)
        ^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '12:44:00'

--------------------------------------------------------------------------------
9 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_ridge.py", line 1126, in fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/base.py", line 584, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1122, in check_X_y
    y = _check_y(y, multi_output=multi_output, y_numeric=y_numeric, estimator=estimator)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1147, in _check_y
    y = y.astype(np.float64)
        ^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '10:36:00'


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_ridge.py", line 1126, in fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/base.py", line 584, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1122, in check_X_y
    y = _check_y(y, multi_output=multi_output, y_numeric=y_numeric, estimator=estimator)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1147, in _check_y
    y = y.astype(np.float64)
        ^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '12:44:00'

--------------------------------------------------------------------------------
9 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_ridge.py", line 1126, in fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/base.py", line 584, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1122, in check_X_y
    y = _check_y(y, multi_output=multi_output, y_numeric=y_numeric, estimator=estimator)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1147, in _check_y
    y = y.astype(np.float64)
        ^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '10:36:00'


2023-11-24 16:49:35,926:INFO:Initializing Elastic Net
2023-11-24 16:49:35,926:INFO:Total runtime is 0.09911225239435832 minutes
2023-11-24 16:49:35,926:INFO:SubProcess create_model() called ==================================
2023-11-24 16:49:35,926:INFO:Initializing create_model()
2023-11-24 16:49:35,926:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28e4b7bd0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28e9c63d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:49:35,926:INFO:Checking exceptions
2023-11-24 16:49:35,926:INFO:Importing libraries
2023-11-24 16:49:35,926:INFO:Copying training dataset
2023-11-24 16:49:35,929:INFO:Defining folds
2023-11-24 16:49:35,929:INFO:Declaring metric variables
2023-11-24 16:49:35,929:INFO:Importing untrained model
2023-11-24 16:49:35,929:INFO:Elastic Net Imported successfully
2023-11-24 16:49:35,929:INFO:Starting cross validation
2023-11-24 16:49:35,930:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:49:36,598:WARNING:create_model() for en raised an exception or returned all 0.0, trying without fit_kwargs:
2023-11-24 16:49:36,599:WARNING:Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py", line 908, in fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/base.py", line 584, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1122, in check_X_y
    y = _check_y(y, multi_output=multi_output, y_numeric=y_numeric, estimator=estimator)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1147, in _check_y
    y = y.astype(np.float64)
        ^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '12:44:00'

--------------------------------------------------------------------------------
9 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py", line 908, in fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/base.py", line 584, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1122, in check_X_y
    y = _check_y(y, multi_output=multi_output, y_numeric=y_numeric, estimator=estimator)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1147, in _check_y
    y = y.astype(np.float64)
        ^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '10:36:00'


2023-11-24 16:49:36,599:INFO:Initializing create_model()
2023-11-24 16:49:36,599:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28e4b7bd0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28e9c63d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:49:36,599:INFO:Checking exceptions
2023-11-24 16:49:36,599:INFO:Importing libraries
2023-11-24 16:49:36,599:INFO:Copying training dataset
2023-11-24 16:49:36,602:INFO:Defining folds
2023-11-24 16:49:36,602:INFO:Declaring metric variables
2023-11-24 16:49:36,602:INFO:Importing untrained model
2023-11-24 16:49:36,602:INFO:Elastic Net Imported successfully
2023-11-24 16:49:36,602:INFO:Starting cross validation
2023-11-24 16:49:36,603:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:49:37,218:ERROR:create_model() for en raised an exception or returned all 0.0:
2023-11-24 16:49:37,219:ERROR:Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py", line 908, in fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/base.py", line 584, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1122, in check_X_y
    y = _check_y(y, multi_output=multi_output, y_numeric=y_numeric, estimator=estimator)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1147, in _check_y
    y = y.astype(np.float64)
        ^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '12:44:00'

--------------------------------------------------------------------------------
9 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py", line 908, in fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/base.py", line 584, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1122, in check_X_y
    y = _check_y(y, multi_output=multi_output, y_numeric=y_numeric, estimator=estimator)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1147, in _check_y
    y = y.astype(np.float64)
        ^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '10:36:00'


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py", line 908, in fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/base.py", line 584, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1122, in check_X_y
    y = _check_y(y, multi_output=multi_output, y_numeric=y_numeric, estimator=estimator)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1147, in _check_y
    y = y.astype(np.float64)
        ^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '12:44:00'

--------------------------------------------------------------------------------
9 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py", line 908, in fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/base.py", line 584, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1122, in check_X_y
    y = _check_y(y, multi_output=multi_output, y_numeric=y_numeric, estimator=estimator)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1147, in _check_y
    y = y.astype(np.float64)
        ^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '10:36:00'


2023-11-24 16:49:37,219:INFO:Initializing Least Angle Regression
2023-11-24 16:49:37,219:INFO:Total runtime is 0.12066953579584758 minutes
2023-11-24 16:49:37,219:INFO:SubProcess create_model() called ==================================
2023-11-24 16:49:37,219:INFO:Initializing create_model()
2023-11-24 16:49:37,219:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28e4b7bd0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28e9c63d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:49:37,219:INFO:Checking exceptions
2023-11-24 16:49:37,219:INFO:Importing libraries
2023-11-24 16:49:37,219:INFO:Copying training dataset
2023-11-24 16:49:37,222:INFO:Defining folds
2023-11-24 16:49:37,222:INFO:Declaring metric variables
2023-11-24 16:49:37,222:INFO:Importing untrained model
2023-11-24 16:49:37,222:INFO:Least Angle Regression Imported successfully
2023-11-24 16:49:37,222:INFO:Starting cross validation
2023-11-24 16:49:37,223:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:49:37,871:WARNING:create_model() for lar raised an exception or returned all 0.0, trying without fit_kwargs:
2023-11-24 16:49:37,871:WARNING:Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_least_angle.py", line 1125, in fit
    X, y = self._validate_data(X, y, y_numeric=True, multi_output=True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/base.py", line 584, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1122, in check_X_y
    y = _check_y(y, multi_output=multi_output, y_numeric=y_numeric, estimator=estimator)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1147, in _check_y
    y = y.astype(np.float64)
        ^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '12:44:00'

--------------------------------------------------------------------------------
9 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_least_angle.py", line 1125, in fit
    X, y = self._validate_data(X, y, y_numeric=True, multi_output=True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/base.py", line 584, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1122, in check_X_y
    y = _check_y(y, multi_output=multi_output, y_numeric=y_numeric, estimator=estimator)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1147, in _check_y
    y = y.astype(np.float64)
        ^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '10:36:00'


2023-11-24 16:49:37,871:INFO:Initializing create_model()
2023-11-24 16:49:37,871:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28e4b7bd0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28e9c63d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:49:37,871:INFO:Checking exceptions
2023-11-24 16:49:37,871:INFO:Importing libraries
2023-11-24 16:49:37,871:INFO:Copying training dataset
2023-11-24 16:49:37,874:INFO:Defining folds
2023-11-24 16:49:37,874:INFO:Declaring metric variables
2023-11-24 16:49:37,874:INFO:Importing untrained model
2023-11-24 16:49:37,874:INFO:Least Angle Regression Imported successfully
2023-11-24 16:49:37,874:INFO:Starting cross validation
2023-11-24 16:49:37,875:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:49:38,482:ERROR:create_model() for lar raised an exception or returned all 0.0:
2023-11-24 16:49:38,482:ERROR:Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_least_angle.py", line 1125, in fit
    X, y = self._validate_data(X, y, y_numeric=True, multi_output=True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/base.py", line 584, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1122, in check_X_y
    y = _check_y(y, multi_output=multi_output, y_numeric=y_numeric, estimator=estimator)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1147, in _check_y
    y = y.astype(np.float64)
        ^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '12:44:00'

--------------------------------------------------------------------------------
9 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_least_angle.py", line 1125, in fit
    X, y = self._validate_data(X, y, y_numeric=True, multi_output=True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/base.py", line 584, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1122, in check_X_y
    y = _check_y(y, multi_output=multi_output, y_numeric=y_numeric, estimator=estimator)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1147, in _check_y
    y = y.astype(np.float64)
        ^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '10:36:00'


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_least_angle.py", line 1125, in fit
    X, y = self._validate_data(X, y, y_numeric=True, multi_output=True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/base.py", line 584, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1122, in check_X_y
    y = _check_y(y, multi_output=multi_output, y_numeric=y_numeric, estimator=estimator)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1147, in _check_y
    y = y.astype(np.float64)
        ^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '12:44:00'

--------------------------------------------------------------------------------
9 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_least_angle.py", line 1125, in fit
    X, y = self._validate_data(X, y, y_numeric=True, multi_output=True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/base.py", line 584, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1122, in check_X_y
    y = _check_y(y, multi_output=multi_output, y_numeric=y_numeric, estimator=estimator)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1147, in _check_y
    y = y.astype(np.float64)
        ^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '10:36:00'


2023-11-24 16:49:38,483:INFO:Initializing Lasso Least Angle Regression
2023-11-24 16:49:38,483:INFO:Total runtime is 0.1417287866274516 minutes
2023-11-24 16:49:38,483:INFO:SubProcess create_model() called ==================================
2023-11-24 16:49:38,483:INFO:Initializing create_model()
2023-11-24 16:49:38,483:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28e4b7bd0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28e9c63d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:49:38,483:INFO:Checking exceptions
2023-11-24 16:49:38,483:INFO:Importing libraries
2023-11-24 16:49:38,483:INFO:Copying training dataset
2023-11-24 16:49:38,485:INFO:Defining folds
2023-11-24 16:49:38,486:INFO:Declaring metric variables
2023-11-24 16:49:38,486:INFO:Importing untrained model
2023-11-24 16:49:38,486:INFO:Lasso Least Angle Regression Imported successfully
2023-11-24 16:49:38,486:INFO:Starting cross validation
2023-11-24 16:49:38,487:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:49:39,110:WARNING:create_model() for llar raised an exception or returned all 0.0, trying without fit_kwargs:
2023-11-24 16:49:39,110:WARNING:Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_least_angle.py", line 1125, in fit
    X, y = self._validate_data(X, y, y_numeric=True, multi_output=True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/base.py", line 584, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1122, in check_X_y
    y = _check_y(y, multi_output=multi_output, y_numeric=y_numeric, estimator=estimator)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1147, in _check_y
    y = y.astype(np.float64)
        ^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '12:44:00'

--------------------------------------------------------------------------------
9 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_least_angle.py", line 1125, in fit
    X, y = self._validate_data(X, y, y_numeric=True, multi_output=True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/base.py", line 584, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1122, in check_X_y
    y = _check_y(y, multi_output=multi_output, y_numeric=y_numeric, estimator=estimator)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1147, in _check_y
    y = y.astype(np.float64)
        ^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '10:36:00'


2023-11-24 16:49:39,111:INFO:Initializing create_model()
2023-11-24 16:49:39,111:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28e4b7bd0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28e9c63d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:49:39,111:INFO:Checking exceptions
2023-11-24 16:49:39,111:INFO:Importing libraries
2023-11-24 16:49:39,111:INFO:Copying training dataset
2023-11-24 16:49:39,113:INFO:Defining folds
2023-11-24 16:49:39,113:INFO:Declaring metric variables
2023-11-24 16:49:39,113:INFO:Importing untrained model
2023-11-24 16:49:39,113:INFO:Lasso Least Angle Regression Imported successfully
2023-11-24 16:49:39,113:INFO:Starting cross validation
2023-11-24 16:49:39,114:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:49:39,716:ERROR:create_model() for llar raised an exception or returned all 0.0:
2023-11-24 16:49:39,716:ERROR:Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_least_angle.py", line 1125, in fit
    X, y = self._validate_data(X, y, y_numeric=True, multi_output=True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/base.py", line 584, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1122, in check_X_y
    y = _check_y(y, multi_output=multi_output, y_numeric=y_numeric, estimator=estimator)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1147, in _check_y
    y = y.astype(np.float64)
        ^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '12:44:00'

--------------------------------------------------------------------------------
9 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_least_angle.py", line 1125, in fit
    X, y = self._validate_data(X, y, y_numeric=True, multi_output=True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/base.py", line 584, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1122, in check_X_y
    y = _check_y(y, multi_output=multi_output, y_numeric=y_numeric, estimator=estimator)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1147, in _check_y
    y = y.astype(np.float64)
        ^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '10:36:00'


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_least_angle.py", line 1125, in fit
    X, y = self._validate_data(X, y, y_numeric=True, multi_output=True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/base.py", line 584, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1122, in check_X_y
    y = _check_y(y, multi_output=multi_output, y_numeric=y_numeric, estimator=estimator)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1147, in _check_y
    y = y.astype(np.float64)
        ^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '12:44:00'

--------------------------------------------------------------------------------
9 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_least_angle.py", line 1125, in fit
    X, y = self._validate_data(X, y, y_numeric=True, multi_output=True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/base.py", line 584, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1122, in check_X_y
    y = _check_y(y, multi_output=multi_output, y_numeric=y_numeric, estimator=estimator)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1147, in _check_y
    y = y.astype(np.float64)
        ^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '10:36:00'


2023-11-24 16:49:39,717:INFO:Initializing Orthogonal Matching Pursuit
2023-11-24 16:49:39,717:INFO:Total runtime is 0.1622950037320455 minutes
2023-11-24 16:49:39,717:INFO:SubProcess create_model() called ==================================
2023-11-24 16:49:39,717:INFO:Initializing create_model()
2023-11-24 16:49:39,717:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28e4b7bd0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28e9c63d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:49:39,717:INFO:Checking exceptions
2023-11-24 16:49:39,717:INFO:Importing libraries
2023-11-24 16:49:39,717:INFO:Copying training dataset
2023-11-24 16:49:39,719:INFO:Defining folds
2023-11-24 16:49:39,720:INFO:Declaring metric variables
2023-11-24 16:49:39,720:INFO:Importing untrained model
2023-11-24 16:49:39,720:INFO:Orthogonal Matching Pursuit Imported successfully
2023-11-24 16:49:39,720:INFO:Starting cross validation
2023-11-24 16:49:39,721:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:49:40,315:WARNING:create_model() for omp raised an exception or returned all 0.0, trying without fit_kwargs:
2023-11-24 16:49:40,315:WARNING:Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_omp.py", line 741, in fit
    X, y = self._validate_data(X, y, multi_output=True, y_numeric=True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/base.py", line 584, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1122, in check_X_y
    y = _check_y(y, multi_output=multi_output, y_numeric=y_numeric, estimator=estimator)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1147, in _check_y
    y = y.astype(np.float64)
        ^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '12:44:00'

--------------------------------------------------------------------------------
9 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_omp.py", line 741, in fit
    X, y = self._validate_data(X, y, multi_output=True, y_numeric=True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/base.py", line 584, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1122, in check_X_y
    y = _check_y(y, multi_output=multi_output, y_numeric=y_numeric, estimator=estimator)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1147, in _check_y
    y = y.astype(np.float64)
        ^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '10:36:00'


2023-11-24 16:49:40,315:INFO:Initializing create_model()
2023-11-24 16:49:40,315:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28e4b7bd0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28e9c63d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:49:40,315:INFO:Checking exceptions
2023-11-24 16:49:40,315:INFO:Importing libraries
2023-11-24 16:49:40,315:INFO:Copying training dataset
2023-11-24 16:49:40,318:INFO:Defining folds
2023-11-24 16:49:40,318:INFO:Declaring metric variables
2023-11-24 16:49:40,318:INFO:Importing untrained model
2023-11-24 16:49:40,318:INFO:Orthogonal Matching Pursuit Imported successfully
2023-11-24 16:49:40,318:INFO:Starting cross validation
2023-11-24 16:49:40,319:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:49:40,931:ERROR:create_model() for omp raised an exception or returned all 0.0:
2023-11-24 16:49:40,932:ERROR:Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_omp.py", line 741, in fit
    X, y = self._validate_data(X, y, multi_output=True, y_numeric=True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/base.py", line 584, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1122, in check_X_y
    y = _check_y(y, multi_output=multi_output, y_numeric=y_numeric, estimator=estimator)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1147, in _check_y
    y = y.astype(np.float64)
        ^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '12:44:00'

--------------------------------------------------------------------------------
9 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_omp.py", line 741, in fit
    X, y = self._validate_data(X, y, multi_output=True, y_numeric=True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/base.py", line 584, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1122, in check_X_y
    y = _check_y(y, multi_output=multi_output, y_numeric=y_numeric, estimator=estimator)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1147, in _check_y
    y = y.astype(np.float64)
        ^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '10:36:00'


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_omp.py", line 741, in fit
    X, y = self._validate_data(X, y, multi_output=True, y_numeric=True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/base.py", line 584, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1122, in check_X_y
    y = _check_y(y, multi_output=multi_output, y_numeric=y_numeric, estimator=estimator)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1147, in _check_y
    y = y.astype(np.float64)
        ^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '12:44:00'

--------------------------------------------------------------------------------
9 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_omp.py", line 741, in fit
    X, y = self._validate_data(X, y, multi_output=True, y_numeric=True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/base.py", line 584, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1122, in check_X_y
    y = _check_y(y, multi_output=multi_output, y_numeric=y_numeric, estimator=estimator)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1147, in _check_y
    y = y.astype(np.float64)
        ^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '10:36:00'


2023-11-24 16:49:40,932:INFO:Initializing Bayesian Ridge
2023-11-24 16:49:40,932:INFO:Total runtime is 0.18255269924799603 minutes
2023-11-24 16:49:40,932:INFO:SubProcess create_model() called ==================================
2023-11-24 16:49:40,933:INFO:Initializing create_model()
2023-11-24 16:49:40,933:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28e4b7bd0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28e9c63d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:49:40,933:INFO:Checking exceptions
2023-11-24 16:49:40,933:INFO:Importing libraries
2023-11-24 16:49:40,933:INFO:Copying training dataset
2023-11-24 16:49:40,936:INFO:Defining folds
2023-11-24 16:49:40,936:INFO:Declaring metric variables
2023-11-24 16:49:40,936:INFO:Importing untrained model
2023-11-24 16:49:40,936:INFO:Bayesian Ridge Imported successfully
2023-11-24 16:49:40,936:INFO:Starting cross validation
2023-11-24 16:49:40,937:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:49:41,581:WARNING:create_model() for br raised an exception or returned all 0.0, trying without fit_kwargs:
2023-11-24 16:49:41,582:WARNING:Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_bayes.py", line 231, in fit
    X, y = self._validate_data(X, y, dtype=[np.float64, np.float32], y_numeric=True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/base.py", line 584, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1122, in check_X_y
    y = _check_y(y, multi_output=multi_output, y_numeric=y_numeric, estimator=estimator)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1147, in _check_y
    y = y.astype(np.float64)
        ^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '12:44:00'

--------------------------------------------------------------------------------
9 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_bayes.py", line 231, in fit
    X, y = self._validate_data(X, y, dtype=[np.float64, np.float32], y_numeric=True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/base.py", line 584, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1122, in check_X_y
    y = _check_y(y, multi_output=multi_output, y_numeric=y_numeric, estimator=estimator)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1147, in _check_y
    y = y.astype(np.float64)
        ^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '10:36:00'


2023-11-24 16:49:41,582:INFO:Initializing create_model()
2023-11-24 16:49:41,582:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28e4b7bd0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28e9c63d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:49:41,582:INFO:Checking exceptions
2023-11-24 16:49:41,582:INFO:Importing libraries
2023-11-24 16:49:41,582:INFO:Copying training dataset
2023-11-24 16:49:41,584:INFO:Defining folds
2023-11-24 16:49:41,585:INFO:Declaring metric variables
2023-11-24 16:49:41,585:INFO:Importing untrained model
2023-11-24 16:49:41,585:INFO:Bayesian Ridge Imported successfully
2023-11-24 16:49:41,585:INFO:Starting cross validation
2023-11-24 16:49:41,586:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:49:42,181:ERROR:create_model() for br raised an exception or returned all 0.0:
2023-11-24 16:49:42,182:ERROR:Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_bayes.py", line 231, in fit
    X, y = self._validate_data(X, y, dtype=[np.float64, np.float32], y_numeric=True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/base.py", line 584, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1122, in check_X_y
    y = _check_y(y, multi_output=multi_output, y_numeric=y_numeric, estimator=estimator)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1147, in _check_y
    y = y.astype(np.float64)
        ^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '12:44:00'

--------------------------------------------------------------------------------
9 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_bayes.py", line 231, in fit
    X, y = self._validate_data(X, y, dtype=[np.float64, np.float32], y_numeric=True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/base.py", line 584, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1122, in check_X_y
    y = _check_y(y, multi_output=multi_output, y_numeric=y_numeric, estimator=estimator)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1147, in _check_y
    y = y.astype(np.float64)
        ^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '10:36:00'


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_bayes.py", line 231, in fit
    X, y = self._validate_data(X, y, dtype=[np.float64, np.float32], y_numeric=True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/base.py", line 584, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1122, in check_X_y
    y = _check_y(y, multi_output=multi_output, y_numeric=y_numeric, estimator=estimator)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1147, in _check_y
    y = y.astype(np.float64)
        ^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '12:44:00'

--------------------------------------------------------------------------------
9 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_bayes.py", line 231, in fit
    X, y = self._validate_data(X, y, dtype=[np.float64, np.float32], y_numeric=True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/base.py", line 584, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1122, in check_X_y
    y = _check_y(y, multi_output=multi_output, y_numeric=y_numeric, estimator=estimator)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1147, in _check_y
    y = y.astype(np.float64)
        ^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '10:36:00'


2023-11-24 16:49:42,182:INFO:Initializing Passive Aggressive Regressor
2023-11-24 16:49:42,182:INFO:Total runtime is 0.2033899188041687 minutes
2023-11-24 16:49:42,183:INFO:SubProcess create_model() called ==================================
2023-11-24 16:49:42,183:INFO:Initializing create_model()
2023-11-24 16:49:42,183:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28e4b7bd0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28e9c63d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:49:42,183:INFO:Checking exceptions
2023-11-24 16:49:42,183:INFO:Importing libraries
2023-11-24 16:49:42,183:INFO:Copying training dataset
2023-11-24 16:49:42,185:INFO:Defining folds
2023-11-24 16:49:42,185:INFO:Declaring metric variables
2023-11-24 16:49:42,185:INFO:Importing untrained model
2023-11-24 16:49:42,186:INFO:Passive Aggressive Regressor Imported successfully
2023-11-24 16:49:42,186:INFO:Starting cross validation
2023-11-24 16:49:42,187:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:49:42,876:WARNING:create_model() for par raised an exception or returned all 0.0, trying without fit_kwargs:
2023-11-24 16:49:42,877:WARNING:Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_passive_aggressive.py", line 567, in fit
    return self._fit(
           ^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1530, in _fit
    self._partial_fit(
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1445, in _partial_fit
    y = y.astype(np.float64, copy=False)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '12:44:00'

--------------------------------------------------------------------------------
9 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_passive_aggressive.py", line 567, in fit
    return self._fit(
           ^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1530, in _fit
    self._partial_fit(
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1445, in _partial_fit
    y = y.astype(np.float64, copy=False)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '10:36:00'


2023-11-24 16:49:42,877:INFO:Initializing create_model()
2023-11-24 16:49:42,877:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28e4b7bd0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28e9c63d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:49:42,877:INFO:Checking exceptions
2023-11-24 16:49:42,877:INFO:Importing libraries
2023-11-24 16:49:42,877:INFO:Copying training dataset
2023-11-24 16:49:42,880:INFO:Defining folds
2023-11-24 16:49:42,880:INFO:Declaring metric variables
2023-11-24 16:49:42,880:INFO:Importing untrained model
2023-11-24 16:49:42,880:INFO:Passive Aggressive Regressor Imported successfully
2023-11-24 16:49:42,880:INFO:Starting cross validation
2023-11-24 16:49:42,881:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:49:43,500:ERROR:create_model() for par raised an exception or returned all 0.0:
2023-11-24 16:49:43,501:ERROR:Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_passive_aggressive.py", line 567, in fit
    return self._fit(
           ^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1530, in _fit
    self._partial_fit(
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1445, in _partial_fit
    y = y.astype(np.float64, copy=False)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '12:44:00'

--------------------------------------------------------------------------------
9 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_passive_aggressive.py", line 567, in fit
    return self._fit(
           ^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1530, in _fit
    self._partial_fit(
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1445, in _partial_fit
    y = y.astype(np.float64, copy=False)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '10:36:00'


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_passive_aggressive.py", line 567, in fit
    return self._fit(
           ^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1530, in _fit
    self._partial_fit(
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1445, in _partial_fit
    y = y.astype(np.float64, copy=False)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '12:44:00'

--------------------------------------------------------------------------------
9 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_passive_aggressive.py", line 567, in fit
    return self._fit(
           ^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1530, in _fit
    self._partial_fit(
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1445, in _partial_fit
    y = y.astype(np.float64, copy=False)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '10:36:00'


2023-11-24 16:49:43,503:INFO:Initializing Huber Regressor
2023-11-24 16:49:43,503:INFO:Total runtime is 0.2253946860631307 minutes
2023-11-24 16:49:43,503:INFO:SubProcess create_model() called ==================================
2023-11-24 16:49:43,503:INFO:Initializing create_model()
2023-11-24 16:49:43,503:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28e4b7bd0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28e9c63d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:49:43,503:INFO:Checking exceptions
2023-11-24 16:49:43,503:INFO:Importing libraries
2023-11-24 16:49:43,503:INFO:Copying training dataset
2023-11-24 16:49:43,506:INFO:Defining folds
2023-11-24 16:49:43,506:INFO:Declaring metric variables
2023-11-24 16:49:43,506:INFO:Importing untrained model
2023-11-24 16:49:43,506:INFO:Huber Regressor Imported successfully
2023-11-24 16:49:43,506:INFO:Starting cross validation
2023-11-24 16:49:43,507:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:49:44,159:WARNING:create_model() for huber raised an exception or returned all 0.0, trying without fit_kwargs:
2023-11-24 16:49:44,160:WARNING:Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_huber.py", line 297, in fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/base.py", line 584, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1122, in check_X_y
    y = _check_y(y, multi_output=multi_output, y_numeric=y_numeric, estimator=estimator)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1147, in _check_y
    y = y.astype(np.float64)
        ^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '12:44:00'

--------------------------------------------------------------------------------
9 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_huber.py", line 297, in fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/base.py", line 584, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1122, in check_X_y
    y = _check_y(y, multi_output=multi_output, y_numeric=y_numeric, estimator=estimator)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1147, in _check_y
    y = y.astype(np.float64)
        ^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '10:36:00'


2023-11-24 16:49:44,160:INFO:Initializing create_model()
2023-11-24 16:49:44,160:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28e4b7bd0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28e9c63d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:49:44,160:INFO:Checking exceptions
2023-11-24 16:49:44,160:INFO:Importing libraries
2023-11-24 16:49:44,160:INFO:Copying training dataset
2023-11-24 16:49:44,163:INFO:Defining folds
2023-11-24 16:49:44,163:INFO:Declaring metric variables
2023-11-24 16:49:44,163:INFO:Importing untrained model
2023-11-24 16:49:44,163:INFO:Huber Regressor Imported successfully
2023-11-24 16:49:44,163:INFO:Starting cross validation
2023-11-24 16:49:44,164:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:49:44,754:ERROR:create_model() for huber raised an exception or returned all 0.0:
2023-11-24 16:49:44,755:ERROR:Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_huber.py", line 297, in fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/base.py", line 584, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1122, in check_X_y
    y = _check_y(y, multi_output=multi_output, y_numeric=y_numeric, estimator=estimator)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1147, in _check_y
    y = y.astype(np.float64)
        ^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '12:44:00'

--------------------------------------------------------------------------------
9 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_huber.py", line 297, in fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/base.py", line 584, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1122, in check_X_y
    y = _check_y(y, multi_output=multi_output, y_numeric=y_numeric, estimator=estimator)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1147, in _check_y
    y = y.astype(np.float64)
        ^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '10:36:00'


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_huber.py", line 297, in fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/base.py", line 584, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1122, in check_X_y
    y = _check_y(y, multi_output=multi_output, y_numeric=y_numeric, estimator=estimator)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1147, in _check_y
    y = y.astype(np.float64)
        ^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '12:44:00'

--------------------------------------------------------------------------------
9 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_huber.py", line 297, in fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/base.py", line 584, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1122, in check_X_y
    y = _check_y(y, multi_output=multi_output, y_numeric=y_numeric, estimator=estimator)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1147, in _check_y
    y = y.astype(np.float64)
        ^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '10:36:00'


2023-11-24 16:49:44,755:INFO:Initializing K Neighbors Regressor
2023-11-24 16:49:44,755:INFO:Total runtime is 0.2462657848993937 minutes
2023-11-24 16:49:44,755:INFO:SubProcess create_model() called ==================================
2023-11-24 16:49:44,755:INFO:Initializing create_model()
2023-11-24 16:49:44,755:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28e4b7bd0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28e9c63d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:49:44,755:INFO:Checking exceptions
2023-11-24 16:49:44,755:INFO:Importing libraries
2023-11-24 16:49:44,755:INFO:Copying training dataset
2023-11-24 16:49:44,758:INFO:Defining folds
2023-11-24 16:49:44,758:INFO:Declaring metric variables
2023-11-24 16:49:44,758:INFO:Importing untrained model
2023-11-24 16:49:44,758:INFO:K Neighbors Regressor Imported successfully
2023-11-24 16:49:44,758:INFO:Starting cross validation
2023-11-24 16:49:44,759:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:49:45,948:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:244: FitFailedWarning: Metric 'make_scorer(root_mean_squared_log_error, greater_is_better=False)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 236, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 276, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 327, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/neighbors/_regression.py", line 248, in predict
    y_pred = np.mean(_y[neigh_ind], axis=1)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/fromnumeric.py", line 3504, in mean
    return _methods._mean(a, axis=axis, dtype=dtype,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/_methods.py", line 121, in _mean
    ret = um.true_divide(
          ^^^^^^^^^^^^^^^
TypeError: unsupported operand type(s) for /: 'str' and 'int'

  warnings.warn(

2023-11-24 16:49:45,955:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:244: FitFailedWarning: Metric 'make_scorer(root_mean_squared_log_error, greater_is_better=False)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 236, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 276, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 327, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/neighbors/_regression.py", line 248, in predict
    y_pred = np.mean(_y[neigh_ind], axis=1)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/fromnumeric.py", line 3504, in mean
    return _methods._mean(a, axis=axis, dtype=dtype,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/_methods.py", line 121, in _mean
    ret = um.true_divide(
          ^^^^^^^^^^^^^^^
TypeError: unsupported operand type(s) for /: 'str' and 'int'

  warnings.warn(

2023-11-24 16:49:45,969:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:244: FitFailedWarning: Metric 'make_scorer(root_mean_squared_log_error, greater_is_better=False)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 236, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 276, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 327, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/neighbors/_regression.py", line 248, in predict
    y_pred = np.mean(_y[neigh_ind], axis=1)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/fromnumeric.py", line 3504, in mean
    return _methods._mean(a, axis=axis, dtype=dtype,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/_methods.py", line 121, in _mean
    ret = um.true_divide(
          ^^^^^^^^^^^^^^^
TypeError: unsupported operand type(s) for /: 'str' and 'int'

  warnings.warn(

2023-11-24 16:49:45,973:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:244: FitFailedWarning: Metric 'make_scorer(root_mean_squared_log_error, greater_is_better=False)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 236, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 276, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 327, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/neighbors/_regression.py", line 248, in predict
    y_pred = np.mean(_y[neigh_ind], axis=1)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/fromnumeric.py", line 3504, in mean
    return _methods._mean(a, axis=axis, dtype=dtype,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/_methods.py", line 121, in _mean
    ret = um.true_divide(
          ^^^^^^^^^^^^^^^
TypeError: unsupported operand type(s) for /: 'str' and 'int'

  warnings.warn(

2023-11-24 16:49:46,014:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:244: FitFailedWarning: Metric 'make_scorer(root_mean_squared_log_error, greater_is_better=False)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 236, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 276, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 327, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/neighbors/_regression.py", line 248, in predict
    y_pred = np.mean(_y[neigh_ind], axis=1)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/fromnumeric.py", line 3504, in mean
    return _methods._mean(a, axis=axis, dtype=dtype,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/_methods.py", line 121, in _mean
    ret = um.true_divide(
          ^^^^^^^^^^^^^^^
TypeError: unsupported operand type(s) for /: 'str' and 'int'

  warnings.warn(

2023-11-24 16:49:46,026:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:244: FitFailedWarning: Metric 'make_scorer(root_mean_squared_log_error, greater_is_better=False)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 236, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 276, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 327, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/neighbors/_regression.py", line 248, in predict
    y_pred = np.mean(_y[neigh_ind], axis=1)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/fromnumeric.py", line 3504, in mean
    return _methods._mean(a, axis=axis, dtype=dtype,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/_methods.py", line 121, in _mean
    ret = um.true_divide(
          ^^^^^^^^^^^^^^^
TypeError: unsupported operand type(s) for /: 'str' and 'int'

  warnings.warn(

2023-11-24 16:49:46,029:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:244: FitFailedWarning: Metric 'make_scorer(root_mean_squared_log_error, greater_is_better=False)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 236, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 276, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 327, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/neighbors/_regression.py", line 248, in predict
    y_pred = np.mean(_y[neigh_ind], axis=1)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/fromnumeric.py", line 3504, in mean
    return _methods._mean(a, axis=axis, dtype=dtype,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/_methods.py", line 121, in _mean
    ret = um.true_divide(
          ^^^^^^^^^^^^^^^
TypeError: unsupported operand type(s) for /: 'str' and 'int'

  warnings.warn(

2023-11-24 16:49:46,038:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:244: FitFailedWarning: Metric 'make_scorer(root_mean_squared_log_error, greater_is_better=False)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 236, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 276, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 327, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/neighbors/_regression.py", line 248, in predict
    y_pred = np.mean(_y[neigh_ind], axis=1)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/fromnumeric.py", line 3504, in mean
    return _methods._mean(a, axis=axis, dtype=dtype,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/_methods.py", line 121, in _mean
    ret = um.true_divide(
          ^^^^^^^^^^^^^^^
TypeError: unsupported operand type(s) for /: 'str' and 'int'

  warnings.warn(

2023-11-24 16:49:46,039:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:244: FitFailedWarning: Metric 'make_scorer(root_mean_squared_log_error, greater_is_better=False)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 236, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 276, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 327, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/neighbors/_regression.py", line 248, in predict
    y_pred = np.mean(_y[neigh_ind], axis=1)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/fromnumeric.py", line 3504, in mean
    return _methods._mean(a, axis=axis, dtype=dtype,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/_methods.py", line 121, in _mean
    ret = um.true_divide(
          ^^^^^^^^^^^^^^^
TypeError: unsupported operand type(s) for /: 'str' and 'int'

  warnings.warn(

2023-11-24 16:49:46,044:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:244: FitFailedWarning: Metric 'make_scorer(mean_absolute_percentage_error, greater_is_better=False)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 236, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 276, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 327, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/neighbors/_regression.py", line 248, in predict
    y_pred = np.mean(_y[neigh_ind], axis=1)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/fromnumeric.py", line 3504, in mean
    return _methods._mean(a, axis=axis, dtype=dtype,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/_methods.py", line 121, in _mean
    ret = um.true_divide(
          ^^^^^^^^^^^^^^^
TypeError: unsupported operand type(s) for /: 'str' and 'int'

  warnings.warn(

2023-11-24 16:49:46,044:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py:794: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 115, in __call__
    score = scorer._score(cached_call, estimator, *args, **kwargs)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 276, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 327, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/neighbors/_regression.py", line 248, in predict
    y_pred = np.mean(_y[neigh_ind], axis=1)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/fromnumeric.py", line 3504, in mean
    return _methods._mean(a, axis=axis, dtype=dtype,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/_methods.py", line 121, in _mean
    ret = um.true_divide(
          ^^^^^^^^^^^^^^^
TypeError: unsupported operand type(s) for /: 'str' and 'int'

  warnings.warn(

2023-11-24 16:49:46,079:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:244: FitFailedWarning: Metric 'make_scorer(mean_absolute_percentage_error, greater_is_better=False)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 236, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 276, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 327, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/neighbors/_regression.py", line 248, in predict
    y_pred = np.mean(_y[neigh_ind], axis=1)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/fromnumeric.py", line 3504, in mean
    return _methods._mean(a, axis=axis, dtype=dtype,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/_methods.py", line 121, in _mean
    ret = um.true_divide(
          ^^^^^^^^^^^^^^^
TypeError: unsupported operand type(s) for /: 'str' and 'int'

  warnings.warn(

2023-11-24 16:49:46,079:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py:794: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 115, in __call__
    score = scorer._score(cached_call, estimator, *args, **kwargs)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 276, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 327, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/neighbors/_regression.py", line 248, in predict
    y_pred = np.mean(_y[neigh_ind], axis=1)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/fromnumeric.py", line 3504, in mean
    return _methods._mean(a, axis=axis, dtype=dtype,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/_methods.py", line 121, in _mean
    ret = um.true_divide(
          ^^^^^^^^^^^^^^^
TypeError: unsupported operand type(s) for /: 'str' and 'int'

  warnings.warn(

2023-11-24 16:49:46,082:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:244: FitFailedWarning: Metric 'make_scorer(mean_absolute_percentage_error, greater_is_better=False)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 236, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 276, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 327, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/neighbors/_regression.py", line 248, in predict
    y_pred = np.mean(_y[neigh_ind], axis=1)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/fromnumeric.py", line 3504, in mean
    return _methods._mean(a, axis=axis, dtype=dtype,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/_methods.py", line 121, in _mean
    ret = um.true_divide(
          ^^^^^^^^^^^^^^^
TypeError: unsupported operand type(s) for /: 'str' and 'int'

  warnings.warn(

2023-11-24 16:49:46,082:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py:794: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 115, in __call__
    score = scorer._score(cached_call, estimator, *args, **kwargs)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 276, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 327, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/neighbors/_regression.py", line 248, in predict
    y_pred = np.mean(_y[neigh_ind], axis=1)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/fromnumeric.py", line 3504, in mean
    return _methods._mean(a, axis=axis, dtype=dtype,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/_methods.py", line 121, in _mean
    ret = um.true_divide(
          ^^^^^^^^^^^^^^^
TypeError: unsupported operand type(s) for /: 'str' and 'int'

  warnings.warn(

2023-11-24 16:49:46,085:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:244: FitFailedWarning: Metric 'make_scorer(mean_absolute_percentage_error, greater_is_better=False)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 236, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 276, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 327, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/neighbors/_regression.py", line 248, in predict
    y_pred = np.mean(_y[neigh_ind], axis=1)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/fromnumeric.py", line 3504, in mean
    return _methods._mean(a, axis=axis, dtype=dtype,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/_methods.py", line 121, in _mean
    ret = um.true_divide(
          ^^^^^^^^^^^^^^^
TypeError: unsupported operand type(s) for /: 'str' and 'int'

  warnings.warn(

2023-11-24 16:49:46,085:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py:794: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 115, in __call__
    score = scorer._score(cached_call, estimator, *args, **kwargs)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 276, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 327, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/neighbors/_regression.py", line 248, in predict
    y_pred = np.mean(_y[neigh_ind], axis=1)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/fromnumeric.py", line 3504, in mean
    return _methods._mean(a, axis=axis, dtype=dtype,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/_methods.py", line 121, in _mean
    ret = um.true_divide(
          ^^^^^^^^^^^^^^^
TypeError: unsupported operand type(s) for /: 'str' and 'int'

  warnings.warn(

2023-11-24 16:49:46,118:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:244: FitFailedWarning: Metric 'make_scorer(mean_absolute_percentage_error, greater_is_better=False)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 236, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 276, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 327, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/neighbors/_regression.py", line 248, in predict
    y_pred = np.mean(_y[neigh_ind], axis=1)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/fromnumeric.py", line 3504, in mean
    return _methods._mean(a, axis=axis, dtype=dtype,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/_methods.py", line 121, in _mean
    ret = um.true_divide(
          ^^^^^^^^^^^^^^^
TypeError: unsupported operand type(s) for /: 'str' and 'int'

  warnings.warn(

2023-11-24 16:49:46,118:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py:794: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 115, in __call__
    score = scorer._score(cached_call, estimator, *args, **kwargs)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 276, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 327, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/neighbors/_regression.py", line 248, in predict
    y_pred = np.mean(_y[neigh_ind], axis=1)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/fromnumeric.py", line 3504, in mean
    return _methods._mean(a, axis=axis, dtype=dtype,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/_methods.py", line 121, in _mean
    ret = um.true_divide(
          ^^^^^^^^^^^^^^^
TypeError: unsupported operand type(s) for /: 'str' and 'int'

  warnings.warn(

2023-11-24 16:49:46,123:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:244: FitFailedWarning: Metric 'make_scorer(mean_absolute_percentage_error, greater_is_better=False)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 236, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 276, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 327, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/neighbors/_regression.py", line 248, in predict
    y_pred = np.mean(_y[neigh_ind], axis=1)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/fromnumeric.py", line 3504, in mean
    return _methods._mean(a, axis=axis, dtype=dtype,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/_methods.py", line 121, in _mean
    ret = um.true_divide(
          ^^^^^^^^^^^^^^^
TypeError: unsupported operand type(s) for /: 'str' and 'int'

  warnings.warn(

2023-11-24 16:49:46,123:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py:794: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 115, in __call__
    score = scorer._score(cached_call, estimator, *args, **kwargs)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 276, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 327, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/neighbors/_regression.py", line 248, in predict
    y_pred = np.mean(_y[neigh_ind], axis=1)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/fromnumeric.py", line 3504, in mean
    return _methods._mean(a, axis=axis, dtype=dtype,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/_methods.py", line 121, in _mean
    ret = um.true_divide(
          ^^^^^^^^^^^^^^^
TypeError: unsupported operand type(s) for /: 'str' and 'int'

  warnings.warn(

2023-11-24 16:49:46,124:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:244: FitFailedWarning: Metric 'make_scorer(mean_absolute_percentage_error, greater_is_better=False)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 236, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 276, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 327, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/neighbors/_regression.py", line 248, in predict
    y_pred = np.mean(_y[neigh_ind], axis=1)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/fromnumeric.py", line 3504, in mean
    return _methods._mean(a, axis=axis, dtype=dtype,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/_methods.py", line 121, in _mean
    ret = um.true_divide(
          ^^^^^^^^^^^^^^^
TypeError: unsupported operand type(s) for /: 'str' and 'int'

  warnings.warn(

2023-11-24 16:49:46,124:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py:794: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 115, in __call__
    score = scorer._score(cached_call, estimator, *args, **kwargs)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 276, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 327, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/neighbors/_regression.py", line 248, in predict
    y_pred = np.mean(_y[neigh_ind], axis=1)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/fromnumeric.py", line 3504, in mean
    return _methods._mean(a, axis=axis, dtype=dtype,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/_methods.py", line 121, in _mean
    ret = um.true_divide(
          ^^^^^^^^^^^^^^^
TypeError: unsupported operand type(s) for /: 'str' and 'int'

  warnings.warn(

2023-11-24 16:49:46,124:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:244: FitFailedWarning: Metric 'make_scorer(mean_absolute_percentage_error, greater_is_better=False)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 236, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 276, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 327, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/neighbors/_regression.py", line 248, in predict
    y_pred = np.mean(_y[neigh_ind], axis=1)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/fromnumeric.py", line 3504, in mean
    return _methods._mean(a, axis=axis, dtype=dtype,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/_methods.py", line 121, in _mean
    ret = um.true_divide(
          ^^^^^^^^^^^^^^^
TypeError: unsupported operand type(s) for /: 'str' and 'int'

  warnings.warn(

2023-11-24 16:49:46,124:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py:794: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 115, in __call__
    score = scorer._score(cached_call, estimator, *args, **kwargs)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 276, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 327, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/neighbors/_regression.py", line 248, in predict
    y_pred = np.mean(_y[neigh_ind], axis=1)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/fromnumeric.py", line 3504, in mean
    return _methods._mean(a, axis=axis, dtype=dtype,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/_methods.py", line 121, in _mean
    ret = um.true_divide(
          ^^^^^^^^^^^^^^^
TypeError: unsupported operand type(s) for /: 'str' and 'int'

  warnings.warn(

2023-11-24 16:49:46,129:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:244: FitFailedWarning: Metric 'make_scorer(mean_absolute_percentage_error, greater_is_better=False)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 236, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 276, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 327, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/neighbors/_regression.py", line 248, in predict
    y_pred = np.mean(_y[neigh_ind], axis=1)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/fromnumeric.py", line 3504, in mean
    return _methods._mean(a, axis=axis, dtype=dtype,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/_methods.py", line 121, in _mean
    ret = um.true_divide(
          ^^^^^^^^^^^^^^^
TypeError: unsupported operand type(s) for /: 'str' and 'int'

  warnings.warn(

2023-11-24 16:49:46,129:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py:794: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 115, in __call__
    score = scorer._score(cached_call, estimator, *args, **kwargs)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 276, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 327, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/neighbors/_regression.py", line 248, in predict
    y_pred = np.mean(_y[neigh_ind], axis=1)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/fromnumeric.py", line 3504, in mean
    return _methods._mean(a, axis=axis, dtype=dtype,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/_methods.py", line 121, in _mean
    ret = um.true_divide(
          ^^^^^^^^^^^^^^^
TypeError: unsupported operand type(s) for /: 'str' and 'int'

  warnings.warn(

2023-11-24 16:49:46,135:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:244: FitFailedWarning: Metric 'make_scorer(root_mean_squared_log_error, greater_is_better=False)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 236, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 276, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 327, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/neighbors/_regression.py", line 248, in predict
    y_pred = np.mean(_y[neigh_ind], axis=1)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/fromnumeric.py", line 3504, in mean
    return _methods._mean(a, axis=axis, dtype=dtype,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/_methods.py", line 121, in _mean
    ret = um.true_divide(
          ^^^^^^^^^^^^^^^
TypeError: unsupported operand type(s) for /: 'str' and 'int'

  warnings.warn(

2023-11-24 16:49:46,208:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:244: FitFailedWarning: Metric 'make_scorer(mean_absolute_percentage_error, greater_is_better=False)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 236, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 276, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 327, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/neighbors/_regression.py", line 248, in predict
    y_pred = np.mean(_y[neigh_ind], axis=1)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/fromnumeric.py", line 3504, in mean
    return _methods._mean(a, axis=axis, dtype=dtype,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/_methods.py", line 121, in _mean
    ret = um.true_divide(
          ^^^^^^^^^^^^^^^
TypeError: unsupported operand type(s) for /: 'str' and 'int'

  warnings.warn(

2023-11-24 16:49:46,208:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py:794: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 115, in __call__
    score = scorer._score(cached_call, estimator, *args, **kwargs)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 276, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 327, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/neighbors/_regression.py", line 248, in predict
    y_pred = np.mean(_y[neigh_ind], axis=1)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/fromnumeric.py", line 3504, in mean
    return _methods._mean(a, axis=axis, dtype=dtype,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/_methods.py", line 121, in _mean
    ret = um.true_divide(
          ^^^^^^^^^^^^^^^
TypeError: unsupported operand type(s) for /: 'str' and 'int'

  warnings.warn(

2023-11-24 16:49:46,209:INFO:Calculating mean and std
2023-11-24 16:49:46,209:INFO:Creating metrics dataframe
2023-11-24 16:49:46,211:INFO:Uploading results into container
2023-11-24 16:49:46,211:INFO:Uploading model into container now
2023-11-24 16:49:46,211:INFO:_master_model_container: 1
2023-11-24 16:49:46,211:INFO:_display_container: 2
2023-11-24 16:49:46,212:INFO:KNeighborsRegressor(n_jobs=-1)
2023-11-24 16:49:46,212:INFO:create_model() successfully completed......................................
2023-11-24 16:49:46,337:WARNING:create_model() for KNeighborsRegressor(n_jobs=-1) raised an exception or returned all 0.0, trying without fit_kwargs:
2023-11-24 16:49:46,338:WARNING:Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

2023-11-24 16:49:46,338:INFO:Initializing create_model()
2023-11-24 16:49:46,338:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28e4b7bd0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28e9c63d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:49:46,338:INFO:Checking exceptions
2023-11-24 16:49:46,338:INFO:Importing libraries
2023-11-24 16:49:46,338:INFO:Copying training dataset
2023-11-24 16:49:46,340:INFO:Defining folds
2023-11-24 16:49:46,340:INFO:Declaring metric variables
2023-11-24 16:49:46,340:INFO:Importing untrained model
2023-11-24 16:49:46,340:INFO:K Neighbors Regressor Imported successfully
2023-11-24 16:49:46,341:INFO:Starting cross validation
2023-11-24 16:49:46,341:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:49:47,500:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:244: FitFailedWarning: Metric 'make_scorer(root_mean_squared_log_error, greater_is_better=False)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 236, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 276, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 327, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/neighbors/_regression.py", line 248, in predict
    y_pred = np.mean(_y[neigh_ind], axis=1)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/fromnumeric.py", line 3504, in mean
    return _methods._mean(a, axis=axis, dtype=dtype,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/_methods.py", line 121, in _mean
    ret = um.true_divide(
          ^^^^^^^^^^^^^^^
TypeError: unsupported operand type(s) for /: 'str' and 'int'

  warnings.warn(

2023-11-24 16:49:47,573:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:244: FitFailedWarning: Metric 'make_scorer(root_mean_squared_log_error, greater_is_better=False)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 236, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 276, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 327, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/neighbors/_regression.py", line 248, in predict
    y_pred = np.mean(_y[neigh_ind], axis=1)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/fromnumeric.py", line 3504, in mean
    return _methods._mean(a, axis=axis, dtype=dtype,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/_methods.py", line 121, in _mean
    ret = um.true_divide(
          ^^^^^^^^^^^^^^^
TypeError: unsupported operand type(s) for /: 'str' and 'int'

  warnings.warn(

2023-11-24 16:49:47,575:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:244: FitFailedWarning: Metric 'make_scorer(root_mean_squared_log_error, greater_is_better=False)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 236, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 276, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 327, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/neighbors/_regression.py", line 248, in predict
    y_pred = np.mean(_y[neigh_ind], axis=1)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/fromnumeric.py", line 3504, in mean
    return _methods._mean(a, axis=axis, dtype=dtype,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/_methods.py", line 121, in _mean
    ret = um.true_divide(
          ^^^^^^^^^^^^^^^
TypeError: unsupported operand type(s) for /: 'str' and 'int'

  warnings.warn(

2023-11-24 16:49:47,604:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:244: FitFailedWarning: Metric 'make_scorer(root_mean_squared_log_error, greater_is_better=False)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 236, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 276, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 327, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/neighbors/_regression.py", line 248, in predict
    y_pred = np.mean(_y[neigh_ind], axis=1)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/fromnumeric.py", line 3504, in mean
    return _methods._mean(a, axis=axis, dtype=dtype,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/_methods.py", line 121, in _mean
    ret = um.true_divide(
          ^^^^^^^^^^^^^^^
TypeError: unsupported operand type(s) for /: 'str' and 'int'

  warnings.warn(

2023-11-24 16:49:47,617:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:244: FitFailedWarning: Metric 'make_scorer(root_mean_squared_log_error, greater_is_better=False)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 236, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 276, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 327, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/neighbors/_regression.py", line 248, in predict
    y_pred = np.mean(_y[neigh_ind], axis=1)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/fromnumeric.py", line 3504, in mean
    return _methods._mean(a, axis=axis, dtype=dtype,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/_methods.py", line 121, in _mean
    ret = um.true_divide(
          ^^^^^^^^^^^^^^^
TypeError: unsupported operand type(s) for /: 'str' and 'int'

  warnings.warn(

2023-11-24 16:49:47,618:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:244: FitFailedWarning: Metric 'make_scorer(root_mean_squared_log_error, greater_is_better=False)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 236, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 276, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 327, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/neighbors/_regression.py", line 248, in predict
    y_pred = np.mean(_y[neigh_ind], axis=1)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/fromnumeric.py", line 3504, in mean
    return _methods._mean(a, axis=axis, dtype=dtype,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/_methods.py", line 121, in _mean
    ret = um.true_divide(
          ^^^^^^^^^^^^^^^
TypeError: unsupported operand type(s) for /: 'str' and 'int'

  warnings.warn(

2023-11-24 16:49:47,619:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:244: FitFailedWarning: Metric 'make_scorer(mean_absolute_percentage_error, greater_is_better=False)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 236, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 276, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 327, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/neighbors/_regression.py", line 248, in predict
    y_pred = np.mean(_y[neigh_ind], axis=1)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/fromnumeric.py", line 3504, in mean
    return _methods._mean(a, axis=axis, dtype=dtype,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/_methods.py", line 121, in _mean
    ret = um.true_divide(
          ^^^^^^^^^^^^^^^
TypeError: unsupported operand type(s) for /: 'str' and 'int'

  warnings.warn(

2023-11-24 16:49:47,620:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py:794: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 115, in __call__
    score = scorer._score(cached_call, estimator, *args, **kwargs)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 276, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 327, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/neighbors/_regression.py", line 248, in predict
    y_pred = np.mean(_y[neigh_ind], axis=1)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/fromnumeric.py", line 3504, in mean
    return _methods._mean(a, axis=axis, dtype=dtype,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/_methods.py", line 121, in _mean
    ret = um.true_divide(
          ^^^^^^^^^^^^^^^
TypeError: unsupported operand type(s) for /: 'str' and 'int'

  warnings.warn(

2023-11-24 16:49:47,643:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:244: FitFailedWarning: Metric 'make_scorer(root_mean_squared_log_error, greater_is_better=False)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 236, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 276, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 327, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/neighbors/_regression.py", line 248, in predict
    y_pred = np.mean(_y[neigh_ind], axis=1)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/fromnumeric.py", line 3504, in mean
    return _methods._mean(a, axis=axis, dtype=dtype,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/_methods.py", line 121, in _mean
    ret = um.true_divide(
          ^^^^^^^^^^^^^^^
TypeError: unsupported operand type(s) for /: 'str' and 'int'

  warnings.warn(

2023-11-24 16:49:47,674:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:244: FitFailedWarning: Metric 'make_scorer(root_mean_squared_log_error, greater_is_better=False)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 236, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 276, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 327, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/neighbors/_regression.py", line 248, in predict
    y_pred = np.mean(_y[neigh_ind], axis=1)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/fromnumeric.py", line 3504, in mean
    return _methods._mean(a, axis=axis, dtype=dtype,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/_methods.py", line 121, in _mean
    ret = um.true_divide(
          ^^^^^^^^^^^^^^^
TypeError: unsupported operand type(s) for /: 'str' and 'int'

  warnings.warn(

2023-11-24 16:49:47,681:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:244: FitFailedWarning: Metric 'make_scorer(mean_absolute_percentage_error, greater_is_better=False)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 236, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 276, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 327, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/neighbors/_regression.py", line 248, in predict
    y_pred = np.mean(_y[neigh_ind], axis=1)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/fromnumeric.py", line 3504, in mean
    return _methods._mean(a, axis=axis, dtype=dtype,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/_methods.py", line 121, in _mean
    ret = um.true_divide(
          ^^^^^^^^^^^^^^^
TypeError: unsupported operand type(s) for /: 'str' and 'int'

  warnings.warn(

2023-11-24 16:49:47,681:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py:794: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 115, in __call__
    score = scorer._score(cached_call, estimator, *args, **kwargs)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 276, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 327, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/neighbors/_regression.py", line 248, in predict
    y_pred = np.mean(_y[neigh_ind], axis=1)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/fromnumeric.py", line 3504, in mean
    return _methods._mean(a, axis=axis, dtype=dtype,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/_methods.py", line 121, in _mean
    ret = um.true_divide(
          ^^^^^^^^^^^^^^^
TypeError: unsupported operand type(s) for /: 'str' and 'int'

  warnings.warn(

2023-11-24 16:49:47,696:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:244: FitFailedWarning: Metric 'make_scorer(mean_absolute_percentage_error, greater_is_better=False)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 236, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 276, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 327, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/neighbors/_regression.py", line 248, in predict
    y_pred = np.mean(_y[neigh_ind], axis=1)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/fromnumeric.py", line 3504, in mean
    return _methods._mean(a, axis=axis, dtype=dtype,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/_methods.py", line 121, in _mean
    ret = um.true_divide(
          ^^^^^^^^^^^^^^^
TypeError: unsupported operand type(s) for /: 'str' and 'int'

  warnings.warn(

2023-11-24 16:49:47,696:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py:794: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 115, in __call__
    score = scorer._score(cached_call, estimator, *args, **kwargs)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 276, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 327, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/neighbors/_regression.py", line 248, in predict
    y_pred = np.mean(_y[neigh_ind], axis=1)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/fromnumeric.py", line 3504, in mean
    return _methods._mean(a, axis=axis, dtype=dtype,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/_methods.py", line 121, in _mean
    ret = um.true_divide(
          ^^^^^^^^^^^^^^^
TypeError: unsupported operand type(s) for /: 'str' and 'int'

  warnings.warn(

2023-11-24 16:49:47,707:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:244: FitFailedWarning: Metric 'make_scorer(mean_absolute_percentage_error, greater_is_better=False)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 236, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 276, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 327, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/neighbors/_regression.py", line 248, in predict
    y_pred = np.mean(_y[neigh_ind], axis=1)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/fromnumeric.py", line 3504, in mean
    return _methods._mean(a, axis=axis, dtype=dtype,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/_methods.py", line 121, in _mean
    ret = um.true_divide(
          ^^^^^^^^^^^^^^^
TypeError: unsupported operand type(s) for /: 'str' and 'int'

  warnings.warn(

2023-11-24 16:49:47,707:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py:794: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 115, in __call__
    score = scorer._score(cached_call, estimator, *args, **kwargs)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 276, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 327, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/neighbors/_regression.py", line 248, in predict
    y_pred = np.mean(_y[neigh_ind], axis=1)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/fromnumeric.py", line 3504, in mean
    return _methods._mean(a, axis=axis, dtype=dtype,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/_methods.py", line 121, in _mean
    ret = um.true_divide(
          ^^^^^^^^^^^^^^^
TypeError: unsupported operand type(s) for /: 'str' and 'int'

  warnings.warn(

2023-11-24 16:49:47,710:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:244: FitFailedWarning: Metric 'make_scorer(root_mean_squared_log_error, greater_is_better=False)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 236, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 276, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 327, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/neighbors/_regression.py", line 248, in predict
    y_pred = np.mean(_y[neigh_ind], axis=1)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/fromnumeric.py", line 3504, in mean
    return _methods._mean(a, axis=axis, dtype=dtype,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/_methods.py", line 121, in _mean
    ret = um.true_divide(
          ^^^^^^^^^^^^^^^
TypeError: unsupported operand type(s) for /: 'str' and 'int'

  warnings.warn(

2023-11-24 16:49:47,711:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:244: FitFailedWarning: Metric 'make_scorer(mean_absolute_percentage_error, greater_is_better=False)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 236, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 276, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 327, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/neighbors/_regression.py", line 248, in predict
    y_pred = np.mean(_y[neigh_ind], axis=1)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/fromnumeric.py", line 3504, in mean
    return _methods._mean(a, axis=axis, dtype=dtype,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/_methods.py", line 121, in _mean
    ret = um.true_divide(
          ^^^^^^^^^^^^^^^
TypeError: unsupported operand type(s) for /: 'str' and 'int'

  warnings.warn(

2023-11-24 16:49:47,711:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py:794: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 115, in __call__
    score = scorer._score(cached_call, estimator, *args, **kwargs)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 276, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 327, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/neighbors/_regression.py", line 248, in predict
    y_pred = np.mean(_y[neigh_ind], axis=1)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/fromnumeric.py", line 3504, in mean
    return _methods._mean(a, axis=axis, dtype=dtype,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/_methods.py", line 121, in _mean
    ret = um.true_divide(
          ^^^^^^^^^^^^^^^
TypeError: unsupported operand type(s) for /: 'str' and 'int'

  warnings.warn(

2023-11-24 16:49:47,712:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:244: FitFailedWarning: Metric 'make_scorer(mean_absolute_percentage_error, greater_is_better=False)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 236, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 276, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 327, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/neighbors/_regression.py", line 248, in predict
    y_pred = np.mean(_y[neigh_ind], axis=1)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/fromnumeric.py", line 3504, in mean
    return _methods._mean(a, axis=axis, dtype=dtype,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/_methods.py", line 121, in _mean
    ret = um.true_divide(
          ^^^^^^^^^^^^^^^
TypeError: unsupported operand type(s) for /: 'str' and 'int'

  warnings.warn(

2023-11-24 16:49:47,712:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py:794: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 115, in __call__
    score = scorer._score(cached_call, estimator, *args, **kwargs)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 276, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 327, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/neighbors/_regression.py", line 248, in predict
    y_pred = np.mean(_y[neigh_ind], axis=1)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/fromnumeric.py", line 3504, in mean
    return _methods._mean(a, axis=axis, dtype=dtype,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/_methods.py", line 121, in _mean
    ret = um.true_divide(
          ^^^^^^^^^^^^^^^
TypeError: unsupported operand type(s) for /: 'str' and 'int'

  warnings.warn(

2023-11-24 16:49:47,731:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:244: FitFailedWarning: Metric 'make_scorer(mean_absolute_percentage_error, greater_is_better=False)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 236, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 276, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 327, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/neighbors/_regression.py", line 248, in predict
    y_pred = np.mean(_y[neigh_ind], axis=1)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/fromnumeric.py", line 3504, in mean
    return _methods._mean(a, axis=axis, dtype=dtype,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/_methods.py", line 121, in _mean
    ret = um.true_divide(
          ^^^^^^^^^^^^^^^
TypeError: unsupported operand type(s) for /: 'str' and 'int'

  warnings.warn(

2023-11-24 16:49:47,731:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py:794: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 115, in __call__
    score = scorer._score(cached_call, estimator, *args, **kwargs)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 276, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 327, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/neighbors/_regression.py", line 248, in predict
    y_pred = np.mean(_y[neigh_ind], axis=1)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/fromnumeric.py", line 3504, in mean
    return _methods._mean(a, axis=axis, dtype=dtype,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/_methods.py", line 121, in _mean
    ret = um.true_divide(
          ^^^^^^^^^^^^^^^
TypeError: unsupported operand type(s) for /: 'str' and 'int'

  warnings.warn(

2023-11-24 16:49:47,739:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:244: FitFailedWarning: Metric 'make_scorer(root_mean_squared_log_error, greater_is_better=False)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 236, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 276, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 327, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/neighbors/_regression.py", line 248, in predict
    y_pred = np.mean(_y[neigh_ind], axis=1)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/fromnumeric.py", line 3504, in mean
    return _methods._mean(a, axis=axis, dtype=dtype,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/_methods.py", line 121, in _mean
    ret = um.true_divide(
          ^^^^^^^^^^^^^^^
TypeError: unsupported operand type(s) for /: 'str' and 'int'

  warnings.warn(

2023-11-24 16:49:47,758:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:244: FitFailedWarning: Metric 'make_scorer(mean_absolute_percentage_error, greater_is_better=False)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 236, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 276, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 327, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/neighbors/_regression.py", line 248, in predict
    y_pred = np.mean(_y[neigh_ind], axis=1)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/fromnumeric.py", line 3504, in mean
    return _methods._mean(a, axis=axis, dtype=dtype,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/_methods.py", line 121, in _mean
    ret = um.true_divide(
          ^^^^^^^^^^^^^^^
TypeError: unsupported operand type(s) for /: 'str' and 'int'

  warnings.warn(

2023-11-24 16:49:47,759:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py:794: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 115, in __call__
    score = scorer._score(cached_call, estimator, *args, **kwargs)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 276, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 327, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/neighbors/_regression.py", line 248, in predict
    y_pred = np.mean(_y[neigh_ind], axis=1)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/fromnumeric.py", line 3504, in mean
    return _methods._mean(a, axis=axis, dtype=dtype,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/_methods.py", line 121, in _mean
    ret = um.true_divide(
          ^^^^^^^^^^^^^^^
TypeError: unsupported operand type(s) for /: 'str' and 'int'

  warnings.warn(

2023-11-24 16:49:47,785:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:244: FitFailedWarning: Metric 'make_scorer(mean_absolute_percentage_error, greater_is_better=False)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 236, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 276, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 327, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/neighbors/_regression.py", line 248, in predict
    y_pred = np.mean(_y[neigh_ind], axis=1)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/fromnumeric.py", line 3504, in mean
    return _methods._mean(a, axis=axis, dtype=dtype,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/_methods.py", line 121, in _mean
    ret = um.true_divide(
          ^^^^^^^^^^^^^^^
TypeError: unsupported operand type(s) for /: 'str' and 'int'

  warnings.warn(

2023-11-24 16:49:47,786:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py:794: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 115, in __call__
    score = scorer._score(cached_call, estimator, *args, **kwargs)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 276, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 327, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/neighbors/_regression.py", line 248, in predict
    y_pred = np.mean(_y[neigh_ind], axis=1)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/fromnumeric.py", line 3504, in mean
    return _methods._mean(a, axis=axis, dtype=dtype,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/_methods.py", line 121, in _mean
    ret = um.true_divide(
          ^^^^^^^^^^^^^^^
TypeError: unsupported operand type(s) for /: 'str' and 'int'

  warnings.warn(

2023-11-24 16:49:47,811:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:244: FitFailedWarning: Metric 'make_scorer(mean_absolute_percentage_error, greater_is_better=False)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 236, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 276, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 327, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/neighbors/_regression.py", line 248, in predict
    y_pred = np.mean(_y[neigh_ind], axis=1)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/fromnumeric.py", line 3504, in mean
    return _methods._mean(a, axis=axis, dtype=dtype,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/_methods.py", line 121, in _mean
    ret = um.true_divide(
          ^^^^^^^^^^^^^^^
TypeError: unsupported operand type(s) for /: 'str' and 'int'

  warnings.warn(

2023-11-24 16:49:47,812:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py:794: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 115, in __call__
    score = scorer._score(cached_call, estimator, *args, **kwargs)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 276, in _score
    y_pred = method_caller(estimator, "predict", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 327, in predict
    y = self.steps[-1][-1].predict(X, **predict_params)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/neighbors/_regression.py", line 248, in predict
    y_pred = np.mean(_y[neigh_ind], axis=1)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/fromnumeric.py", line 3504, in mean
    return _methods._mean(a, axis=axis, dtype=dtype,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/_methods.py", line 121, in _mean
    ret = um.true_divide(
          ^^^^^^^^^^^^^^^
TypeError: unsupported operand type(s) for /: 'str' and 'int'

  warnings.warn(

2023-11-24 16:49:47,813:INFO:Calculating mean and std
2023-11-24 16:49:47,814:INFO:Creating metrics dataframe
2023-11-24 16:49:47,815:INFO:Uploading results into container
2023-11-24 16:49:47,815:INFO:Uploading model into container now
2023-11-24 16:49:47,815:INFO:_master_model_container: 2
2023-11-24 16:49:47,815:INFO:_display_container: 2
2023-11-24 16:49:47,815:INFO:KNeighborsRegressor(n_jobs=-1)
2023-11-24 16:49:47,815:INFO:create_model() successfully completed......................................
2023-11-24 16:49:47,902:ERROR:create_model() for KNeighborsRegressor(n_jobs=-1) raised an exception or returned all 0.0:
2023-11-24 16:49:47,903:ERROR:Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 797, in compare_models
    np.sum(
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 818, in compare_models
    np.sum(
AssertionError

2023-11-24 16:49:47,903:INFO:Initializing Decision Tree Regressor
2023-11-24 16:49:47,903:INFO:Total runtime is 0.2987316370010376 minutes
2023-11-24 16:49:47,903:INFO:SubProcess create_model() called ==================================
2023-11-24 16:49:47,903:INFO:Initializing create_model()
2023-11-24 16:49:47,903:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28e4b7bd0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28e9c63d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:49:47,903:INFO:Checking exceptions
2023-11-24 16:49:47,903:INFO:Importing libraries
2023-11-24 16:49:47,903:INFO:Copying training dataset
2023-11-24 16:49:47,905:INFO:Defining folds
2023-11-24 16:49:47,906:INFO:Declaring metric variables
2023-11-24 16:49:47,906:INFO:Importing untrained model
2023-11-24 16:49:47,906:INFO:Decision Tree Regressor Imported successfully
2023-11-24 16:49:47,906:INFO:Starting cross validation
2023-11-24 16:49:47,907:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:49:48,569:WARNING:create_model() for dt raised an exception or returned all 0.0, trying without fit_kwargs:
2023-11-24 16:49:48,570:WARNING:Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/tree/_classes.py", line 1247, in fit
    super().fit(
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/tree/_classes.py", line 248, in fit
    y = np.ascontiguousarray(y, dtype=DOUBLE)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '12:44:00'

--------------------------------------------------------------------------------
9 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/tree/_classes.py", line 1247, in fit
    super().fit(
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/tree/_classes.py", line 248, in fit
    y = np.ascontiguousarray(y, dtype=DOUBLE)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '10:36:00'


2023-11-24 16:49:48,571:INFO:Initializing create_model()
2023-11-24 16:49:48,571:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28e4b7bd0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28e9c63d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:49:48,571:INFO:Checking exceptions
2023-11-24 16:49:48,571:INFO:Importing libraries
2023-11-24 16:49:48,571:INFO:Copying training dataset
2023-11-24 16:49:48,574:INFO:Defining folds
2023-11-24 16:49:48,574:INFO:Declaring metric variables
2023-11-24 16:49:48,574:INFO:Importing untrained model
2023-11-24 16:49:48,574:INFO:Decision Tree Regressor Imported successfully
2023-11-24 16:49:48,574:INFO:Starting cross validation
2023-11-24 16:49:48,575:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:49:49,216:ERROR:create_model() for dt raised an exception or returned all 0.0:
2023-11-24 16:49:49,217:ERROR:Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/tree/_classes.py", line 1247, in fit
    super().fit(
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/tree/_classes.py", line 248, in fit
    y = np.ascontiguousarray(y, dtype=DOUBLE)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '12:44:00'

--------------------------------------------------------------------------------
9 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/tree/_classes.py", line 1247, in fit
    super().fit(
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/tree/_classes.py", line 248, in fit
    y = np.ascontiguousarray(y, dtype=DOUBLE)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '10:36:00'


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/tree/_classes.py", line 1247, in fit
    super().fit(
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/tree/_classes.py", line 248, in fit
    y = np.ascontiguousarray(y, dtype=DOUBLE)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '12:44:00'

--------------------------------------------------------------------------------
9 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/tree/_classes.py", line 1247, in fit
    super().fit(
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/tree/_classes.py", line 248, in fit
    y = np.ascontiguousarray(y, dtype=DOUBLE)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '10:36:00'


2023-11-24 16:49:49,218:INFO:Initializing Random Forest Regressor
2023-11-24 16:49:49,218:INFO:Total runtime is 0.32064669926961265 minutes
2023-11-24 16:49:49,218:INFO:SubProcess create_model() called ==================================
2023-11-24 16:49:49,218:INFO:Initializing create_model()
2023-11-24 16:49:49,218:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28e4b7bd0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28e9c63d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:49:49,218:INFO:Checking exceptions
2023-11-24 16:49:49,218:INFO:Importing libraries
2023-11-24 16:49:49,218:INFO:Copying training dataset
2023-11-24 16:49:49,221:INFO:Defining folds
2023-11-24 16:49:49,221:INFO:Declaring metric variables
2023-11-24 16:49:49,221:INFO:Importing untrained model
2023-11-24 16:49:49,221:INFO:Random Forest Regressor Imported successfully
2023-11-24 16:49:49,221:INFO:Starting cross validation
2023-11-24 16:49:49,222:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:49:49,904:WARNING:create_model() for rf raised an exception or returned all 0.0, trying without fit_kwargs:
2023-11-24 16:49:49,905:WARNING:Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/ensemble/_forest.py", line 388, in fit
    y = np.ascontiguousarray(y, dtype=DOUBLE)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '12:44:00'

--------------------------------------------------------------------------------
9 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/ensemble/_forest.py", line 388, in fit
    y = np.ascontiguousarray(y, dtype=DOUBLE)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '10:36:00'


2023-11-24 16:49:49,905:INFO:Initializing create_model()
2023-11-24 16:49:49,905:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28e4b7bd0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28e9c63d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:49:49,905:INFO:Checking exceptions
2023-11-24 16:49:49,905:INFO:Importing libraries
2023-11-24 16:49:49,905:INFO:Copying training dataset
2023-11-24 16:49:49,908:INFO:Defining folds
2023-11-24 16:49:49,908:INFO:Declaring metric variables
2023-11-24 16:49:49,908:INFO:Importing untrained model
2023-11-24 16:49:49,908:INFO:Random Forest Regressor Imported successfully
2023-11-24 16:49:49,908:INFO:Starting cross validation
2023-11-24 16:49:49,909:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:49:50,582:ERROR:create_model() for rf raised an exception or returned all 0.0:
2023-11-24 16:49:50,583:ERROR:Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/ensemble/_forest.py", line 388, in fit
    y = np.ascontiguousarray(y, dtype=DOUBLE)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '12:44:00'

--------------------------------------------------------------------------------
9 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/ensemble/_forest.py", line 388, in fit
    y = np.ascontiguousarray(y, dtype=DOUBLE)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '10:36:00'


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/ensemble/_forest.py", line 388, in fit
    y = np.ascontiguousarray(y, dtype=DOUBLE)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '12:44:00'

--------------------------------------------------------------------------------
9 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/ensemble/_forest.py", line 388, in fit
    y = np.ascontiguousarray(y, dtype=DOUBLE)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '10:36:00'


2023-11-24 16:49:50,583:INFO:Initializing Extra Trees Regressor
2023-11-24 16:49:50,583:INFO:Total runtime is 0.3434064348538717 minutes
2023-11-24 16:49:50,584:INFO:SubProcess create_model() called ==================================
2023-11-24 16:49:50,584:INFO:Initializing create_model()
2023-11-24 16:49:50,584:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28e4b7bd0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28e9c63d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:49:50,584:INFO:Checking exceptions
2023-11-24 16:49:50,584:INFO:Importing libraries
2023-11-24 16:49:50,584:INFO:Copying training dataset
2023-11-24 16:49:50,587:INFO:Defining folds
2023-11-24 16:49:50,587:INFO:Declaring metric variables
2023-11-24 16:49:50,587:INFO:Importing untrained model
2023-11-24 16:49:50,588:INFO:Extra Trees Regressor Imported successfully
2023-11-24 16:49:50,588:INFO:Starting cross validation
2023-11-24 16:49:50,589:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:49:51,198:WARNING:create_model() for et raised an exception or returned all 0.0, trying without fit_kwargs:
2023-11-24 16:49:51,198:WARNING:Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/ensemble/_forest.py", line 388, in fit
    y = np.ascontiguousarray(y, dtype=DOUBLE)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '12:44:00'

--------------------------------------------------------------------------------
9 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/ensemble/_forest.py", line 388, in fit
    y = np.ascontiguousarray(y, dtype=DOUBLE)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '10:36:00'


2023-11-24 16:49:51,199:INFO:Initializing create_model()
2023-11-24 16:49:51,199:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28e4b7bd0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28e9c63d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:49:51,199:INFO:Checking exceptions
2023-11-24 16:49:51,199:INFO:Importing libraries
2023-11-24 16:49:51,199:INFO:Copying training dataset
2023-11-24 16:49:51,201:INFO:Defining folds
2023-11-24 16:49:51,201:INFO:Declaring metric variables
2023-11-24 16:49:51,201:INFO:Importing untrained model
2023-11-24 16:49:51,202:INFO:Extra Trees Regressor Imported successfully
2023-11-24 16:49:51,202:INFO:Starting cross validation
2023-11-24 16:49:51,203:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:49:51,831:ERROR:create_model() for et raised an exception or returned all 0.0:
2023-11-24 16:49:51,832:ERROR:Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/ensemble/_forest.py", line 388, in fit
    y = np.ascontiguousarray(y, dtype=DOUBLE)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '12:44:00'

--------------------------------------------------------------------------------
9 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/ensemble/_forest.py", line 388, in fit
    y = np.ascontiguousarray(y, dtype=DOUBLE)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '10:36:00'


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/ensemble/_forest.py", line 388, in fit
    y = np.ascontiguousarray(y, dtype=DOUBLE)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '12:44:00'

--------------------------------------------------------------------------------
9 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/ensemble/_forest.py", line 388, in fit
    y = np.ascontiguousarray(y, dtype=DOUBLE)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '10:36:00'


2023-11-24 16:49:51,833:INFO:Initializing AdaBoost Regressor
2023-11-24 16:49:51,833:INFO:Total runtime is 0.3642276207605998 minutes
2023-11-24 16:49:51,833:INFO:SubProcess create_model() called ==================================
2023-11-24 16:49:51,833:INFO:Initializing create_model()
2023-11-24 16:49:51,833:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28e4b7bd0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28e9c63d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:49:51,833:INFO:Checking exceptions
2023-11-24 16:49:51,833:INFO:Importing libraries
2023-11-24 16:49:51,833:INFO:Copying training dataset
2023-11-24 16:49:51,836:INFO:Defining folds
2023-11-24 16:49:51,836:INFO:Declaring metric variables
2023-11-24 16:49:51,836:INFO:Importing untrained model
2023-11-24 16:49:51,836:INFO:AdaBoost Regressor Imported successfully
2023-11-24 16:49:51,836:INFO:Starting cross validation
2023-11-24 16:49:51,837:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:49:52,455:WARNING:create_model() for ada raised an exception or returned all 0.0, trying without fit_kwargs:
2023-11-24 16:49:52,455:WARNING:Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py", line 126, in fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/base.py", line 584, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1122, in check_X_y
    y = _check_y(y, multi_output=multi_output, y_numeric=y_numeric, estimator=estimator)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1147, in _check_y
    y = y.astype(np.float64)
        ^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '12:44:00'

--------------------------------------------------------------------------------
9 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py", line 126, in fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/base.py", line 584, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1122, in check_X_y
    y = _check_y(y, multi_output=multi_output, y_numeric=y_numeric, estimator=estimator)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1147, in _check_y
    y = y.astype(np.float64)
        ^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '10:36:00'


2023-11-24 16:49:52,455:INFO:Initializing create_model()
2023-11-24 16:49:52,455:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28e4b7bd0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28e9c63d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:49:52,455:INFO:Checking exceptions
2023-11-24 16:49:52,455:INFO:Importing libraries
2023-11-24 16:49:52,455:INFO:Copying training dataset
2023-11-24 16:49:52,458:INFO:Defining folds
2023-11-24 16:49:52,458:INFO:Declaring metric variables
2023-11-24 16:49:52,458:INFO:Importing untrained model
2023-11-24 16:49:52,458:INFO:AdaBoost Regressor Imported successfully
2023-11-24 16:49:52,458:INFO:Starting cross validation
2023-11-24 16:49:52,459:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:49:53,066:ERROR:create_model() for ada raised an exception or returned all 0.0:
2023-11-24 16:49:53,067:ERROR:Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py", line 126, in fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/base.py", line 584, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1122, in check_X_y
    y = _check_y(y, multi_output=multi_output, y_numeric=y_numeric, estimator=estimator)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1147, in _check_y
    y = y.astype(np.float64)
        ^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '12:44:00'

--------------------------------------------------------------------------------
9 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py", line 126, in fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/base.py", line 584, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1122, in check_X_y
    y = _check_y(y, multi_output=multi_output, y_numeric=y_numeric, estimator=estimator)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1147, in _check_y
    y = y.astype(np.float64)
        ^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '10:36:00'


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py", line 126, in fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/base.py", line 584, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1122, in check_X_y
    y = _check_y(y, multi_output=multi_output, y_numeric=y_numeric, estimator=estimator)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1147, in _check_y
    y = y.astype(np.float64)
        ^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '12:44:00'

--------------------------------------------------------------------------------
9 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py", line 126, in fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/base.py", line 584, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1122, in check_X_y
    y = _check_y(y, multi_output=multi_output, y_numeric=y_numeric, estimator=estimator)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1147, in _check_y
    y = y.astype(np.float64)
        ^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '10:36:00'


2023-11-24 16:49:53,068:INFO:Initializing Gradient Boosting Regressor
2023-11-24 16:49:53,068:INFO:Total runtime is 0.38481281995773314 minutes
2023-11-24 16:49:53,068:INFO:SubProcess create_model() called ==================================
2023-11-24 16:49:53,068:INFO:Initializing create_model()
2023-11-24 16:49:53,068:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28e4b7bd0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28e9c63d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:49:53,068:INFO:Checking exceptions
2023-11-24 16:49:53,068:INFO:Importing libraries
2023-11-24 16:49:53,068:INFO:Copying training dataset
2023-11-24 16:49:53,071:INFO:Defining folds
2023-11-24 16:49:53,071:INFO:Declaring metric variables
2023-11-24 16:49:53,071:INFO:Importing untrained model
2023-11-24 16:49:53,071:INFO:Gradient Boosting Regressor Imported successfully
2023-11-24 16:49:53,071:INFO:Starting cross validation
2023-11-24 16:49:53,072:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:49:53,749:WARNING:create_model() for gbr raised an exception or returned all 0.0, trying without fit_kwargs:
2023-11-24 16:49:53,749:WARNING:Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/ensemble/_gb.py", line 442, in fit
    y = self._validate_y(y)
        ^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/ensemble/_gb.py", line 1780, in _validate_y
    y = y.astype(DOUBLE)
        ^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '12:44:00'

--------------------------------------------------------------------------------
9 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/ensemble/_gb.py", line 442, in fit
    y = self._validate_y(y)
        ^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/ensemble/_gb.py", line 1780, in _validate_y
    y = y.astype(DOUBLE)
        ^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '10:36:00'


2023-11-24 16:49:53,749:INFO:Initializing create_model()
2023-11-24 16:49:53,749:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28e4b7bd0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28e9c63d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:49:53,749:INFO:Checking exceptions
2023-11-24 16:49:53,749:INFO:Importing libraries
2023-11-24 16:49:53,749:INFO:Copying training dataset
2023-11-24 16:49:53,752:INFO:Defining folds
2023-11-24 16:49:53,752:INFO:Declaring metric variables
2023-11-24 16:49:53,752:INFO:Importing untrained model
2023-11-24 16:49:53,752:INFO:Gradient Boosting Regressor Imported successfully
2023-11-24 16:49:53,752:INFO:Starting cross validation
2023-11-24 16:49:53,753:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:49:54,368:ERROR:create_model() for gbr raised an exception or returned all 0.0:
2023-11-24 16:49:54,369:ERROR:Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/ensemble/_gb.py", line 442, in fit
    y = self._validate_y(y)
        ^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/ensemble/_gb.py", line 1780, in _validate_y
    y = y.astype(DOUBLE)
        ^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '12:44:00'

--------------------------------------------------------------------------------
9 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/ensemble/_gb.py", line 442, in fit
    y = self._validate_y(y)
        ^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/ensemble/_gb.py", line 1780, in _validate_y
    y = y.astype(DOUBLE)
        ^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '10:36:00'


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/ensemble/_gb.py", line 442, in fit
    y = self._validate_y(y)
        ^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/ensemble/_gb.py", line 1780, in _validate_y
    y = y.astype(DOUBLE)
        ^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '12:44:00'

--------------------------------------------------------------------------------
9 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/ensemble/_gb.py", line 442, in fit
    y = self._validate_y(y)
        ^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/ensemble/_gb.py", line 1780, in _validate_y
    y = y.astype(DOUBLE)
        ^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '10:36:00'


2023-11-24 16:49:54,369:INFO:Initializing Extreme Gradient Boosting
2023-11-24 16:49:54,369:INFO:Total runtime is 0.40650320450464883 minutes
2023-11-24 16:49:54,369:INFO:SubProcess create_model() called ==================================
2023-11-24 16:49:54,369:INFO:Initializing create_model()
2023-11-24 16:49:54,369:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28e4b7bd0>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28e9c63d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:49:54,369:INFO:Checking exceptions
2023-11-24 16:49:54,369:INFO:Importing libraries
2023-11-24 16:49:54,370:INFO:Copying training dataset
2023-11-24 16:49:54,372:INFO:Defining folds
2023-11-24 16:49:54,372:INFO:Declaring metric variables
2023-11-24 16:49:54,372:INFO:Importing untrained model
2023-11-24 16:49:54,372:INFO:Extreme Gradient Boosting Imported successfully
2023-11-24 16:49:54,372:INFO:Starting cross validation
2023-11-24 16:49:54,373:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:49:55,083:WARNING:create_model() for xgboost raised an exception or returned all 0.0, trying without fit_kwargs:
2023-11-24 16:49:55,084:WARNING:Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pandas/core/arrays/categorical.py", line 551, in astype
    new_cats = new_cats.astype(dtype=dtype, copy=copy)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '0:01:00'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/xgboost/core.py", line 620, in inner_f
    return func(**kwargs)
           ^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/xgboost/sklearn.py", line 988, in fit
    train_dmatrix, evals = _wrap_evaluation_matrices(
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/xgboost/sklearn.py", line 448, in _wrap_evaluation_matrices
    train_dmatrix = create_dmatrix(
                    ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/xgboost/sklearn.py", line 908, in _create_dmatrix
    return DMatrix(**kwargs, nthread=self.n_jobs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/xgboost/core.py", line 620, in inner_f
    return func(**kwargs)
           ^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/xgboost/core.py", line 754, in __init__
    self.set_info(
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/xgboost/core.py", line 620, in inner_f
    return func(**kwargs)
           ^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/xgboost/core.py", line 819, in set_info
    self.set_label(label)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/xgboost/core.py", line 950, in set_label
    dispatch_meta_backend(self, label, 'label', 'float')
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/xgboost/data.py", line 1121, in dispatch_meta_backend
    _meta_from_pandas_series(data, name, dtype, handle)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/xgboost/data.py", line 425, in _meta_from_pandas_series
    data = data.values.astype('float')
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pandas/core/arrays/categorical.py", line 562, in astype
    raise ValueError(msg)
ValueError: Cannot cast object dtype to float64


2023-11-24 16:49:55,086:INFO:Initializing create_model()
2023-11-24 16:49:55,086:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28e4b7bd0>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28e9c63d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:49:55,086:INFO:Checking exceptions
2023-11-24 16:49:55,086:INFO:Importing libraries
2023-11-24 16:49:55,086:INFO:Copying training dataset
2023-11-24 16:49:55,089:INFO:Defining folds
2023-11-24 16:49:55,089:INFO:Declaring metric variables
2023-11-24 16:49:55,089:INFO:Importing untrained model
2023-11-24 16:49:55,089:INFO:Extreme Gradient Boosting Imported successfully
2023-11-24 16:49:55,089:INFO:Starting cross validation
2023-11-24 16:49:55,091:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:49:55,704:ERROR:create_model() for xgboost raised an exception or returned all 0.0:
2023-11-24 16:49:55,705:ERROR:Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pandas/core/arrays/categorical.py", line 551, in astype
    new_cats = new_cats.astype(dtype=dtype, copy=copy)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '0:01:00'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/xgboost/core.py", line 620, in inner_f
    return func(**kwargs)
           ^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/xgboost/sklearn.py", line 988, in fit
    train_dmatrix, evals = _wrap_evaluation_matrices(
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/xgboost/sklearn.py", line 448, in _wrap_evaluation_matrices
    train_dmatrix = create_dmatrix(
                    ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/xgboost/sklearn.py", line 908, in _create_dmatrix
    return DMatrix(**kwargs, nthread=self.n_jobs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/xgboost/core.py", line 620, in inner_f
    return func(**kwargs)
           ^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/xgboost/core.py", line 754, in __init__
    self.set_info(
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/xgboost/core.py", line 620, in inner_f
    return func(**kwargs)
           ^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/xgboost/core.py", line 819, in set_info
    self.set_label(label)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/xgboost/core.py", line 950, in set_label
    dispatch_meta_backend(self, label, 'label', 'float')
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/xgboost/data.py", line 1121, in dispatch_meta_backend
    _meta_from_pandas_series(data, name, dtype, handle)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/xgboost/data.py", line 425, in _meta_from_pandas_series
    data = data.values.astype('float')
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pandas/core/arrays/categorical.py", line 562, in astype
    raise ValueError(msg)
ValueError: Cannot cast object dtype to float64


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pandas/core/arrays/categorical.py", line 551, in astype
    new_cats = new_cats.astype(dtype=dtype, copy=copy)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: '0:01:00'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/xgboost/core.py", line 620, in inner_f
    return func(**kwargs)
           ^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/xgboost/sklearn.py", line 988, in fit
    train_dmatrix, evals = _wrap_evaluation_matrices(
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/xgboost/sklearn.py", line 448, in _wrap_evaluation_matrices
    train_dmatrix = create_dmatrix(
                    ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/xgboost/sklearn.py", line 908, in _create_dmatrix
    return DMatrix(**kwargs, nthread=self.n_jobs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/xgboost/core.py", line 620, in inner_f
    return func(**kwargs)
           ^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/xgboost/core.py", line 754, in __init__
    self.set_info(
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/xgboost/core.py", line 620, in inner_f
    return func(**kwargs)
           ^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/xgboost/core.py", line 819, in set_info
    self.set_label(label)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/xgboost/core.py", line 950, in set_label
    dispatch_meta_backend(self, label, 'label', 'float')
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/xgboost/data.py", line 1121, in dispatch_meta_backend
    _meta_from_pandas_series(data, name, dtype, handle)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/xgboost/data.py", line 425, in _meta_from_pandas_series
    data = data.values.astype('float')
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pandas/core/arrays/categorical.py", line 562, in astype
    raise ValueError(msg)
ValueError: Cannot cast object dtype to float64


2023-11-24 16:49:55,706:INFO:Initializing Light Gradient Boosting Machine
2023-11-24 16:49:55,706:INFO:Total runtime is 0.42877551714579265 minutes
2023-11-24 16:49:55,706:INFO:SubProcess create_model() called ==================================
2023-11-24 16:49:55,706:INFO:Initializing create_model()
2023-11-24 16:49:55,706:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28e4b7bd0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28e9c63d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:49:55,706:INFO:Checking exceptions
2023-11-24 16:49:55,706:INFO:Importing libraries
2023-11-24 16:49:55,706:INFO:Copying training dataset
2023-11-24 16:49:55,709:INFO:Defining folds
2023-11-24 16:49:55,709:INFO:Declaring metric variables
2023-11-24 16:49:55,709:INFO:Importing untrained model
2023-11-24 16:49:55,709:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-24 16:49:55,709:INFO:Starting cross validation
2023-11-24 16:49:55,710:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:49:56,337:WARNING:create_model() for lightgbm raised an exception or returned all 0.0, trying without fit_kwargs:
2023-11-24 16:49:56,338:WARNING:Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/sklearn.py", line 1049, in fit
    super().fit(
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/sklearn.py", line 842, in fit
    self._Booster = train(
                    ^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/engine.py", line 255, in train
    booster = Booster(params=params, train_set=train_set)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 3200, in __init__
    train_set.construct()
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 2276, in construct
    self._lazy_init(data=self.data, label=self.label, reference=None,
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 1937, in _lazy_init
    self.set_label(label)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 2676, in set_label
    label_array = _list_to_1d_numpy(label, dtype=np.float32, name='label')
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 306, in _list_to_1d_numpy
    _check_for_bad_pandas_dtypes(data.to_frame().dtypes)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 666, in _check_for_bad_pandas_dtypes
    raise ValueError('pandas dtypes must be int, float or bool.\n'
ValueError: pandas dtypes must be int, float or bool.
Fields with bad pandas dtypes: Time: category


2023-11-24 16:49:56,338:INFO:Initializing create_model()
2023-11-24 16:49:56,338:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28e4b7bd0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28e9c63d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:49:56,338:INFO:Checking exceptions
2023-11-24 16:49:56,338:INFO:Importing libraries
2023-11-24 16:49:56,338:INFO:Copying training dataset
2023-11-24 16:49:56,341:INFO:Defining folds
2023-11-24 16:49:56,341:INFO:Declaring metric variables
2023-11-24 16:49:56,341:INFO:Importing untrained model
2023-11-24 16:49:56,341:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-24 16:49:56,341:INFO:Starting cross validation
2023-11-24 16:49:56,342:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:49:56,999:ERROR:create_model() for lightgbm raised an exception or returned all 0.0:
2023-11-24 16:49:57,001:ERROR:Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/sklearn.py", line 1049, in fit
    super().fit(
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/sklearn.py", line 842, in fit
    self._Booster = train(
                    ^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/engine.py", line 255, in train
    booster = Booster(params=params, train_set=train_set)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 3200, in __init__
    train_set.construct()
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 2276, in construct
    self._lazy_init(data=self.data, label=self.label, reference=None,
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 1937, in _lazy_init
    self.set_label(label)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 2676, in set_label
    label_array = _list_to_1d_numpy(label, dtype=np.float32, name='label')
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 306, in _list_to_1d_numpy
    _check_for_bad_pandas_dtypes(data.to_frame().dtypes)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 666, in _check_for_bad_pandas_dtypes
    raise ValueError('pandas dtypes must be int, float or bool.\n'
ValueError: pandas dtypes must be int, float or bool.
Fields with bad pandas dtypes: Time: category


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/sklearn.py", line 1049, in fit
    super().fit(
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/sklearn.py", line 842, in fit
    self._Booster = train(
                    ^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/engine.py", line 255, in train
    booster = Booster(params=params, train_set=train_set)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 3200, in __init__
    train_set.construct()
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 2276, in construct
    self._lazy_init(data=self.data, label=self.label, reference=None,
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 1937, in _lazy_init
    self.set_label(label)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 2676, in set_label
    label_array = _list_to_1d_numpy(label, dtype=np.float32, name='label')
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 306, in _list_to_1d_numpy
    _check_for_bad_pandas_dtypes(data.to_frame().dtypes)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 666, in _check_for_bad_pandas_dtypes
    raise ValueError('pandas dtypes must be int, float or bool.\n'
ValueError: pandas dtypes must be int, float or bool.
Fields with bad pandas dtypes: Time: category


2023-11-24 16:49:57,001:INFO:Initializing Dummy Regressor
2023-11-24 16:49:57,001:INFO:Total runtime is 0.4503737529118856 minutes
2023-11-24 16:49:57,002:INFO:SubProcess create_model() called ==================================
2023-11-24 16:49:57,002:INFO:Initializing create_model()
2023-11-24 16:49:57,002:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28e4b7bd0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28e9c63d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:49:57,002:INFO:Checking exceptions
2023-11-24 16:49:57,002:INFO:Importing libraries
2023-11-24 16:49:57,002:INFO:Copying training dataset
2023-11-24 16:49:57,005:INFO:Defining folds
2023-11-24 16:49:57,005:INFO:Declaring metric variables
2023-11-24 16:49:57,005:INFO:Importing untrained model
2023-11-24 16:49:57,005:INFO:Dummy Regressor Imported successfully
2023-11-24 16:49:57,005:INFO:Starting cross validation
2023-11-24 16:49:57,006:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:49:57,681:WARNING:create_model() for dummy raised an exception or returned all 0.0, trying without fit_kwargs:
2023-11-24 16:49:57,681:WARNING:Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/dummy.py", line 554, in fit
    self.constant_ = np.average(y, axis=0, weights=sample_weight)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/lib/function_base.py", line 520, in average
    avg = a.mean(axis, **keepdims_kw)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/_methods.py", line 121, in _mean
    ret = um.true_divide(
          ^^^^^^^^^^^^^^^
TypeError: unsupported operand type(s) for /: 'str' and 'int'


2023-11-24 16:49:57,681:INFO:Initializing create_model()
2023-11-24 16:49:57,681:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28e4b7bd0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28e9c63d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:49:57,681:INFO:Checking exceptions
2023-11-24 16:49:57,681:INFO:Importing libraries
2023-11-24 16:49:57,681:INFO:Copying training dataset
2023-11-24 16:49:57,684:INFO:Defining folds
2023-11-24 16:49:57,684:INFO:Declaring metric variables
2023-11-24 16:49:57,684:INFO:Importing untrained model
2023-11-24 16:49:57,684:INFO:Dummy Regressor Imported successfully
2023-11-24 16:49:57,684:INFO:Starting cross validation
2023-11-24 16:49:57,685:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:49:58,306:ERROR:create_model() for dummy raised an exception or returned all 0.0:
2023-11-24 16:49:58,307:ERROR:Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/dummy.py", line 554, in fit
    self.constant_ = np.average(y, axis=0, weights=sample_weight)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/lib/function_base.py", line 520, in average
    avg = a.mean(axis, **keepdims_kw)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/_methods.py", line 121, in _mean
    ret = um.true_divide(
          ^^^^^^^^^^^^^^^
TypeError: unsupported operand type(s) for /: 'str' and 'int'


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/dummy.py", line 554, in fit
    self.constant_ = np.average(y, axis=0, weights=sample_weight)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/lib/function_base.py", line 520, in average
    avg = a.mean(axis, **keepdims_kw)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/numpy/core/_methods.py", line 121, in _mean
    ret = um.true_divide(
          ^^^^^^^^^^^^^^^
TypeError: unsupported operand type(s) for /: 'str' and 'int'


2023-11-24 16:49:58,308:INFO:_master_model_container: 2
2023-11-24 16:49:58,308:INFO:_display_container: 2
2023-11-24 16:49:58,308:INFO:[]
2023-11-24 16:49:58,308:INFO:compare_models() successfully completed......................................
2023-11-24 16:49:58,313:INFO:Initializing save_model()
2023-11-24 16:49:58,315:INFO:save_model(model=[], model_name=best_model, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/46/tcczvndd7xj_pqs5r176bl600000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Number_of_vehicles_involved',
                                             'Number_of_casualties'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Day_of_week',
                                             'Age_band_of_driver',
                                             'Sex_of_driver',
                                             'Educational_le...
                                                                    'Road_surface_type',
                                                                    'Road_surface_conditions',
                                                                    'Light_conditions',
                                                                    'Weather_conditions',
                                                                    'Type_of_collision',
                                                                    'Vehicle_movement',
                                                                    'Casualty_class',
                                                                    'Sex_of_casualty',
                                                                    'Age_band_of_casualty',
                                                                    'Casualty_severity',
                                                                    'Work_of_casuality',
                                                                    'Fitness_of_casuality',
                                                                    'Pedestrian_movement',
                                                                    'Cause_of_accident',
                                                                    'Accident_severity'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True)))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2023-11-24 16:49:58,315:INFO:Adding model into prep_pipe
2023-11-24 16:49:58,325:INFO:best_model.pkl saved in current working directory
2023-11-24 16:49:58,328:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Number_of_vehicles_involved',
                                             'Number_of_casualties'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Day_of_week',
                                             'Age_band_of_driver',
                                             'Sex_of_driver',
                                             'Educational_level',
                                             'Vehicle_driver_relation',
                                             'Driving_experience',
                                             'Ty...
                                                                    'Road_surface_conditions',
                                                                    'Light_conditions',
                                                                    'Weather_conditions',
                                                                    'Type_of_collision',
                                                                    'Vehicle_movement',
                                                                    'Casualty_class',
                                                                    'Sex_of_casualty',
                                                                    'Age_band_of_casualty',
                                                                    'Casualty_severity',
                                                                    'Work_of_casuality',
                                                                    'Fitness_of_casuality',
                                                                    'Pedestrian_movement',
                                                                    'Cause_of_accident',
                                                                    'Accident_severity'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('trained_model', [])])
2023-11-24 16:49:58,328:INFO:save_model() successfully completed......................................
2023-11-24 16:50:08,788:INFO:PyCaret ClassificationExperiment
2023-11-24 16:50:08,788:INFO:Logging name: clf-default-name
2023-11-24 16:50:08,788:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-11-24 16:50:08,788:INFO:version 3.2.0
2023-11-24 16:50:08,788:INFO:Initializing setup()
2023-11-24 16:50:08,788:INFO:self.USI: 27c1
2023-11-24 16:50:08,788:INFO:self._variable_keys: {'_available_plots', 'fix_imbalance', 'fold_shuffle_param', 'exp_id', 'y_test', 'y_train', 'n_jobs_param', 'memory', 'log_plots_param', 'html_param', 'gpu_param', '_ml_usecase', 'idx', 'pipeline', 'is_multiclass', 'seed', 'X_test', 'logging_param', 'data', 'fold_generator', 'exp_name_log', 'USI', 'X', 'fold_groups_param', 'X_train', 'y', 'gpu_n_jobs_param', 'target_param'}
2023-11-24 16:50:08,788:INFO:Checking environment
2023-11-24 16:50:08,788:INFO:python_version: 3.11.5
2023-11-24 16:50:08,788:INFO:python_build: ('main', 'Sep 11 2023 08:31:25')
2023-11-24 16:50:08,788:INFO:machine: arm64
2023-11-24 16:50:08,788:INFO:platform: macOS-14.0-arm64-arm-64bit
2023-11-24 16:50:08,789:INFO:Memory: svmem(total=17179869184, available=3844587520, percent=77.6, used=5813354496, free=35340288, active=3835150336, inactive=3807756288, wired=1978204160)
2023-11-24 16:50:08,789:INFO:Physical Core: 10
2023-11-24 16:50:08,789:INFO:Logical Core: 10
2023-11-24 16:50:08,789:INFO:Checking libraries
2023-11-24 16:50:08,789:INFO:System:
2023-11-24 16:50:08,789:INFO:    python: 3.11.5 (main, Sep 11 2023, 08:31:25) [Clang 14.0.6 ]
2023-11-24 16:50:08,789:INFO:executable: /Users/saiakhil/anaconda3/envs/mlauto/bin/python
2023-11-24 16:50:08,789:INFO:   machine: macOS-14.0-arm64-arm-64bit
2023-11-24 16:50:08,789:INFO:PyCaret required dependencies:
2023-11-24 16:50:08,789:INFO:                 pip: 23.3.1
2023-11-24 16:50:08,789:INFO:          setuptools: 68.0.0
2023-11-24 16:50:08,789:INFO:             pycaret: 3.2.0
2023-11-24 16:50:08,789:INFO:             IPython: 8.15.0
2023-11-24 16:50:08,789:INFO:          ipywidgets: 8.1.1
2023-11-24 16:50:08,789:INFO:                tqdm: 4.66.1
2023-11-24 16:50:08,789:INFO:               numpy: 1.25.2
2023-11-24 16:50:08,789:INFO:              pandas: 1.5.3
2023-11-24 16:50:08,789:INFO:              jinja2: 3.1.2
2023-11-24 16:50:08,789:INFO:               scipy: 1.11.3
2023-11-24 16:50:08,789:INFO:              joblib: 1.3.2
2023-11-24 16:50:08,789:INFO:             sklearn: 1.2.2
2023-11-24 16:50:08,789:INFO:                pyod: 1.1.2
2023-11-24 16:50:08,789:INFO:            imblearn: 0.11.0
2023-11-24 16:50:08,789:INFO:   category_encoders: 2.6.3
2023-11-24 16:50:08,789:INFO:            lightgbm: 4.1.0
2023-11-24 16:50:08,789:INFO:               numba: 0.58.1
2023-11-24 16:50:08,789:INFO:            requests: 2.31.0
2023-11-24 16:50:08,789:INFO:          matplotlib: 3.6.0
2023-11-24 16:50:08,789:INFO:          scikitplot: 0.3.7
2023-11-24 16:50:08,789:INFO:         yellowbrick: 1.5
2023-11-24 16:50:08,789:INFO:              plotly: 5.18.0
2023-11-24 16:50:08,789:INFO:    plotly-resampler: Not installed
2023-11-24 16:50:08,789:INFO:             kaleido: 0.2.1
2023-11-24 16:50:08,789:INFO:           schemdraw: 0.15
2023-11-24 16:50:08,789:INFO:         statsmodels: 0.14.0
2023-11-24 16:50:08,789:INFO:              sktime: 0.21.1
2023-11-24 16:50:08,789:INFO:               tbats: 1.1.3
2023-11-24 16:50:08,789:INFO:            pmdarima: 2.0.4
2023-11-24 16:50:08,789:INFO:              psutil: 5.9.6
2023-11-24 16:50:08,789:INFO:          markupsafe: 2.1.3
2023-11-24 16:50:08,789:INFO:             pickle5: Not installed
2023-11-24 16:50:08,789:INFO:         cloudpickle: 3.0.0
2023-11-24 16:50:08,789:INFO:         deprecation: 2.1.0
2023-11-24 16:50:08,789:INFO:              xxhash: 3.4.1
2023-11-24 16:50:08,789:INFO:           wurlitzer: 3.0.3
2023-11-24 16:50:08,789:INFO:PyCaret optional dependencies:
2023-11-24 16:50:08,789:INFO:                shap: Not installed
2023-11-24 16:50:08,789:INFO:           interpret: Not installed
2023-11-24 16:50:08,789:INFO:                umap: Not installed
2023-11-24 16:50:08,789:INFO:     ydata_profiling: 4.6.2
2023-11-24 16:50:08,789:INFO:  explainerdashboard: Not installed
2023-11-24 16:50:08,789:INFO:             autoviz: Not installed
2023-11-24 16:50:08,789:INFO:           fairlearn: Not installed
2023-11-24 16:50:08,789:INFO:          deepchecks: Not installed
2023-11-24 16:50:08,789:INFO:             xgboost: 1.7.3
2023-11-24 16:50:08,789:INFO:            catboost: Not installed
2023-11-24 16:50:08,789:INFO:              kmodes: Not installed
2023-11-24 16:50:08,789:INFO:             mlxtend: Not installed
2023-11-24 16:50:08,789:INFO:       statsforecast: Not installed
2023-11-24 16:50:08,789:INFO:        tune_sklearn: Not installed
2023-11-24 16:50:08,789:INFO:                 ray: Not installed
2023-11-24 16:50:08,789:INFO:            hyperopt: Not installed
2023-11-24 16:50:08,789:INFO:              optuna: Not installed
2023-11-24 16:50:08,789:INFO:               skopt: Not installed
2023-11-24 16:50:08,789:INFO:              mlflow: Not installed
2023-11-24 16:50:08,789:INFO:              gradio: Not installed
2023-11-24 16:50:08,789:INFO:             fastapi: Not installed
2023-11-24 16:50:08,789:INFO:             uvicorn: Not installed
2023-11-24 16:50:08,789:INFO:              m2cgen: Not installed
2023-11-24 16:50:08,789:INFO:           evidently: Not installed
2023-11-24 16:50:08,789:INFO:               fugue: Not installed
2023-11-24 16:50:08,789:INFO:           streamlit: 1.28.2
2023-11-24 16:50:08,789:INFO:             prophet: Not installed
2023-11-24 16:50:08,789:INFO:None
2023-11-24 16:50:08,789:INFO:Set up data.
2023-11-24 16:50:08,814:INFO:Set up folding strategy.
2023-11-24 16:50:08,814:INFO:Set up train/test split.
2023-11-24 16:50:08,821:INFO:Set up index.
2023-11-24 16:50:08,821:INFO:Assigning column types.
2023-11-24 16:50:08,823:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-24 16:50:08,841:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 16:50:08,841:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:50:08,852:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:50:08,853:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:50:08,871:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 16:50:08,871:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:50:08,882:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:50:08,883:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:50:08,883:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-11-24 16:50:08,902:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:50:08,912:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:50:08,914:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:50:08,932:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:50:08,943:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:50:08,944:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:50:08,944:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-11-24 16:50:08,973:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:50:08,974:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:50:09,003:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:50:09,004:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:50:09,005:INFO:Preparing preprocessing pipeline...
2023-11-24 16:50:09,005:INFO:Set up label encoding.
2023-11-24 16:50:09,005:INFO:Set up simple imputation.
2023-11-24 16:50:09,008:INFO:Set up encoding of categorical features.
2023-11-24 16:50:09,430:INFO:Finished creating preprocessing pipeline.
2023-11-24 16:50:09,433:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/46/tcczvndd7xj_pqs5r176bl600000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Number_of_vehicles_involved',
                                             'Number_of_casualties'],
                                    transformer=SimpleImputer(add_i...
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['Time'],
                                    transformer=TargetEncoder(cols=['Time'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2023-11-24 16:50:09,433:INFO:Creating final display dataframe.
2023-11-24 16:50:09,896:INFO:Setup _display_container:                     Description                                              Value
0                    Session id                                               6617
1                        Target                                  Accident_severity
2                   Target type                                         Multiclass
3                Target mapping  Fatal injury: 0, Serious Injury: 1, Slight Inj...
4           Original data shape                                        (12316, 32)
5        Transformed data shape                                       (12316, 208)
6   Transformed train set shape                                        (8621, 208)
7    Transformed test set shape                                        (3695, 208)
8              Numeric features                                                  2
9          Categorical features                                                 29
10     Rows with missing values                                              76.5%
11                   Preprocess                                               True
12              Imputation type                                             simple
13           Numeric imputation                                               mean
14       Categorical imputation                                               mode
15     Maximum one-hot encoding                                                 25
16              Encoding method                                               None
17               Fold Generator                                    StratifiedKFold
18                  Fold Number                                                 10
19                     CPU Jobs                                                 -1
20                      Use GPU                                              False
21               Log Experiment                                              False
22              Experiment Name                                   clf-default-name
23                          USI                                               27c1
2023-11-24 16:50:09,926:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:50:09,927:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:50:09,956:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:50:09,957:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:50:09,958:INFO:setup() successfully completed in 1.17s...............
2023-11-24 16:51:46,648:INFO:PyCaret RegressionExperiment
2023-11-24 16:51:46,648:INFO:Logging name: reg-default-name
2023-11-24 16:51:46,648:INFO:ML Usecase: MLUsecase.REGRESSION
2023-11-24 16:51:46,648:INFO:version 3.2.0
2023-11-24 16:51:46,648:INFO:Initializing setup()
2023-11-24 16:51:46,648:INFO:self.USI: 3d76
2023-11-24 16:51:46,648:INFO:self._variable_keys: {'_available_plots', 'fold_shuffle_param', 'exp_id', 'y_test', 'y_train', 'n_jobs_param', 'memory', 'log_plots_param', 'html_param', 'gpu_param', '_ml_usecase', 'idx', 'pipeline', 'seed', 'X_test', 'transform_target_param', 'logging_param', 'data', 'fold_generator', 'exp_name_log', 'USI', 'X', 'fold_groups_param', 'X_train', 'y', 'gpu_n_jobs_param', 'target_param'}
2023-11-24 16:51:46,648:INFO:Checking environment
2023-11-24 16:51:46,648:INFO:python_version: 3.11.5
2023-11-24 16:51:46,648:INFO:python_build: ('main', 'Sep 11 2023 08:31:25')
2023-11-24 16:51:46,648:INFO:machine: arm64
2023-11-24 16:51:46,648:INFO:platform: macOS-14.0-arm64-arm-64bit
2023-11-24 16:51:46,648:INFO:Memory: svmem(total=17179869184, available=4454318080, percent=74.1, used=6359334912, free=39567360, active=4434493440, inactive=4411768832, wired=1924841472)
2023-11-24 16:51:46,648:INFO:Physical Core: 10
2023-11-24 16:51:46,648:INFO:Logical Core: 10
2023-11-24 16:51:46,648:INFO:Checking libraries
2023-11-24 16:51:46,648:INFO:System:
2023-11-24 16:51:46,648:INFO:    python: 3.11.5 (main, Sep 11 2023, 08:31:25) [Clang 14.0.6 ]
2023-11-24 16:51:46,648:INFO:executable: /Users/saiakhil/anaconda3/envs/mlauto/bin/python
2023-11-24 16:51:46,648:INFO:   machine: macOS-14.0-arm64-arm-64bit
2023-11-24 16:51:46,648:INFO:PyCaret required dependencies:
2023-11-24 16:51:46,649:INFO:                 pip: 23.3.1
2023-11-24 16:51:46,649:INFO:          setuptools: 68.0.0
2023-11-24 16:51:46,649:INFO:             pycaret: 3.2.0
2023-11-24 16:51:46,649:INFO:             IPython: 8.15.0
2023-11-24 16:51:46,649:INFO:          ipywidgets: 8.1.1
2023-11-24 16:51:46,649:INFO:                tqdm: 4.66.1
2023-11-24 16:51:46,649:INFO:               numpy: 1.25.2
2023-11-24 16:51:46,649:INFO:              pandas: 1.5.3
2023-11-24 16:51:46,649:INFO:              jinja2: 3.1.2
2023-11-24 16:51:46,649:INFO:               scipy: 1.11.3
2023-11-24 16:51:46,649:INFO:              joblib: 1.3.2
2023-11-24 16:51:46,649:INFO:             sklearn: 1.2.2
2023-11-24 16:51:46,649:INFO:                pyod: 1.1.2
2023-11-24 16:51:46,649:INFO:            imblearn: 0.11.0
2023-11-24 16:51:46,649:INFO:   category_encoders: 2.6.3
2023-11-24 16:51:46,649:INFO:            lightgbm: 4.1.0
2023-11-24 16:51:46,649:INFO:               numba: 0.58.1
2023-11-24 16:51:46,649:INFO:            requests: 2.31.0
2023-11-24 16:51:46,649:INFO:          matplotlib: 3.6.0
2023-11-24 16:51:46,649:INFO:          scikitplot: 0.3.7
2023-11-24 16:51:46,649:INFO:         yellowbrick: 1.5
2023-11-24 16:51:46,649:INFO:              plotly: 5.18.0
2023-11-24 16:51:46,649:INFO:    plotly-resampler: Not installed
2023-11-24 16:51:46,649:INFO:             kaleido: 0.2.1
2023-11-24 16:51:46,649:INFO:           schemdraw: 0.15
2023-11-24 16:51:46,649:INFO:         statsmodels: 0.14.0
2023-11-24 16:51:46,649:INFO:              sktime: 0.21.1
2023-11-24 16:51:46,649:INFO:               tbats: 1.1.3
2023-11-24 16:51:46,649:INFO:            pmdarima: 2.0.4
2023-11-24 16:51:46,649:INFO:              psutil: 5.9.6
2023-11-24 16:51:46,649:INFO:          markupsafe: 2.1.3
2023-11-24 16:51:46,649:INFO:             pickle5: Not installed
2023-11-24 16:51:46,649:INFO:         cloudpickle: 3.0.0
2023-11-24 16:51:46,649:INFO:         deprecation: 2.1.0
2023-11-24 16:51:46,649:INFO:              xxhash: 3.4.1
2023-11-24 16:51:46,649:INFO:           wurlitzer: 3.0.3
2023-11-24 16:51:46,649:INFO:PyCaret optional dependencies:
2023-11-24 16:51:46,649:INFO:                shap: Not installed
2023-11-24 16:51:46,649:INFO:           interpret: Not installed
2023-11-24 16:51:46,649:INFO:                umap: Not installed
2023-11-24 16:51:46,649:INFO:     ydata_profiling: 4.6.2
2023-11-24 16:51:46,649:INFO:  explainerdashboard: Not installed
2023-11-24 16:51:46,649:INFO:             autoviz: Not installed
2023-11-24 16:51:46,649:INFO:           fairlearn: Not installed
2023-11-24 16:51:46,649:INFO:          deepchecks: Not installed
2023-11-24 16:51:46,649:INFO:             xgboost: 1.7.3
2023-11-24 16:51:46,649:INFO:            catboost: Not installed
2023-11-24 16:51:46,649:INFO:              kmodes: Not installed
2023-11-24 16:51:46,649:INFO:             mlxtend: Not installed
2023-11-24 16:51:46,649:INFO:       statsforecast: Not installed
2023-11-24 16:51:46,649:INFO:        tune_sklearn: Not installed
2023-11-24 16:51:46,649:INFO:                 ray: Not installed
2023-11-24 16:51:46,649:INFO:            hyperopt: Not installed
2023-11-24 16:51:46,649:INFO:              optuna: Not installed
2023-11-24 16:51:46,649:INFO:               skopt: Not installed
2023-11-24 16:51:46,649:INFO:              mlflow: Not installed
2023-11-24 16:51:46,649:INFO:              gradio: Not installed
2023-11-24 16:51:46,649:INFO:             fastapi: Not installed
2023-11-24 16:51:46,649:INFO:             uvicorn: Not installed
2023-11-24 16:51:46,649:INFO:              m2cgen: Not installed
2023-11-24 16:51:46,649:INFO:           evidently: Not installed
2023-11-24 16:51:46,649:INFO:               fugue: Not installed
2023-11-24 16:51:46,649:INFO:           streamlit: 1.28.2
2023-11-24 16:51:46,649:INFO:             prophet: Not installed
2023-11-24 16:51:46,649:INFO:None
2023-11-24 16:51:46,649:INFO:Set up data.
2023-11-24 16:51:46,674:INFO:Set up folding strategy.
2023-11-24 16:51:46,674:INFO:Set up train/test split.
2023-11-24 16:51:46,678:INFO:Set up index.
2023-11-24 16:51:46,678:INFO:Assigning column types.
2023-11-24 16:51:46,679:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-24 16:51:46,680:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-11-24 16:51:46,681:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-24 16:51:46,683:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-24 16:51:46,706:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 16:51:46,723:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 16:51:46,724:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:51:46,725:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:51:46,725:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-11-24 16:51:46,726:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-24 16:51:46,728:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-24 16:51:46,750:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 16:51:46,767:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 16:51:46,768:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:51:46,769:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:51:46,769:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-11-24 16:51:46,771:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-24 16:51:46,773:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-24 16:51:46,795:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 16:51:46,812:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 16:51:46,813:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:51:46,814:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:51:46,815:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-24 16:51:46,817:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-24 16:51:46,840:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 16:51:46,857:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 16:51:46,857:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:51:46,858:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:51:46,858:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-11-24 16:51:46,862:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-24 16:51:46,887:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 16:51:46,904:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 16:51:46,905:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:51:46,906:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:51:46,909:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-24 16:51:46,932:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 16:51:46,950:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 16:51:46,950:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:51:46,951:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:51:46,951:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-11-24 16:51:46,978:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 16:51:46,996:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 16:51:46,996:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:51:46,997:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:51:47,025:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 16:51:47,043:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 16:51:47,043:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:51:47,044:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:51:47,044:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-11-24 16:51:47,071:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 16:51:47,088:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:51:47,089:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:51:47,116:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 16:51:47,133:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:51:47,134:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:51:47,134:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-11-24 16:51:47,178:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:51:47,179:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:51:47,223:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:51:47,224:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:51:47,225:INFO:Preparing preprocessing pipeline...
2023-11-24 16:51:47,225:INFO:Set up simple imputation.
2023-11-24 16:51:47,227:INFO:Set up encoding of categorical features.
2023-11-24 16:51:47,516:INFO:Finished creating preprocessing pipeline.
2023-11-24 16:51:47,519:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/46/tcczvndd7xj_pqs5r176bl600000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Number_of_vehicles_involved',
                                             'Number_of_casualties'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Day_of_week',
                                             'Age_band_of_driver',
                                             'Sex_of_driver',
                                             'Educational_le...
                                                                    'Road_surface_type',
                                                                    'Road_surface_conditions',
                                                                    'Light_conditions',
                                                                    'Weather_conditions',
                                                                    'Type_of_collision',
                                                                    'Vehicle_movement',
                                                                    'Casualty_class',
                                                                    'Sex_of_casualty',
                                                                    'Age_band_of_casualty',
                                                                    'Casualty_severity',
                                                                    'Work_of_casuality',
                                                                    'Fitness_of_casuality',
                                                                    'Pedestrian_movement',
                                                                    'Cause_of_accident',
                                                                    'Accident_severity'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True)))])
2023-11-24 16:51:47,519:INFO:Creating final display dataframe.
2023-11-24 16:51:47,936:INFO:Setup _display_container:                     Description             Value
0                    Session id              3932
1                        Target              Time
2                   Target type        Regression
3           Original data shape       (12316, 32)
4        Transformed data shape      (12316, 210)
5   Transformed train set shape       (8621, 210)
6    Transformed test set shape       (3695, 210)
7              Numeric features                 2
8          Categorical features                29
9      Rows with missing values             76.5%
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator             KFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  reg-default-name
22                          USI              3d76
2023-11-24 16:51:47,980:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:51:47,981:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:51:48,023:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:51:48,024:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:51:48,025:INFO:setup() successfully completed in 1.38s...............
2023-11-24 16:52:00,803:INFO:PyCaret RegressionExperiment
2023-11-24 16:52:00,803:INFO:Logging name: reg-default-name
2023-11-24 16:52:00,803:INFO:ML Usecase: MLUsecase.REGRESSION
2023-11-24 16:52:00,803:INFO:version 3.2.0
2023-11-24 16:52:00,803:INFO:Initializing setup()
2023-11-24 16:52:00,803:INFO:self.USI: 3526
2023-11-24 16:52:00,803:INFO:self._variable_keys: {'_available_plots', 'fold_shuffle_param', 'exp_id', 'y_test', 'y_train', 'n_jobs_param', 'memory', 'log_plots_param', 'html_param', 'gpu_param', '_ml_usecase', 'idx', 'pipeline', 'seed', 'X_test', 'transform_target_param', 'logging_param', 'data', 'fold_generator', 'exp_name_log', 'USI', 'X', 'fold_groups_param', 'X_train', 'y', 'gpu_n_jobs_param', 'target_param'}
2023-11-24 16:52:00,803:INFO:Checking environment
2023-11-24 16:52:00,803:INFO:python_version: 3.11.5
2023-11-24 16:52:00,803:INFO:python_build: ('main', 'Sep 11 2023 08:31:25')
2023-11-24 16:52:00,803:INFO:machine: arm64
2023-11-24 16:52:00,803:INFO:platform: macOS-14.0-arm64-arm-64bit
2023-11-24 16:52:00,803:INFO:Memory: svmem(total=17179869184, available=4358062080, percent=74.6, used=6354321408, free=37552128, active=4398809088, inactive=4316872704, wired=1955512320)
2023-11-24 16:52:00,803:INFO:Physical Core: 10
2023-11-24 16:52:00,803:INFO:Logical Core: 10
2023-11-24 16:52:00,803:INFO:Checking libraries
2023-11-24 16:52:00,803:INFO:System:
2023-11-24 16:52:00,803:INFO:    python: 3.11.5 (main, Sep 11 2023, 08:31:25) [Clang 14.0.6 ]
2023-11-24 16:52:00,803:INFO:executable: /Users/saiakhil/anaconda3/envs/mlauto/bin/python
2023-11-24 16:52:00,803:INFO:   machine: macOS-14.0-arm64-arm-64bit
2023-11-24 16:52:00,803:INFO:PyCaret required dependencies:
2023-11-24 16:52:00,803:INFO:                 pip: 23.3.1
2023-11-24 16:52:00,803:INFO:          setuptools: 68.0.0
2023-11-24 16:52:00,803:INFO:             pycaret: 3.2.0
2023-11-24 16:52:00,803:INFO:             IPython: 8.15.0
2023-11-24 16:52:00,803:INFO:          ipywidgets: 8.1.1
2023-11-24 16:52:00,803:INFO:                tqdm: 4.66.1
2023-11-24 16:52:00,803:INFO:               numpy: 1.25.2
2023-11-24 16:52:00,803:INFO:              pandas: 1.5.3
2023-11-24 16:52:00,803:INFO:              jinja2: 3.1.2
2023-11-24 16:52:00,803:INFO:               scipy: 1.11.3
2023-11-24 16:52:00,803:INFO:              joblib: 1.3.2
2023-11-24 16:52:00,803:INFO:             sklearn: 1.2.2
2023-11-24 16:52:00,803:INFO:                pyod: 1.1.2
2023-11-24 16:52:00,803:INFO:            imblearn: 0.11.0
2023-11-24 16:52:00,803:INFO:   category_encoders: 2.6.3
2023-11-24 16:52:00,803:INFO:            lightgbm: 4.1.0
2023-11-24 16:52:00,803:INFO:               numba: 0.58.1
2023-11-24 16:52:00,803:INFO:            requests: 2.31.0
2023-11-24 16:52:00,803:INFO:          matplotlib: 3.6.0
2023-11-24 16:52:00,803:INFO:          scikitplot: 0.3.7
2023-11-24 16:52:00,803:INFO:         yellowbrick: 1.5
2023-11-24 16:52:00,803:INFO:              plotly: 5.18.0
2023-11-24 16:52:00,803:INFO:    plotly-resampler: Not installed
2023-11-24 16:52:00,803:INFO:             kaleido: 0.2.1
2023-11-24 16:52:00,803:INFO:           schemdraw: 0.15
2023-11-24 16:52:00,803:INFO:         statsmodels: 0.14.0
2023-11-24 16:52:00,803:INFO:              sktime: 0.21.1
2023-11-24 16:52:00,803:INFO:               tbats: 1.1.3
2023-11-24 16:52:00,803:INFO:            pmdarima: 2.0.4
2023-11-24 16:52:00,803:INFO:              psutil: 5.9.6
2023-11-24 16:52:00,803:INFO:          markupsafe: 2.1.3
2023-11-24 16:52:00,803:INFO:             pickle5: Not installed
2023-11-24 16:52:00,803:INFO:         cloudpickle: 3.0.0
2023-11-24 16:52:00,803:INFO:         deprecation: 2.1.0
2023-11-24 16:52:00,803:INFO:              xxhash: 3.4.1
2023-11-24 16:52:00,803:INFO:           wurlitzer: 3.0.3
2023-11-24 16:52:00,803:INFO:PyCaret optional dependencies:
2023-11-24 16:52:00,803:INFO:                shap: Not installed
2023-11-24 16:52:00,803:INFO:           interpret: Not installed
2023-11-24 16:52:00,803:INFO:                umap: Not installed
2023-11-24 16:52:00,803:INFO:     ydata_profiling: 4.6.2
2023-11-24 16:52:00,803:INFO:  explainerdashboard: Not installed
2023-11-24 16:52:00,803:INFO:             autoviz: Not installed
2023-11-24 16:52:00,803:INFO:           fairlearn: Not installed
2023-11-24 16:52:00,803:INFO:          deepchecks: Not installed
2023-11-24 16:52:00,803:INFO:             xgboost: 1.7.3
2023-11-24 16:52:00,803:INFO:            catboost: Not installed
2023-11-24 16:52:00,803:INFO:              kmodes: Not installed
2023-11-24 16:52:00,803:INFO:             mlxtend: Not installed
2023-11-24 16:52:00,803:INFO:       statsforecast: Not installed
2023-11-24 16:52:00,803:INFO:        tune_sklearn: Not installed
2023-11-24 16:52:00,803:INFO:                 ray: Not installed
2023-11-24 16:52:00,803:INFO:            hyperopt: Not installed
2023-11-24 16:52:00,803:INFO:              optuna: Not installed
2023-11-24 16:52:00,803:INFO:               skopt: Not installed
2023-11-24 16:52:00,803:INFO:              mlflow: Not installed
2023-11-24 16:52:00,803:INFO:              gradio: Not installed
2023-11-24 16:52:00,803:INFO:             fastapi: Not installed
2023-11-24 16:52:00,804:INFO:             uvicorn: Not installed
2023-11-24 16:52:00,804:INFO:              m2cgen: Not installed
2023-11-24 16:52:00,804:INFO:           evidently: Not installed
2023-11-24 16:52:00,804:INFO:               fugue: Not installed
2023-11-24 16:52:00,804:INFO:           streamlit: 1.28.2
2023-11-24 16:52:00,804:INFO:             prophet: Not installed
2023-11-24 16:52:00,804:INFO:None
2023-11-24 16:52:00,804:INFO:Set up data.
2023-11-24 16:52:00,830:INFO:Set up folding strategy.
2023-11-24 16:52:00,830:INFO:Set up train/test split.
2023-11-24 16:52:00,834:INFO:Set up index.
2023-11-24 16:52:00,834:INFO:Assigning column types.
2023-11-24 16:52:00,835:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-24 16:52:00,836:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-11-24 16:52:00,837:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-24 16:52:00,839:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-24 16:52:00,863:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 16:52:00,881:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 16:52:00,881:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:52:00,882:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:52:00,882:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-11-24 16:52:00,884:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-24 16:52:00,886:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-24 16:52:00,909:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 16:52:00,926:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 16:52:00,926:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:52:00,927:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:52:00,927:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-11-24 16:52:00,929:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-24 16:52:00,931:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-24 16:52:00,954:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 16:52:00,971:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 16:52:00,971:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:52:00,972:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:52:00,974:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-24 16:52:00,976:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-24 16:52:00,998:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 16:52:01,016:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 16:52:01,016:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:52:01,017:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:52:01,017:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-11-24 16:52:01,020:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-24 16:52:01,043:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 16:52:01,061:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 16:52:01,061:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:52:01,062:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:52:01,065:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-24 16:52:01,088:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 16:52:01,105:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 16:52:01,105:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:52:01,106:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:52:01,106:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-11-24 16:52:01,131:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 16:52:01,148:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 16:52:01,148:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:52:01,149:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:52:01,175:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 16:52:01,192:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 16:52:01,192:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:52:01,193:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:52:01,193:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-11-24 16:52:01,219:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 16:52:01,236:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:52:01,237:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:52:01,262:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 16:52:01,279:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:52:01,280:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:52:01,280:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-11-24 16:52:01,325:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:52:01,326:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:52:01,368:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:52:01,369:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:52:01,369:INFO:Preparing preprocessing pipeline...
2023-11-24 16:52:01,369:INFO:Set up simple imputation.
2023-11-24 16:52:01,372:INFO:Set up encoding of categorical features.
2023-11-24 16:52:01,627:INFO:Finished creating preprocessing pipeline.
2023-11-24 16:52:01,629:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/46/tcczvndd7xj_pqs5r176bl600000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Number_of_vehicles_involved',
                                             'Number_of_casualties'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Day_of_week',
                                             'Age_band_of_driver',
                                             'Sex_of_driver',
                                             'Educational_le...
                                                                    'Road_surface_type',
                                                                    'Road_surface_conditions',
                                                                    'Light_conditions',
                                                                    'Weather_conditions',
                                                                    'Type_of_collision',
                                                                    'Vehicle_movement',
                                                                    'Casualty_class',
                                                                    'Sex_of_casualty',
                                                                    'Age_band_of_casualty',
                                                                    'Casualty_severity',
                                                                    'Work_of_casuality',
                                                                    'Fitness_of_casuality',
                                                                    'Pedestrian_movement',
                                                                    'Cause_of_accident',
                                                                    'Accident_severity'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True)))])
2023-11-24 16:52:01,629:INFO:Creating final display dataframe.
2023-11-24 16:52:02,045:INFO:Setup _display_container:                     Description             Value
0                    Session id              3844
1                        Target              Time
2                   Target type        Regression
3           Original data shape       (12316, 32)
4        Transformed data shape      (12316, 209)
5   Transformed train set shape       (8621, 209)
6    Transformed test set shape       (3695, 209)
7              Numeric features                 2
8          Categorical features                29
9      Rows with missing values             76.5%
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator             KFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  reg-default-name
22                          USI              3526
2023-11-24 16:52:02,090:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:52:02,091:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:52:02,133:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:52:02,134:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:52:02,135:INFO:setup() successfully completed in 1.33s...............
2023-11-24 16:52:37,897:INFO:PyCaret RegressionExperiment
2023-11-24 16:52:37,898:INFO:Logging name: reg-default-name
2023-11-24 16:52:37,898:INFO:ML Usecase: MLUsecase.REGRESSION
2023-11-24 16:52:37,898:INFO:version 3.2.0
2023-11-24 16:52:37,898:INFO:Initializing setup()
2023-11-24 16:52:37,898:INFO:self.USI: 9f9a
2023-11-24 16:52:37,898:INFO:self._variable_keys: {'_available_plots', 'fold_shuffle_param', 'exp_id', 'y_test', 'y_train', 'n_jobs_param', 'memory', 'log_plots_param', 'html_param', 'gpu_param', '_ml_usecase', 'idx', 'pipeline', 'seed', 'X_test', 'transform_target_param', 'logging_param', 'data', 'fold_generator', 'exp_name_log', 'USI', 'X', 'fold_groups_param', 'X_train', 'y', 'gpu_n_jobs_param', 'target_param'}
2023-11-24 16:52:37,898:INFO:Checking environment
2023-11-24 16:52:37,898:INFO:python_version: 3.11.5
2023-11-24 16:52:37,898:INFO:python_build: ('main', 'Sep 11 2023 08:31:25')
2023-11-24 16:52:37,898:INFO:machine: arm64
2023-11-24 16:52:37,898:INFO:platform: macOS-14.0-arm64-arm-64bit
2023-11-24 16:52:37,898:INFO:Memory: svmem(total=17179869184, available=4427137024, percent=74.2, used=6313771008, free=51789824, active=4392665088, inactive=4372381696, wired=1921105920)
2023-11-24 16:52:37,898:INFO:Physical Core: 10
2023-11-24 16:52:37,898:INFO:Logical Core: 10
2023-11-24 16:52:37,898:INFO:Checking libraries
2023-11-24 16:52:37,898:INFO:System:
2023-11-24 16:52:37,898:INFO:    python: 3.11.5 (main, Sep 11 2023, 08:31:25) [Clang 14.0.6 ]
2023-11-24 16:52:37,898:INFO:executable: /Users/saiakhil/anaconda3/envs/mlauto/bin/python
2023-11-24 16:52:37,898:INFO:   machine: macOS-14.0-arm64-arm-64bit
2023-11-24 16:52:37,898:INFO:PyCaret required dependencies:
2023-11-24 16:52:37,898:INFO:                 pip: 23.3.1
2023-11-24 16:52:37,898:INFO:          setuptools: 68.0.0
2023-11-24 16:52:37,898:INFO:             pycaret: 3.2.0
2023-11-24 16:52:37,898:INFO:             IPython: 8.15.0
2023-11-24 16:52:37,898:INFO:          ipywidgets: 8.1.1
2023-11-24 16:52:37,898:INFO:                tqdm: 4.66.1
2023-11-24 16:52:37,898:INFO:               numpy: 1.25.2
2023-11-24 16:52:37,898:INFO:              pandas: 1.5.3
2023-11-24 16:52:37,898:INFO:              jinja2: 3.1.2
2023-11-24 16:52:37,898:INFO:               scipy: 1.11.3
2023-11-24 16:52:37,898:INFO:              joblib: 1.3.2
2023-11-24 16:52:37,898:INFO:             sklearn: 1.2.2
2023-11-24 16:52:37,898:INFO:                pyod: 1.1.2
2023-11-24 16:52:37,898:INFO:            imblearn: 0.11.0
2023-11-24 16:52:37,898:INFO:   category_encoders: 2.6.3
2023-11-24 16:52:37,898:INFO:            lightgbm: 4.1.0
2023-11-24 16:52:37,898:INFO:               numba: 0.58.1
2023-11-24 16:52:37,898:INFO:            requests: 2.31.0
2023-11-24 16:52:37,898:INFO:          matplotlib: 3.6.0
2023-11-24 16:52:37,898:INFO:          scikitplot: 0.3.7
2023-11-24 16:52:37,898:INFO:         yellowbrick: 1.5
2023-11-24 16:52:37,898:INFO:              plotly: 5.18.0
2023-11-24 16:52:37,898:INFO:    plotly-resampler: Not installed
2023-11-24 16:52:37,898:INFO:             kaleido: 0.2.1
2023-11-24 16:52:37,898:INFO:           schemdraw: 0.15
2023-11-24 16:52:37,898:INFO:         statsmodels: 0.14.0
2023-11-24 16:52:37,898:INFO:              sktime: 0.21.1
2023-11-24 16:52:37,898:INFO:               tbats: 1.1.3
2023-11-24 16:52:37,898:INFO:            pmdarima: 2.0.4
2023-11-24 16:52:37,898:INFO:              psutil: 5.9.6
2023-11-24 16:52:37,898:INFO:          markupsafe: 2.1.3
2023-11-24 16:52:37,898:INFO:             pickle5: Not installed
2023-11-24 16:52:37,898:INFO:         cloudpickle: 3.0.0
2023-11-24 16:52:37,898:INFO:         deprecation: 2.1.0
2023-11-24 16:52:37,898:INFO:              xxhash: 3.4.1
2023-11-24 16:52:37,898:INFO:           wurlitzer: 3.0.3
2023-11-24 16:52:37,898:INFO:PyCaret optional dependencies:
2023-11-24 16:52:37,898:INFO:                shap: Not installed
2023-11-24 16:52:37,898:INFO:           interpret: Not installed
2023-11-24 16:52:37,898:INFO:                umap: Not installed
2023-11-24 16:52:37,898:INFO:     ydata_profiling: 4.6.2
2023-11-24 16:52:37,898:INFO:  explainerdashboard: Not installed
2023-11-24 16:52:37,898:INFO:             autoviz: Not installed
2023-11-24 16:52:37,898:INFO:           fairlearn: Not installed
2023-11-24 16:52:37,898:INFO:          deepchecks: Not installed
2023-11-24 16:52:37,898:INFO:             xgboost: 1.7.3
2023-11-24 16:52:37,898:INFO:            catboost: Not installed
2023-11-24 16:52:37,898:INFO:              kmodes: Not installed
2023-11-24 16:52:37,898:INFO:             mlxtend: Not installed
2023-11-24 16:52:37,898:INFO:       statsforecast: Not installed
2023-11-24 16:52:37,898:INFO:        tune_sklearn: Not installed
2023-11-24 16:52:37,898:INFO:                 ray: Not installed
2023-11-24 16:52:37,898:INFO:            hyperopt: Not installed
2023-11-24 16:52:37,898:INFO:              optuna: Not installed
2023-11-24 16:52:37,898:INFO:               skopt: Not installed
2023-11-24 16:52:37,898:INFO:              mlflow: Not installed
2023-11-24 16:52:37,898:INFO:              gradio: Not installed
2023-11-24 16:52:37,898:INFO:             fastapi: Not installed
2023-11-24 16:52:37,898:INFO:             uvicorn: Not installed
2023-11-24 16:52:37,898:INFO:              m2cgen: Not installed
2023-11-24 16:52:37,898:INFO:           evidently: Not installed
2023-11-24 16:52:37,898:INFO:               fugue: Not installed
2023-11-24 16:52:37,899:INFO:           streamlit: 1.28.2
2023-11-24 16:52:37,899:INFO:             prophet: Not installed
2023-11-24 16:52:37,899:INFO:None
2023-11-24 16:52:37,899:INFO:Set up data.
2023-11-24 16:52:37,924:INFO:Set up folding strategy.
2023-11-24 16:52:37,924:INFO:Set up train/test split.
2023-11-24 16:52:37,928:INFO:Set up index.
2023-11-24 16:52:37,929:INFO:Assigning column types.
2023-11-24 16:52:37,930:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-24 16:52:37,930:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-11-24 16:52:37,932:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-24 16:52:37,934:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-24 16:52:37,958:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 16:52:37,975:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 16:52:37,975:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:52:37,976:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:52:37,976:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-11-24 16:52:37,978:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-24 16:52:37,980:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-24 16:52:38,004:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 16:52:38,021:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 16:52:38,021:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:52:38,022:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:52:38,022:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-11-24 16:52:38,024:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-24 16:52:38,026:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-24 16:52:38,049:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 16:52:38,066:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 16:52:38,067:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:52:38,068:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:52:38,069:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-24 16:52:38,071:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-24 16:52:38,094:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 16:52:38,112:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 16:52:38,112:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:52:38,113:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:52:38,113:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-11-24 16:52:38,116:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-24 16:52:38,140:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 16:52:38,158:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 16:52:38,158:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:52:38,159:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:52:38,162:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-24 16:52:38,185:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 16:52:38,201:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 16:52:38,202:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:52:38,203:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:52:38,203:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-11-24 16:52:38,228:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 16:52:38,245:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 16:52:38,245:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:52:38,246:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:52:38,271:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 16:52:38,288:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 16:52:38,288:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:52:38,289:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:52:38,289:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-11-24 16:52:38,315:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 16:52:38,332:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:52:38,333:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:52:38,359:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 16:52:38,377:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:52:38,378:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:52:38,379:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-11-24 16:52:38,426:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:52:38,427:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:52:38,472:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:52:38,473:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:52:38,473:INFO:Preparing preprocessing pipeline...
2023-11-24 16:52:38,473:INFO:Set up simple imputation.
2023-11-24 16:52:38,476:INFO:Set up encoding of categorical features.
2023-11-24 16:52:38,747:INFO:Finished creating preprocessing pipeline.
2023-11-24 16:52:38,749:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/46/tcczvndd7xj_pqs5r176bl600000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Number_of_vehicles_involved',
                                             'Number_of_casualties'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Day_of_week',
                                             'Age_band_of_driver',
                                             'Sex_of_driver',
                                             'Educational_le...
                                                                    'Road_surface_type',
                                                                    'Road_surface_conditions',
                                                                    'Light_conditions',
                                                                    'Weather_conditions',
                                                                    'Type_of_collision',
                                                                    'Vehicle_movement',
                                                                    'Casualty_class',
                                                                    'Sex_of_casualty',
                                                                    'Age_band_of_casualty',
                                                                    'Casualty_severity',
                                                                    'Work_of_casuality',
                                                                    'Fitness_of_casuality',
                                                                    'Pedestrian_movement',
                                                                    'Cause_of_accident',
                                                                    'Accident_severity'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True)))])
2023-11-24 16:52:38,749:INFO:Creating final display dataframe.
2023-11-24 16:52:39,170:INFO:Setup _display_container:                     Description             Value
0                    Session id              8079
1                        Target              Time
2                   Target type        Regression
3           Original data shape       (12316, 32)
4        Transformed data shape      (12316, 210)
5   Transformed train set shape       (8621, 210)
6    Transformed test set shape       (3695, 210)
7              Numeric features                 2
8          Categorical features                29
9      Rows with missing values             76.5%
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator             KFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  reg-default-name
22                          USI              9f9a
2023-11-24 16:52:39,216:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:52:39,217:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:52:39,263:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:52:39,264:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:52:39,264:INFO:setup() successfully completed in 1.37s...............
2023-11-24 16:52:40,172:INFO:PyCaret ClassificationExperiment
2023-11-24 16:52:40,172:INFO:Logging name: clf-default-name
2023-11-24 16:52:40,172:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-11-24 16:52:40,172:INFO:version 3.2.0
2023-11-24 16:52:40,172:INFO:Initializing setup()
2023-11-24 16:52:40,172:INFO:self.USI: d6ea
2023-11-24 16:52:40,172:INFO:self._variable_keys: {'_available_plots', 'fix_imbalance', 'fold_shuffle_param', 'exp_id', 'y_test', 'y_train', 'n_jobs_param', 'memory', 'log_plots_param', 'html_param', 'gpu_param', '_ml_usecase', 'idx', 'pipeline', 'is_multiclass', 'seed', 'X_test', 'logging_param', 'data', 'fold_generator', 'exp_name_log', 'USI', 'X', 'fold_groups_param', 'X_train', 'y', 'gpu_n_jobs_param', 'target_param'}
2023-11-24 16:52:40,172:INFO:Checking environment
2023-11-24 16:52:40,172:INFO:python_version: 3.11.5
2023-11-24 16:52:40,172:INFO:python_build: ('main', 'Sep 11 2023 08:31:25')
2023-11-24 16:52:40,172:INFO:machine: arm64
2023-11-24 16:52:40,172:INFO:platform: macOS-14.0-arm64-arm-64bit
2023-11-24 16:52:40,172:INFO:Memory: svmem(total=17179869184, available=4388339712, percent=74.5, used=6312607744, free=65175552, active=4343939072, inactive=4320002048, wired=1968668672)
2023-11-24 16:52:40,172:INFO:Physical Core: 10
2023-11-24 16:52:40,172:INFO:Logical Core: 10
2023-11-24 16:52:40,172:INFO:Checking libraries
2023-11-24 16:52:40,172:INFO:System:
2023-11-24 16:52:40,172:INFO:    python: 3.11.5 (main, Sep 11 2023, 08:31:25) [Clang 14.0.6 ]
2023-11-24 16:52:40,172:INFO:executable: /Users/saiakhil/anaconda3/envs/mlauto/bin/python
2023-11-24 16:52:40,172:INFO:   machine: macOS-14.0-arm64-arm-64bit
2023-11-24 16:52:40,172:INFO:PyCaret required dependencies:
2023-11-24 16:52:40,172:INFO:                 pip: 23.3.1
2023-11-24 16:52:40,172:INFO:          setuptools: 68.0.0
2023-11-24 16:52:40,172:INFO:             pycaret: 3.2.0
2023-11-24 16:52:40,172:INFO:             IPython: 8.15.0
2023-11-24 16:52:40,172:INFO:          ipywidgets: 8.1.1
2023-11-24 16:52:40,172:INFO:                tqdm: 4.66.1
2023-11-24 16:52:40,172:INFO:               numpy: 1.25.2
2023-11-24 16:52:40,172:INFO:              pandas: 1.5.3
2023-11-24 16:52:40,172:INFO:              jinja2: 3.1.2
2023-11-24 16:52:40,172:INFO:               scipy: 1.11.3
2023-11-24 16:52:40,172:INFO:              joblib: 1.3.2
2023-11-24 16:52:40,172:INFO:             sklearn: 1.2.2
2023-11-24 16:52:40,172:INFO:                pyod: 1.1.2
2023-11-24 16:52:40,172:INFO:            imblearn: 0.11.0
2023-11-24 16:52:40,173:INFO:   category_encoders: 2.6.3
2023-11-24 16:52:40,173:INFO:            lightgbm: 4.1.0
2023-11-24 16:52:40,173:INFO:               numba: 0.58.1
2023-11-24 16:52:40,173:INFO:            requests: 2.31.0
2023-11-24 16:52:40,173:INFO:          matplotlib: 3.6.0
2023-11-24 16:52:40,173:INFO:          scikitplot: 0.3.7
2023-11-24 16:52:40,173:INFO:         yellowbrick: 1.5
2023-11-24 16:52:40,173:INFO:              plotly: 5.18.0
2023-11-24 16:52:40,173:INFO:    plotly-resampler: Not installed
2023-11-24 16:52:40,173:INFO:             kaleido: 0.2.1
2023-11-24 16:52:40,173:INFO:           schemdraw: 0.15
2023-11-24 16:52:40,173:INFO:         statsmodels: 0.14.0
2023-11-24 16:52:40,173:INFO:              sktime: 0.21.1
2023-11-24 16:52:40,173:INFO:               tbats: 1.1.3
2023-11-24 16:52:40,173:INFO:            pmdarima: 2.0.4
2023-11-24 16:52:40,173:INFO:              psutil: 5.9.6
2023-11-24 16:52:40,173:INFO:          markupsafe: 2.1.3
2023-11-24 16:52:40,173:INFO:             pickle5: Not installed
2023-11-24 16:52:40,173:INFO:         cloudpickle: 3.0.0
2023-11-24 16:52:40,173:INFO:         deprecation: 2.1.0
2023-11-24 16:52:40,173:INFO:              xxhash: 3.4.1
2023-11-24 16:52:40,173:INFO:           wurlitzer: 3.0.3
2023-11-24 16:52:40,173:INFO:PyCaret optional dependencies:
2023-11-24 16:52:40,173:INFO:                shap: Not installed
2023-11-24 16:52:40,173:INFO:           interpret: Not installed
2023-11-24 16:52:40,173:INFO:                umap: Not installed
2023-11-24 16:52:40,173:INFO:     ydata_profiling: 4.6.2
2023-11-24 16:52:40,173:INFO:  explainerdashboard: Not installed
2023-11-24 16:52:40,173:INFO:             autoviz: Not installed
2023-11-24 16:52:40,173:INFO:           fairlearn: Not installed
2023-11-24 16:52:40,173:INFO:          deepchecks: Not installed
2023-11-24 16:52:40,173:INFO:             xgboost: 1.7.3
2023-11-24 16:52:40,173:INFO:            catboost: Not installed
2023-11-24 16:52:40,173:INFO:              kmodes: Not installed
2023-11-24 16:52:40,173:INFO:             mlxtend: Not installed
2023-11-24 16:52:40,173:INFO:       statsforecast: Not installed
2023-11-24 16:52:40,173:INFO:        tune_sklearn: Not installed
2023-11-24 16:52:40,173:INFO:                 ray: Not installed
2023-11-24 16:52:40,173:INFO:            hyperopt: Not installed
2023-11-24 16:52:40,173:INFO:              optuna: Not installed
2023-11-24 16:52:40,173:INFO:               skopt: Not installed
2023-11-24 16:52:40,173:INFO:              mlflow: Not installed
2023-11-24 16:52:40,173:INFO:              gradio: Not installed
2023-11-24 16:52:40,173:INFO:             fastapi: Not installed
2023-11-24 16:52:40,173:INFO:             uvicorn: Not installed
2023-11-24 16:52:40,173:INFO:              m2cgen: Not installed
2023-11-24 16:52:40,173:INFO:           evidently: Not installed
2023-11-24 16:52:40,173:INFO:               fugue: Not installed
2023-11-24 16:52:40,173:INFO:           streamlit: 1.28.2
2023-11-24 16:52:40,173:INFO:             prophet: Not installed
2023-11-24 16:52:40,173:INFO:None
2023-11-24 16:52:40,173:INFO:Set up data.
2023-11-24 16:52:40,199:INFO:Set up folding strategy.
2023-11-24 16:52:40,199:INFO:Set up train/test split.
2023-11-24 16:52:46,058:INFO:PyCaret ClassificationExperiment
2023-11-24 16:52:46,058:INFO:Logging name: clf-default-name
2023-11-24 16:52:46,058:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-11-24 16:52:46,058:INFO:version 3.2.0
2023-11-24 16:52:46,058:INFO:Initializing setup()
2023-11-24 16:52:46,058:INFO:self.USI: 69aa
2023-11-24 16:52:46,058:INFO:self._variable_keys: {'_available_plots', 'fix_imbalance', 'fold_shuffle_param', 'exp_id', 'y_test', 'y_train', 'n_jobs_param', 'memory', 'log_plots_param', 'html_param', 'gpu_param', '_ml_usecase', 'idx', 'pipeline', 'is_multiclass', 'seed', 'X_test', 'logging_param', 'data', 'fold_generator', 'exp_name_log', 'USI', 'X', 'fold_groups_param', 'X_train', 'y', 'gpu_n_jobs_param', 'target_param'}
2023-11-24 16:52:46,058:INFO:Checking environment
2023-11-24 16:52:46,058:INFO:python_version: 3.11.5
2023-11-24 16:52:46,058:INFO:python_build: ('main', 'Sep 11 2023 08:31:25')
2023-11-24 16:52:46,058:INFO:machine: arm64
2023-11-24 16:52:46,058:INFO:platform: macOS-14.0-arm64-arm-64bit
2023-11-24 16:52:46,058:INFO:Memory: svmem(total=17179869184, available=4411883520, percent=74.3, used=6314704896, free=44531712, active=4391813120, inactive=4363255808, wired=1922891776)
2023-11-24 16:52:46,058:INFO:Physical Core: 10
2023-11-24 16:52:46,058:INFO:Logical Core: 10
2023-11-24 16:52:46,058:INFO:Checking libraries
2023-11-24 16:52:46,058:INFO:System:
2023-11-24 16:52:46,058:INFO:    python: 3.11.5 (main, Sep 11 2023, 08:31:25) [Clang 14.0.6 ]
2023-11-24 16:52:46,058:INFO:executable: /Users/saiakhil/anaconda3/envs/mlauto/bin/python
2023-11-24 16:52:46,058:INFO:   machine: macOS-14.0-arm64-arm-64bit
2023-11-24 16:52:46,058:INFO:PyCaret required dependencies:
2023-11-24 16:52:46,058:INFO:                 pip: 23.3.1
2023-11-24 16:52:46,058:INFO:          setuptools: 68.0.0
2023-11-24 16:52:46,058:INFO:             pycaret: 3.2.0
2023-11-24 16:52:46,058:INFO:             IPython: 8.15.0
2023-11-24 16:52:46,058:INFO:          ipywidgets: 8.1.1
2023-11-24 16:52:46,058:INFO:                tqdm: 4.66.1
2023-11-24 16:52:46,058:INFO:               numpy: 1.25.2
2023-11-24 16:52:46,058:INFO:              pandas: 1.5.3
2023-11-24 16:52:46,058:INFO:              jinja2: 3.1.2
2023-11-24 16:52:46,058:INFO:               scipy: 1.11.3
2023-11-24 16:52:46,058:INFO:              joblib: 1.3.2
2023-11-24 16:52:46,058:INFO:             sklearn: 1.2.2
2023-11-24 16:52:46,058:INFO:                pyod: 1.1.2
2023-11-24 16:52:46,058:INFO:            imblearn: 0.11.0
2023-11-24 16:52:46,058:INFO:   category_encoders: 2.6.3
2023-11-24 16:52:46,058:INFO:            lightgbm: 4.1.0
2023-11-24 16:52:46,058:INFO:               numba: 0.58.1
2023-11-24 16:52:46,058:INFO:            requests: 2.31.0
2023-11-24 16:52:46,058:INFO:          matplotlib: 3.6.0
2023-11-24 16:52:46,058:INFO:          scikitplot: 0.3.7
2023-11-24 16:52:46,058:INFO:         yellowbrick: 1.5
2023-11-24 16:52:46,058:INFO:              plotly: 5.18.0
2023-11-24 16:52:46,058:INFO:    plotly-resampler: Not installed
2023-11-24 16:52:46,058:INFO:             kaleido: 0.2.1
2023-11-24 16:52:46,058:INFO:           schemdraw: 0.15
2023-11-24 16:52:46,058:INFO:         statsmodels: 0.14.0
2023-11-24 16:52:46,058:INFO:              sktime: 0.21.1
2023-11-24 16:52:46,058:INFO:               tbats: 1.1.3
2023-11-24 16:52:46,058:INFO:            pmdarima: 2.0.4
2023-11-24 16:52:46,058:INFO:              psutil: 5.9.6
2023-11-24 16:52:46,058:INFO:          markupsafe: 2.1.3
2023-11-24 16:52:46,058:INFO:             pickle5: Not installed
2023-11-24 16:52:46,058:INFO:         cloudpickle: 3.0.0
2023-11-24 16:52:46,058:INFO:         deprecation: 2.1.0
2023-11-24 16:52:46,058:INFO:              xxhash: 3.4.1
2023-11-24 16:52:46,059:INFO:           wurlitzer: 3.0.3
2023-11-24 16:52:46,059:INFO:PyCaret optional dependencies:
2023-11-24 16:52:46,059:INFO:                shap: Not installed
2023-11-24 16:52:46,059:INFO:           interpret: Not installed
2023-11-24 16:52:46,059:INFO:                umap: Not installed
2023-11-24 16:52:46,059:INFO:     ydata_profiling: 4.6.2
2023-11-24 16:52:46,059:INFO:  explainerdashboard: Not installed
2023-11-24 16:52:46,059:INFO:             autoviz: Not installed
2023-11-24 16:52:46,059:INFO:           fairlearn: Not installed
2023-11-24 16:52:46,059:INFO:          deepchecks: Not installed
2023-11-24 16:52:46,059:INFO:             xgboost: 1.7.3
2023-11-24 16:52:46,059:INFO:            catboost: Not installed
2023-11-24 16:52:46,059:INFO:              kmodes: Not installed
2023-11-24 16:52:46,059:INFO:             mlxtend: Not installed
2023-11-24 16:52:46,059:INFO:       statsforecast: Not installed
2023-11-24 16:52:46,059:INFO:        tune_sklearn: Not installed
2023-11-24 16:52:46,059:INFO:                 ray: Not installed
2023-11-24 16:52:46,059:INFO:            hyperopt: Not installed
2023-11-24 16:52:46,059:INFO:              optuna: Not installed
2023-11-24 16:52:46,059:INFO:               skopt: Not installed
2023-11-24 16:52:46,059:INFO:              mlflow: Not installed
2023-11-24 16:52:46,059:INFO:              gradio: Not installed
2023-11-24 16:52:46,059:INFO:             fastapi: Not installed
2023-11-24 16:52:46,059:INFO:             uvicorn: Not installed
2023-11-24 16:52:46,059:INFO:              m2cgen: Not installed
2023-11-24 16:52:46,059:INFO:           evidently: Not installed
2023-11-24 16:52:46,059:INFO:               fugue: Not installed
2023-11-24 16:52:46,059:INFO:           streamlit: 1.28.2
2023-11-24 16:52:46,059:INFO:             prophet: Not installed
2023-11-24 16:52:46,059:INFO:None
2023-11-24 16:52:46,059:INFO:Set up data.
2023-11-24 16:52:46,082:INFO:Set up folding strategy.
2023-11-24 16:52:46,082:INFO:Set up train/test split.
2023-11-24 16:52:46,089:INFO:Set up index.
2023-11-24 16:52:46,089:INFO:Assigning column types.
2023-11-24 16:52:46,091:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-24 16:52:46,108:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 16:52:46,109:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:52:46,119:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:52:46,120:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:52:46,138:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 16:52:46,138:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:52:46,149:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:52:46,150:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:52:46,150:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-11-24 16:52:46,168:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:52:46,179:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:52:46,180:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:52:46,198:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:52:46,209:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:52:46,210:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:52:46,210:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-11-24 16:52:46,238:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:52:46,239:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:52:46,267:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:52:46,268:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:52:46,268:INFO:Preparing preprocessing pipeline...
2023-11-24 16:52:46,269:INFO:Set up label encoding.
2023-11-24 16:52:46,269:INFO:Set up simple imputation.
2023-11-24 16:52:46,271:INFO:Set up encoding of categorical features.
2023-11-24 16:52:46,724:INFO:Finished creating preprocessing pipeline.
2023-11-24 16:52:46,728:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/46/tcczvndd7xj_pqs5r176bl600000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Number_of_vehicles_involved',
                                             'Number_of_casualties'],
                                    transformer=SimpleImputer(add_i...
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['Time'],
                                    transformer=TargetEncoder(cols=['Time'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2023-11-24 16:52:46,728:INFO:Creating final display dataframe.
2023-11-24 16:52:47,100:INFO:Setup _display_container:                     Description                                              Value
0                    Session id                                               6385
1                        Target                                  Accident_severity
2                   Target type                                         Multiclass
3                Target mapping  Fatal injury: 0, Serious Injury: 1, Slight Inj...
4           Original data shape                                        (12316, 32)
5        Transformed data shape                                       (12316, 207)
6   Transformed train set shape                                        (8621, 207)
7    Transformed test set shape                                        (3695, 207)
8              Numeric features                                                  2
9          Categorical features                                                 29
10     Rows with missing values                                              76.5%
11                   Preprocess                                               True
12              Imputation type                                             simple
13           Numeric imputation                                               mean
14       Categorical imputation                                               mode
15     Maximum one-hot encoding                                                 25
16              Encoding method                                               None
17               Fold Generator                                    StratifiedKFold
18                  Fold Number                                                 10
19                     CPU Jobs                                                 -1
20                      Use GPU                                              False
21               Log Experiment                                              False
22              Experiment Name                                   clf-default-name
23                          USI                                               69aa
2023-11-24 16:52:47,130:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:52:47,131:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:52:47,159:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:52:47,160:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:52:47,161:INFO:setup() successfully completed in 1.11s...............
2023-11-24 16:53:37,000:INFO:PyCaret ClassificationExperiment
2023-11-24 16:53:37,001:INFO:Logging name: clf-default-name
2023-11-24 16:53:37,001:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-11-24 16:53:37,001:INFO:version 3.2.0
2023-11-24 16:53:37,001:INFO:Initializing setup()
2023-11-24 16:53:37,001:INFO:self.USI: f66a
2023-11-24 16:53:37,001:INFO:self._variable_keys: {'_available_plots', 'fix_imbalance', 'fold_shuffle_param', 'exp_id', 'y_test', 'y_train', 'n_jobs_param', 'memory', 'log_plots_param', 'html_param', 'gpu_param', '_ml_usecase', 'idx', 'pipeline', 'is_multiclass', 'seed', 'X_test', 'logging_param', 'data', 'fold_generator', 'exp_name_log', 'USI', 'X', 'fold_groups_param', 'X_train', 'y', 'gpu_n_jobs_param', 'target_param'}
2023-11-24 16:53:37,001:INFO:Checking environment
2023-11-24 16:53:37,001:INFO:python_version: 3.11.5
2023-11-24 16:53:37,001:INFO:python_build: ('main', 'Sep 11 2023 08:31:25')
2023-11-24 16:53:37,001:INFO:machine: arm64
2023-11-24 16:53:37,001:INFO:platform: macOS-14.0-arm64-arm-64bit
2023-11-24 16:53:37,001:INFO:Memory: svmem(total=17179869184, available=4460118016, percent=74.0, used=6377439232, free=40435712, active=4438654976, inactive=4413603840, wired=1938784256)
2023-11-24 16:53:37,001:INFO:Physical Core: 10
2023-11-24 16:53:37,001:INFO:Logical Core: 10
2023-11-24 16:53:37,001:INFO:Checking libraries
2023-11-24 16:53:37,001:INFO:System:
2023-11-24 16:53:37,001:INFO:    python: 3.11.5 (main, Sep 11 2023, 08:31:25) [Clang 14.0.6 ]
2023-11-24 16:53:37,001:INFO:executable: /Users/saiakhil/anaconda3/envs/mlauto/bin/python
2023-11-24 16:53:37,001:INFO:   machine: macOS-14.0-arm64-arm-64bit
2023-11-24 16:53:37,001:INFO:PyCaret required dependencies:
2023-11-24 16:53:37,001:INFO:                 pip: 23.3.1
2023-11-24 16:53:37,001:INFO:          setuptools: 68.0.0
2023-11-24 16:53:37,001:INFO:             pycaret: 3.2.0
2023-11-24 16:53:37,001:INFO:             IPython: 8.15.0
2023-11-24 16:53:37,001:INFO:          ipywidgets: 8.1.1
2023-11-24 16:53:37,001:INFO:                tqdm: 4.66.1
2023-11-24 16:53:37,001:INFO:               numpy: 1.25.2
2023-11-24 16:53:37,001:INFO:              pandas: 1.5.3
2023-11-24 16:53:37,001:INFO:              jinja2: 3.1.2
2023-11-24 16:53:37,001:INFO:               scipy: 1.11.3
2023-11-24 16:53:37,001:INFO:              joblib: 1.3.2
2023-11-24 16:53:37,001:INFO:             sklearn: 1.2.2
2023-11-24 16:53:37,001:INFO:                pyod: 1.1.2
2023-11-24 16:53:37,001:INFO:            imblearn: 0.11.0
2023-11-24 16:53:37,001:INFO:   category_encoders: 2.6.3
2023-11-24 16:53:37,001:INFO:            lightgbm: 4.1.0
2023-11-24 16:53:37,001:INFO:               numba: 0.58.1
2023-11-24 16:53:37,001:INFO:            requests: 2.31.0
2023-11-24 16:53:37,001:INFO:          matplotlib: 3.6.0
2023-11-24 16:53:37,001:INFO:          scikitplot: 0.3.7
2023-11-24 16:53:37,001:INFO:         yellowbrick: 1.5
2023-11-24 16:53:37,001:INFO:              plotly: 5.18.0
2023-11-24 16:53:37,001:INFO:    plotly-resampler: Not installed
2023-11-24 16:53:37,001:INFO:             kaleido: 0.2.1
2023-11-24 16:53:37,001:INFO:           schemdraw: 0.15
2023-11-24 16:53:37,001:INFO:         statsmodels: 0.14.0
2023-11-24 16:53:37,001:INFO:              sktime: 0.21.1
2023-11-24 16:53:37,001:INFO:               tbats: 1.1.3
2023-11-24 16:53:37,001:INFO:            pmdarima: 2.0.4
2023-11-24 16:53:37,001:INFO:              psutil: 5.9.6
2023-11-24 16:53:37,001:INFO:          markupsafe: 2.1.3
2023-11-24 16:53:37,001:INFO:             pickle5: Not installed
2023-11-24 16:53:37,001:INFO:         cloudpickle: 3.0.0
2023-11-24 16:53:37,001:INFO:         deprecation: 2.1.0
2023-11-24 16:53:37,001:INFO:              xxhash: 3.4.1
2023-11-24 16:53:37,001:INFO:           wurlitzer: 3.0.3
2023-11-24 16:53:37,001:INFO:PyCaret optional dependencies:
2023-11-24 16:53:37,001:INFO:                shap: Not installed
2023-11-24 16:53:37,001:INFO:           interpret: Not installed
2023-11-24 16:53:37,001:INFO:                umap: Not installed
2023-11-24 16:53:37,001:INFO:     ydata_profiling: 4.6.2
2023-11-24 16:53:37,001:INFO:  explainerdashboard: Not installed
2023-11-24 16:53:37,001:INFO:             autoviz: Not installed
2023-11-24 16:53:37,001:INFO:           fairlearn: Not installed
2023-11-24 16:53:37,001:INFO:          deepchecks: Not installed
2023-11-24 16:53:37,002:INFO:             xgboost: 1.7.3
2023-11-24 16:53:37,002:INFO:            catboost: Not installed
2023-11-24 16:53:37,002:INFO:              kmodes: Not installed
2023-11-24 16:53:37,002:INFO:             mlxtend: Not installed
2023-11-24 16:53:37,002:INFO:       statsforecast: Not installed
2023-11-24 16:53:37,002:INFO:        tune_sklearn: Not installed
2023-11-24 16:53:37,002:INFO:                 ray: Not installed
2023-11-24 16:53:37,002:INFO:            hyperopt: Not installed
2023-11-24 16:53:37,002:INFO:              optuna: Not installed
2023-11-24 16:53:37,002:INFO:               skopt: Not installed
2023-11-24 16:53:37,002:INFO:              mlflow: Not installed
2023-11-24 16:53:37,002:INFO:              gradio: Not installed
2023-11-24 16:53:37,002:INFO:             fastapi: Not installed
2023-11-24 16:53:37,002:INFO:             uvicorn: Not installed
2023-11-24 16:53:37,002:INFO:              m2cgen: Not installed
2023-11-24 16:53:37,002:INFO:           evidently: Not installed
2023-11-24 16:53:37,002:INFO:               fugue: Not installed
2023-11-24 16:53:37,002:INFO:           streamlit: 1.28.2
2023-11-24 16:53:37,002:INFO:             prophet: Not installed
2023-11-24 16:53:37,002:INFO:None
2023-11-24 16:53:37,002:INFO:Set up data.
2023-11-24 16:53:37,029:INFO:Set up folding strategy.
2023-11-24 16:53:37,029:INFO:Set up train/test split.
2023-11-24 16:53:37,036:INFO:Set up index.
2023-11-24 16:53:37,036:INFO:Assigning column types.
2023-11-24 16:53:37,037:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-24 16:53:37,054:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 16:53:37,055:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:53:37,065:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:53:37,066:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:53:37,084:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 16:53:37,084:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:53:37,095:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:53:37,096:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:53:37,096:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-11-24 16:53:37,113:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:53:37,124:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:53:37,125:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:53:37,143:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:53:37,153:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:53:37,155:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:53:37,155:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-11-24 16:53:37,183:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:53:37,184:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:53:37,211:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:53:37,212:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:53:37,213:INFO:Preparing preprocessing pipeline...
2023-11-24 16:53:37,213:INFO:Set up label encoding.
2023-11-24 16:53:37,213:INFO:Set up simple imputation.
2023-11-24 16:53:37,216:INFO:Set up encoding of categorical features.
2023-11-24 16:53:37,586:INFO:Finished creating preprocessing pipeline.
2023-11-24 16:53:37,589:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/46/tcczvndd7xj_pqs5r176bl600000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Number_of_vehicles_involved',
                                             'Number_of_casualties'],
                                    transformer=SimpleImputer(add_i...
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['Time'],
                                    transformer=TargetEncoder(cols=['Time'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2023-11-24 16:53:37,589:INFO:Creating final display dataframe.
2023-11-24 16:53:38,026:INFO:Setup _display_container:                     Description                                              Value
0                    Session id                                               8325
1                        Target                                  Accident_severity
2                   Target type                                         Multiclass
3                Target mapping  Fatal injury: 0, Serious Injury: 1, Slight Inj...
4           Original data shape                                        (12316, 32)
5        Transformed data shape                                       (12316, 207)
6   Transformed train set shape                                        (8621, 207)
7    Transformed test set shape                                        (3695, 207)
8              Numeric features                                                  2
9          Categorical features                                                 29
10     Rows with missing values                                              76.5%
11                   Preprocess                                               True
12              Imputation type                                             simple
13           Numeric imputation                                               mean
14       Categorical imputation                                               mode
15     Maximum one-hot encoding                                                 25
16              Encoding method                                               None
17               Fold Generator                                    StratifiedKFold
18                  Fold Number                                                 10
19                     CPU Jobs                                                 -1
20                      Use GPU                                              False
21               Log Experiment                                              False
22              Experiment Name                                   clf-default-name
23                          USI                                               f66a
2023-11-24 16:53:38,055:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:53:38,056:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:53:38,083:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:53:38,084:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:53:38,085:INFO:setup() successfully completed in 1.09s...............
2023-11-24 16:53:40,202:INFO:Initializing compare_models()
2023-11-24 16:53:40,202:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e4b44d0>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x28e4b44d0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2023-11-24 16:53:40,202:INFO:Checking exceptions
2023-11-24 16:53:40,205:INFO:Preparing display monitor
2023-11-24 16:53:40,206:INFO:Initializing Logistic Regression
2023-11-24 16:53:40,206:INFO:Total runtime is 1.0331471761067708e-06 minutes
2023-11-24 16:53:40,206:INFO:SubProcess create_model() called ==================================
2023-11-24 16:53:40,206:INFO:Initializing create_model()
2023-11-24 16:53:40,206:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e4b44d0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28eb04ed0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:53:40,206:INFO:Checking exceptions
2023-11-24 16:53:40,206:INFO:Importing libraries
2023-11-24 16:53:40,206:INFO:Copying training dataset
2023-11-24 16:53:40,209:INFO:Defining folds
2023-11-24 16:53:40,209:INFO:Declaring metric variables
2023-11-24 16:53:40,209:INFO:Importing untrained model
2023-11-24 16:53:40,209:INFO:Logistic Regression Imported successfully
2023-11-24 16:53:40,209:INFO:Starting cross validation
2023-11-24 16:53:40,210:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:53:45,188:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:45,191:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:45,193:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:45,323:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:45,325:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:45,327:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:53:45,328:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:45,380:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:45,383:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:45,388:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:45,395:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:45,398:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:45,401:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:45,477:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:45,480:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:45,481:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:53:45,482:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:45,620:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:45,622:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:45,625:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:45,744:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:45,747:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:45,749:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:45,874:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:45,877:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:45,879:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:45,898:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:45,901:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:45,903:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:46,004:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:46,006:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:46,007:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:53:46,008:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:46,014:INFO:Calculating mean and std
2023-11-24 16:53:46,014:INFO:Creating metrics dataframe
2023-11-24 16:53:46,016:INFO:Uploading results into container
2023-11-24 16:53:46,017:INFO:Uploading model into container now
2023-11-24 16:53:46,017:INFO:_master_model_container: 1
2023-11-24 16:53:46,017:INFO:_display_container: 2
2023-11-24 16:53:46,017:INFO:LogisticRegression(max_iter=1000, random_state=8325)
2023-11-24 16:53:46,017:INFO:create_model() successfully completed......................................
2023-11-24 16:53:46,145:INFO:SubProcess create_model() end ==================================
2023-11-24 16:53:46,146:INFO:Creating metrics dataframe
2023-11-24 16:53:46,147:INFO:Initializing K Neighbors Classifier
2023-11-24 16:53:46,147:INFO:Total runtime is 0.0990216016769409 minutes
2023-11-24 16:53:46,147:INFO:SubProcess create_model() called ==================================
2023-11-24 16:53:46,148:INFO:Initializing create_model()
2023-11-24 16:53:46,148:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e4b44d0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28eb04ed0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:53:46,148:INFO:Checking exceptions
2023-11-24 16:53:46,148:INFO:Importing libraries
2023-11-24 16:53:46,148:INFO:Copying training dataset
2023-11-24 16:53:46,150:INFO:Defining folds
2023-11-24 16:53:46,150:INFO:Declaring metric variables
2023-11-24 16:53:46,150:INFO:Importing untrained model
2023-11-24 16:53:46,150:INFO:K Neighbors Classifier Imported successfully
2023-11-24 16:53:46,150:INFO:Starting cross validation
2023-11-24 16:53:46,151:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:53:47,034:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:47,037:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:47,038:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:53:47,049:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:47,055:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:47,057:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:47,060:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:47,095:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:47,097:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:47,099:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:53:47,100:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:47,115:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:47,117:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:47,119:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:47,119:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:47,122:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:47,124:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:47,133:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:47,135:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:47,136:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:53:47,137:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:47,137:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:47,138:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:47,140:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:47,140:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:47,141:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:53:47,142:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:53:47,142:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:47,143:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:47,164:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:47,166:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:47,169:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:47,182:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:47,184:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:47,186:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:47,192:INFO:Calculating mean and std
2023-11-24 16:53:47,192:INFO:Creating metrics dataframe
2023-11-24 16:53:47,193:INFO:Uploading results into container
2023-11-24 16:53:47,194:INFO:Uploading model into container now
2023-11-24 16:53:47,194:INFO:_master_model_container: 2
2023-11-24 16:53:47,194:INFO:_display_container: 2
2023-11-24 16:53:47,194:INFO:KNeighborsClassifier(n_jobs=-1)
2023-11-24 16:53:47,194:INFO:create_model() successfully completed......................................
2023-11-24 16:53:47,285:INFO:SubProcess create_model() end ==================================
2023-11-24 16:53:47,285:INFO:Creating metrics dataframe
2023-11-24 16:53:47,287:INFO:Initializing Naive Bayes
2023-11-24 16:53:47,287:INFO:Total runtime is 0.11800918181737263 minutes
2023-11-24 16:53:47,287:INFO:SubProcess create_model() called ==================================
2023-11-24 16:53:47,287:INFO:Initializing create_model()
2023-11-24 16:53:47,287:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e4b44d0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28eb04ed0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:53:47,287:INFO:Checking exceptions
2023-11-24 16:53:47,287:INFO:Importing libraries
2023-11-24 16:53:47,287:INFO:Copying training dataset
2023-11-24 16:53:47,289:INFO:Defining folds
2023-11-24 16:53:47,289:INFO:Declaring metric variables
2023-11-24 16:53:47,289:INFO:Importing untrained model
2023-11-24 16:53:47,290:INFO:Naive Bayes Imported successfully
2023-11-24 16:53:47,290:INFO:Starting cross validation
2023-11-24 16:53:47,291:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:53:47,964:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:47,967:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:47,969:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:47,986:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:47,988:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:47,991:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:48,003:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:48,008:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:48,010:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:48,014:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:48,014:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:48,017:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:48,019:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:48,020:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:48,021:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:48,021:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:48,022:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:48,022:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:48,023:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:48,024:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:48,025:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:48,026:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:48,026:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:48,027:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:48,028:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:48,031:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:48,031:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:48,033:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:48,033:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:48,036:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:48,041:INFO:Calculating mean and std
2023-11-24 16:53:48,042:INFO:Creating metrics dataframe
2023-11-24 16:53:48,043:INFO:Uploading results into container
2023-11-24 16:53:48,044:INFO:Uploading model into container now
2023-11-24 16:53:48,044:INFO:_master_model_container: 3
2023-11-24 16:53:48,044:INFO:_display_container: 2
2023-11-24 16:53:48,044:INFO:GaussianNB()
2023-11-24 16:53:48,044:INFO:create_model() successfully completed......................................
2023-11-24 16:53:48,137:INFO:SubProcess create_model() end ==================================
2023-11-24 16:53:48,137:INFO:Creating metrics dataframe
2023-11-24 16:53:48,138:INFO:Initializing Decision Tree Classifier
2023-11-24 16:53:48,139:INFO:Total runtime is 0.13220658699671425 minutes
2023-11-24 16:53:48,139:INFO:SubProcess create_model() called ==================================
2023-11-24 16:53:48,139:INFO:Initializing create_model()
2023-11-24 16:53:48,139:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e4b44d0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28eb04ed0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:53:48,139:INFO:Checking exceptions
2023-11-24 16:53:48,139:INFO:Importing libraries
2023-11-24 16:53:48,139:INFO:Copying training dataset
2023-11-24 16:53:48,141:INFO:Defining folds
2023-11-24 16:53:48,141:INFO:Declaring metric variables
2023-11-24 16:53:48,141:INFO:Importing untrained model
2023-11-24 16:53:48,141:INFO:Decision Tree Classifier Imported successfully
2023-11-24 16:53:48,141:INFO:Starting cross validation
2023-11-24 16:53:48,142:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:53:48,818:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:48,821:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:48,823:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:48,906:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:48,908:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:48,911:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:48,915:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:48,916:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:48,919:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:48,921:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:48,923:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:48,925:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:48,952:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:48,954:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:48,956:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:48,967:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:48,968:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:48,969:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:48,971:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:48,971:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:48,972:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:48,973:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:48,975:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:48,977:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:48,981:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:48,983:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:48,985:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:48,998:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:49,001:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:49,003:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:49,007:INFO:Calculating mean and std
2023-11-24 16:53:49,008:INFO:Creating metrics dataframe
2023-11-24 16:53:49,009:INFO:Uploading results into container
2023-11-24 16:53:49,010:INFO:Uploading model into container now
2023-11-24 16:53:49,010:INFO:_master_model_container: 4
2023-11-24 16:53:49,010:INFO:_display_container: 2
2023-11-24 16:53:49,010:INFO:DecisionTreeClassifier(random_state=8325)
2023-11-24 16:53:49,010:INFO:create_model() successfully completed......................................
2023-11-24 16:53:49,100:INFO:SubProcess create_model() end ==================================
2023-11-24 16:53:49,100:INFO:Creating metrics dataframe
2023-11-24 16:53:49,102:INFO:Initializing SVM - Linear Kernel
2023-11-24 16:53:49,102:INFO:Total runtime is 0.14825880130132038 minutes
2023-11-24 16:53:49,102:INFO:SubProcess create_model() called ==================================
2023-11-24 16:53:49,102:INFO:Initializing create_model()
2023-11-24 16:53:49,102:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e4b44d0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28eb04ed0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:53:49,102:INFO:Checking exceptions
2023-11-24 16:53:49,102:INFO:Importing libraries
2023-11-24 16:53:49,102:INFO:Copying training dataset
2023-11-24 16:53:49,104:INFO:Defining folds
2023-11-24 16:53:49,104:INFO:Declaring metric variables
2023-11-24 16:53:49,104:INFO:Importing untrained model
2023-11-24 16:53:49,104:INFO:SVM - Linear Kernel Imported successfully
2023-11-24 16:53:49,104:INFO:Starting cross validation
2023-11-24 16:53:49,105:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:53:50,459:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:53:50,460:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:50,462:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:50,464:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:53:50,465:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:50,497:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:53:50,498:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:50,500:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:50,503:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:50,557:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:53:50,559:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:50,561:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:50,563:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:50,589:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:53:50,590:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:50,592:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:50,593:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:53:50,594:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:50,599:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:53:50,600:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:50,602:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:50,605:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:50,608:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:53:50,609:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:50,611:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:50,613:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:53:50,613:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:50,644:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:53:50,645:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:50,645:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:53:50,646:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:50,647:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:50,648:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:50,649:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:50,649:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:53:50,650:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:50,668:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:53:50,669:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:50,671:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:50,672:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:53:50,673:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:50,729:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:53:50,730:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:50,732:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:50,734:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:50,737:INFO:Calculating mean and std
2023-11-24 16:53:50,738:INFO:Creating metrics dataframe
2023-11-24 16:53:50,739:INFO:Uploading results into container
2023-11-24 16:53:50,739:INFO:Uploading model into container now
2023-11-24 16:53:50,739:INFO:_master_model_container: 5
2023-11-24 16:53:50,739:INFO:_display_container: 2
2023-11-24 16:53:50,739:INFO:SGDClassifier(eta0=0.001, n_jobs=-1, random_state=8325)
2023-11-24 16:53:50,739:INFO:create_model() successfully completed......................................
2023-11-24 16:53:50,828:INFO:SubProcess create_model() end ==================================
2023-11-24 16:53:50,828:INFO:Creating metrics dataframe
2023-11-24 16:53:50,829:INFO:Initializing Ridge Classifier
2023-11-24 16:53:50,829:INFO:Total runtime is 0.17705190181732178 minutes
2023-11-24 16:53:50,829:INFO:SubProcess create_model() called ==================================
2023-11-24 16:53:50,829:INFO:Initializing create_model()
2023-11-24 16:53:50,829:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e4b44d0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28eb04ed0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:53:50,829:INFO:Checking exceptions
2023-11-24 16:53:50,829:INFO:Importing libraries
2023-11-24 16:53:50,829:INFO:Copying training dataset
2023-11-24 16:53:50,832:INFO:Defining folds
2023-11-24 16:53:50,832:INFO:Declaring metric variables
2023-11-24 16:53:50,832:INFO:Importing untrained model
2023-11-24 16:53:50,832:INFO:Ridge Classifier Imported successfully
2023-11-24 16:53:50,832:INFO:Starting cross validation
2023-11-24 16:53:50,833:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:53:51,474:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:53:51,477:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:51,485:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:53:51,486:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:51,488:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:51,489:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:51,489:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:53:51,490:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:53:51,490:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:51,491:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:51,492:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:53:51,493:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:51,495:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:51,496:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:53:51,497:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:51,508:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:53:51,509:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:51,515:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:53:51,516:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:51,518:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:51,519:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:51,519:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:53:51,520:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:53:51,520:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:51,521:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:51,521:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:53:51,522:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:51,522:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:53:51,523:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:51,524:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:51,525:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:53:51,526:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:51,526:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:51,527:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:53:51,528:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:51,531:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:53:51,532:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:51,534:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:51,535:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:53:51,536:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:53:51,536:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:51,537:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:51,539:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:51,540:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:53:51,541:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:51,552:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:53:51,553:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:51,555:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:51,556:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:53:51,557:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:51,562:INFO:Calculating mean and std
2023-11-24 16:53:51,562:INFO:Creating metrics dataframe
2023-11-24 16:53:51,563:INFO:Uploading results into container
2023-11-24 16:53:51,563:INFO:Uploading model into container now
2023-11-24 16:53:51,563:INFO:_master_model_container: 6
2023-11-24 16:53:51,563:INFO:_display_container: 2
2023-11-24 16:53:51,563:INFO:RidgeClassifier(random_state=8325)
2023-11-24 16:53:51,563:INFO:create_model() successfully completed......................................
2023-11-24 16:53:51,651:INFO:SubProcess create_model() end ==================================
2023-11-24 16:53:51,651:INFO:Creating metrics dataframe
2023-11-24 16:53:51,653:INFO:Initializing Random Forest Classifier
2023-11-24 16:53:51,653:INFO:Total runtime is 0.19078176418940226 minutes
2023-11-24 16:53:51,653:INFO:SubProcess create_model() called ==================================
2023-11-24 16:53:51,653:INFO:Initializing create_model()
2023-11-24 16:53:51,653:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e4b44d0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28eb04ed0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:53:51,653:INFO:Checking exceptions
2023-11-24 16:53:51,653:INFO:Importing libraries
2023-11-24 16:53:51,653:INFO:Copying training dataset
2023-11-24 16:53:51,656:INFO:Defining folds
2023-11-24 16:53:51,656:INFO:Declaring metric variables
2023-11-24 16:53:51,656:INFO:Importing untrained model
2023-11-24 16:53:51,656:INFO:Random Forest Classifier Imported successfully
2023-11-24 16:53:51,656:INFO:Starting cross validation
2023-11-24 16:53:51,657:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:53:52,793:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:52,796:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:52,797:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:53:52,798:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:53,397:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:53,400:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:53,401:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:53,402:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:53,403:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:53:53,404:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:53:53,404:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:53,405:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:53,473:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:53,477:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:53,480:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:53,484:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:53,484:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:53,487:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:53,487:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:53,488:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:53,488:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:53:53,489:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:53,489:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:53,490:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:53,490:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:53:53,491:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:53,492:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:53,492:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:53,495:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:53,497:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:53,499:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:53,500:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:53,501:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:53:53,502:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:53,502:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:53,504:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:53:53,505:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:53,508:INFO:Calculating mean and std
2023-11-24 16:53:53,508:INFO:Creating metrics dataframe
2023-11-24 16:53:53,509:INFO:Uploading results into container
2023-11-24 16:53:53,510:INFO:Uploading model into container now
2023-11-24 16:53:53,510:INFO:_master_model_container: 7
2023-11-24 16:53:53,510:INFO:_display_container: 2
2023-11-24 16:53:53,510:INFO:RandomForestClassifier(n_jobs=-1, random_state=8325)
2023-11-24 16:53:53,510:INFO:create_model() successfully completed......................................
2023-11-24 16:53:53,596:INFO:SubProcess create_model() end ==================================
2023-11-24 16:53:53,596:INFO:Creating metrics dataframe
2023-11-24 16:53:53,598:INFO:Initializing Quadratic Discriminant Analysis
2023-11-24 16:53:53,598:INFO:Total runtime is 0.2231923500696818 minutes
2023-11-24 16:53:53,598:INFO:SubProcess create_model() called ==================================
2023-11-24 16:53:53,598:INFO:Initializing create_model()
2023-11-24 16:53:53,598:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e4b44d0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28eb04ed0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:53:53,598:INFO:Checking exceptions
2023-11-24 16:53:53,598:INFO:Importing libraries
2023-11-24 16:53:53,598:INFO:Copying training dataset
2023-11-24 16:53:53,600:INFO:Defining folds
2023-11-24 16:53:53,600:INFO:Declaring metric variables
2023-11-24 16:53:53,600:INFO:Importing untrained model
2023-11-24 16:53:53,600:INFO:Quadratic Discriminant Analysis Imported successfully
2023-11-24 16:53:53,600:INFO:Starting cross validation
2023-11-24 16:53:53,601:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:53:54,098:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 16:53:54,117:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 16:53:54,142:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 16:53:54,149:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 16:53:54,149:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 16:53:54,149:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 16:53:54,179:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 16:53:54,196:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 16:53:54,206:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 16:53:54,381:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 16:53:54,393:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:54,396:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:54,397:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:53:54,398:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:54,409:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:54,411:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:54,412:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:53:54,412:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:54,412:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:54,413:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:54,415:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:54,415:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:54,416:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:53:54,416:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:53:54,417:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:54,417:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:54,425:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:54,427:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:54,428:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:53:54,429:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:54,435:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:54,438:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:54,439:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:53:54,440:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:54,448:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:54,450:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:54,451:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:53:54,452:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:54,453:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:54,456:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:54,457:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:53:54,458:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:54,459:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:54,461:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:54,463:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:53:54,464:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:54,566:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:54,568:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:54,569:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:53:54,570:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:54,574:INFO:Calculating mean and std
2023-11-24 16:53:54,575:INFO:Creating metrics dataframe
2023-11-24 16:53:54,576:INFO:Uploading results into container
2023-11-24 16:53:54,576:INFO:Uploading model into container now
2023-11-24 16:53:54,576:INFO:_master_model_container: 8
2023-11-24 16:53:54,576:INFO:_display_container: 2
2023-11-24 16:53:54,576:INFO:QuadraticDiscriminantAnalysis()
2023-11-24 16:53:54,576:INFO:create_model() successfully completed......................................
2023-11-24 16:53:54,671:INFO:SubProcess create_model() end ==================================
2023-11-24 16:53:54,671:INFO:Creating metrics dataframe
2023-11-24 16:53:54,672:INFO:Initializing Ada Boost Classifier
2023-11-24 16:53:54,672:INFO:Total runtime is 0.24110223452250162 minutes
2023-11-24 16:53:54,672:INFO:SubProcess create_model() called ==================================
2023-11-24 16:53:54,672:INFO:Initializing create_model()
2023-11-24 16:53:54,672:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e4b44d0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28eb04ed0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:53:54,672:INFO:Checking exceptions
2023-11-24 16:53:54,672:INFO:Importing libraries
2023-11-24 16:53:54,672:INFO:Copying training dataset
2023-11-24 16:53:54,675:INFO:Defining folds
2023-11-24 16:53:54,675:INFO:Declaring metric variables
2023-11-24 16:53:54,675:INFO:Importing untrained model
2023-11-24 16:53:54,675:INFO:Ada Boost Classifier Imported successfully
2023-11-24 16:53:54,675:INFO:Starting cross validation
2023-11-24 16:53:54,676:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:53:55,921:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:55,924:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:55,929:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:55,968:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:55,971:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:55,973:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:55,996:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:56,003:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:56,003:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:56,005:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:56,005:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:56,007:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:56,012:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:56,014:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:56,016:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:56,021:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:56,023:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:56,025:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:56,055:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:56,057:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:56,059:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:56,059:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:56,062:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:56,064:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:56,070:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:56,072:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:56,074:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:56,136:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:56,138:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:56,140:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:53:56,145:INFO:Calculating mean and std
2023-11-24 16:53:56,145:INFO:Creating metrics dataframe
2023-11-24 16:53:56,146:INFO:Uploading results into container
2023-11-24 16:53:56,146:INFO:Uploading model into container now
2023-11-24 16:53:56,146:INFO:_master_model_container: 9
2023-11-24 16:53:56,146:INFO:_display_container: 2
2023-11-24 16:53:56,146:INFO:AdaBoostClassifier(random_state=8325)
2023-11-24 16:53:56,146:INFO:create_model() successfully completed......................................
2023-11-24 16:53:56,233:INFO:SubProcess create_model() end ==================================
2023-11-24 16:53:56,233:INFO:Creating metrics dataframe
2023-11-24 16:53:56,235:INFO:Initializing Gradient Boosting Classifier
2023-11-24 16:53:56,235:INFO:Total runtime is 0.2671502510706584 minutes
2023-11-24 16:53:56,235:INFO:SubProcess create_model() called ==================================
2023-11-24 16:53:56,235:INFO:Initializing create_model()
2023-11-24 16:53:56,235:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e4b44d0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28eb04ed0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:53:56,235:INFO:Checking exceptions
2023-11-24 16:53:56,235:INFO:Importing libraries
2023-11-24 16:53:56,235:INFO:Copying training dataset
2023-11-24 16:53:56,238:INFO:Defining folds
2023-11-24 16:53:56,238:INFO:Declaring metric variables
2023-11-24 16:53:56,238:INFO:Importing untrained model
2023-11-24 16:53:56,238:INFO:Gradient Boosting Classifier Imported successfully
2023-11-24 16:53:56,238:INFO:Starting cross validation
2023-11-24 16:53:56,239:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:54:04,226:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:04,230:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:04,232:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:04,269:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:04,271:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:04,273:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:04,346:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:04,348:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:04,350:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:04,359:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:04,361:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:04,362:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:04,364:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:04,364:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:04,369:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:04,384:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:04,386:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:04,388:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:04,395:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:04,398:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:04,400:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:04,453:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:04,455:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:04,457:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:04,483:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:04,485:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:04,487:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:04,530:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:04,532:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:04,534:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:04,539:INFO:Calculating mean and std
2023-11-24 16:54:04,539:INFO:Creating metrics dataframe
2023-11-24 16:54:04,541:INFO:Uploading results into container
2023-11-24 16:54:04,541:INFO:Uploading model into container now
2023-11-24 16:54:04,541:INFO:_master_model_container: 10
2023-11-24 16:54:04,541:INFO:_display_container: 2
2023-11-24 16:54:04,541:INFO:GradientBoostingClassifier(random_state=8325)
2023-11-24 16:54:04,541:INFO:create_model() successfully completed......................................
2023-11-24 16:54:04,648:INFO:SubProcess create_model() end ==================================
2023-11-24 16:54:04,648:INFO:Creating metrics dataframe
2023-11-24 16:54:04,650:INFO:Initializing Linear Discriminant Analysis
2023-11-24 16:54:04,650:INFO:Total runtime is 0.40739121834437053 minutes
2023-11-24 16:54:04,650:INFO:SubProcess create_model() called ==================================
2023-11-24 16:54:04,650:INFO:Initializing create_model()
2023-11-24 16:54:04,650:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e4b44d0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28eb04ed0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:54:04,650:INFO:Checking exceptions
2023-11-24 16:54:04,650:INFO:Importing libraries
2023-11-24 16:54:04,650:INFO:Copying training dataset
2023-11-24 16:54:04,652:INFO:Defining folds
2023-11-24 16:54:04,652:INFO:Declaring metric variables
2023-11-24 16:54:04,652:INFO:Importing untrained model
2023-11-24 16:54:04,652:INFO:Linear Discriminant Analysis Imported successfully
2023-11-24 16:54:04,652:INFO:Starting cross validation
2023-11-24 16:54:04,654:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:54:05,512:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:05,514:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:05,516:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:05,517:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:05,520:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:05,522:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:05,527:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:05,528:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:05,530:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:05,530:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:05,532:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:05,533:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:05,542:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:05,545:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:05,547:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:05,548:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:05,551:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:05,553:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:05,575:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:05,578:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:05,580:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:05,593:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:05,595:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:05,598:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:05,610:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:05,612:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:05,613:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:05,615:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:05,615:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:05,617:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:05,622:INFO:Calculating mean and std
2023-11-24 16:54:05,622:INFO:Creating metrics dataframe
2023-11-24 16:54:05,623:INFO:Uploading results into container
2023-11-24 16:54:05,623:INFO:Uploading model into container now
2023-11-24 16:54:05,623:INFO:_master_model_container: 11
2023-11-24 16:54:05,624:INFO:_display_container: 2
2023-11-24 16:54:05,624:INFO:LinearDiscriminantAnalysis()
2023-11-24 16:54:05,624:INFO:create_model() successfully completed......................................
2023-11-24 16:54:05,715:INFO:SubProcess create_model() end ==================================
2023-11-24 16:54:05,715:INFO:Creating metrics dataframe
2023-11-24 16:54:05,717:INFO:Initializing Extra Trees Classifier
2023-11-24 16:54:05,717:INFO:Total runtime is 0.425182569026947 minutes
2023-11-24 16:54:05,717:INFO:SubProcess create_model() called ==================================
2023-11-24 16:54:05,717:INFO:Initializing create_model()
2023-11-24 16:54:05,717:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e4b44d0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28eb04ed0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:54:05,717:INFO:Checking exceptions
2023-11-24 16:54:05,717:INFO:Importing libraries
2023-11-24 16:54:05,717:INFO:Copying training dataset
2023-11-24 16:54:05,720:INFO:Defining folds
2023-11-24 16:54:05,720:INFO:Declaring metric variables
2023-11-24 16:54:05,720:INFO:Importing untrained model
2023-11-24 16:54:05,720:INFO:Extra Trees Classifier Imported successfully
2023-11-24 16:54:05,720:INFO:Starting cross validation
2023-11-24 16:54:05,721:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:54:07,175:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:07,179:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:07,180:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:54:07,181:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:08,079:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:08,082:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:08,084:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:08,106:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:08,107:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:08,108:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:08,109:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:08,110:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:08,110:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:54:08,111:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:08,111:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:08,111:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:54:08,112:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:08,112:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:08,113:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:08,113:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:08,113:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:08,114:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:08,115:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:08,115:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:08,115:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:08,115:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:08,116:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:54:08,117:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:08,117:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:08,118:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:08,118:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:08,119:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:54:08,119:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:54:08,120:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:08,120:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:08,120:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:08,128:INFO:Calculating mean and std
2023-11-24 16:54:08,129:INFO:Creating metrics dataframe
2023-11-24 16:54:08,132:INFO:Uploading results into container
2023-11-24 16:54:08,133:INFO:Uploading model into container now
2023-11-24 16:54:08,133:INFO:_master_model_container: 12
2023-11-24 16:54:08,133:INFO:_display_container: 2
2023-11-24 16:54:08,133:INFO:ExtraTreesClassifier(n_jobs=-1, random_state=8325)
2023-11-24 16:54:08,133:INFO:create_model() successfully completed......................................
2023-11-24 16:54:08,226:INFO:SubProcess create_model() end ==================================
2023-11-24 16:54:08,226:INFO:Creating metrics dataframe
2023-11-24 16:54:08,228:INFO:Initializing Extreme Gradient Boosting
2023-11-24 16:54:08,228:INFO:Total runtime is 0.46703190008799234 minutes
2023-11-24 16:54:08,228:INFO:SubProcess create_model() called ==================================
2023-11-24 16:54:08,228:INFO:Initializing create_model()
2023-11-24 16:54:08,228:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e4b44d0>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28eb04ed0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:54:08,228:INFO:Checking exceptions
2023-11-24 16:54:08,228:INFO:Importing libraries
2023-11-24 16:54:08,228:INFO:Copying training dataset
2023-11-24 16:54:08,231:INFO:Defining folds
2023-11-24 16:54:08,231:INFO:Declaring metric variables
2023-11-24 16:54:08,231:INFO:Importing untrained model
2023-11-24 16:54:08,231:INFO:Extreme Gradient Boosting Imported successfully
2023-11-24 16:54:08,231:INFO:Starting cross validation
2023-11-24 16:54:08,232:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:54:25,104:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:25,107:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:25,109:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:25,118:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:25,120:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:25,122:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:25,351:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:25,354:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:25,356:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:25,429:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:25,432:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:25,434:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:25,490:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:25,492:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:25,498:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:25,572:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:25,574:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:25,577:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:25,650:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:25,653:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:25,655:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:25,754:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:25,756:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:25,758:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:25,768:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:25,771:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:25,773:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:25,894:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:25,897:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:25,899:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:25,903:INFO:Calculating mean and std
2023-11-24 16:54:25,904:INFO:Creating metrics dataframe
2023-11-24 16:54:25,905:INFO:Uploading results into container
2023-11-24 16:54:25,905:INFO:Uploading model into container now
2023-11-24 16:54:25,905:INFO:_master_model_container: 13
2023-11-24 16:54:25,905:INFO:_display_container: 2
2023-11-24 16:54:25,905:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              predictor=None, random_state=8325, ...)
2023-11-24 16:54:25,905:INFO:create_model() successfully completed......................................
2023-11-24 16:54:25,996:INFO:SubProcess create_model() end ==================================
2023-11-24 16:54:25,996:INFO:Creating metrics dataframe
2023-11-24 16:54:25,997:INFO:Initializing Light Gradient Boosting Machine
2023-11-24 16:54:25,997:INFO:Total runtime is 0.7631887157758077 minutes
2023-11-24 16:54:25,998:INFO:SubProcess create_model() called ==================================
2023-11-24 16:54:25,998:INFO:Initializing create_model()
2023-11-24 16:54:25,998:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e4b44d0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28eb04ed0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:54:25,998:INFO:Checking exceptions
2023-11-24 16:54:25,998:INFO:Importing libraries
2023-11-24 16:54:25,998:INFO:Copying training dataset
2023-11-24 16:54:26,000:INFO:Defining folds
2023-11-24 16:54:26,000:INFO:Declaring metric variables
2023-11-24 16:54:26,000:INFO:Importing untrained model
2023-11-24 16:54:26,000:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-24 16:54:26,000:INFO:Starting cross validation
2023-11-24 16:54:26,001:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:54:26,718:WARNING:create_model() for lightgbm raised an exception or returned all 0.0, trying without fit_kwargs:
2023-11-24 16:54:26,719:WARNING:Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/sklearn.py", line 1142, in fit
    super().fit(
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/sklearn.py", line 842, in fit
    self._Booster = train(
                    ^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/engine.py", line 255, in train
    booster = Booster(params=params, train_set=train_set)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 3200, in __init__
    train_set.construct()
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 2276, in construct
    self._lazy_init(data=self.data, label=self.label, reference=None,
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 1959, in _lazy_init
    return self.set_feature_name(feature_name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 2639, in set_feature_name
    _safe_call(_LIB.LGBM_DatasetSetFeatureNames(
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 242, in _safe_call
    raise LightGBMError(_LIB.LGBM_GetLastError().decode('utf-8'))
lightgbm.basic.LightGBMError: Do not support special JSON characters in feature name.


2023-11-24 16:54:26,719:INFO:Initializing create_model()
2023-11-24 16:54:26,719:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e4b44d0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28eb04ed0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:54:26,719:INFO:Checking exceptions
2023-11-24 16:54:26,719:INFO:Importing libraries
2023-11-24 16:54:26,719:INFO:Copying training dataset
2023-11-24 16:54:26,722:INFO:Defining folds
2023-11-24 16:54:26,722:INFO:Declaring metric variables
2023-11-24 16:54:26,722:INFO:Importing untrained model
2023-11-24 16:54:26,722:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-24 16:54:26,722:INFO:Starting cross validation
2023-11-24 16:54:26,723:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:54:27,394:ERROR:create_model() for lightgbm raised an exception or returned all 0.0:
2023-11-24 16:54:27,395:ERROR:Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/sklearn.py", line 1142, in fit
    super().fit(
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/sklearn.py", line 842, in fit
    self._Booster = train(
                    ^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/engine.py", line 255, in train
    booster = Booster(params=params, train_set=train_set)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 3200, in __init__
    train_set.construct()
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 2276, in construct
    self._lazy_init(data=self.data, label=self.label, reference=None,
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 1959, in _lazy_init
    return self.set_feature_name(feature_name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 2639, in set_feature_name
    _safe_call(_LIB.LGBM_DatasetSetFeatureNames(
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 242, in _safe_call
    raise LightGBMError(_LIB.LGBM_GetLastError().decode('utf-8'))
lightgbm.basic.LightGBMError: Do not support special JSON characters in feature name.


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/sklearn.py", line 1142, in fit
    super().fit(
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/sklearn.py", line 842, in fit
    self._Booster = train(
                    ^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/engine.py", line 255, in train
    booster = Booster(params=params, train_set=train_set)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 3200, in __init__
    train_set.construct()
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 2276, in construct
    self._lazy_init(data=self.data, label=self.label, reference=None,
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 1959, in _lazy_init
    return self.set_feature_name(feature_name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 2639, in set_feature_name
    _safe_call(_LIB.LGBM_DatasetSetFeatureNames(
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 242, in _safe_call
    raise LightGBMError(_LIB.LGBM_GetLastError().decode('utf-8'))
lightgbm.basic.LightGBMError: Do not support special JSON characters in feature name.


2023-11-24 16:54:27,395:INFO:Initializing Dummy Classifier
2023-11-24 16:54:27,395:INFO:Total runtime is 0.7864871541659038 minutes
2023-11-24 16:54:27,395:INFO:SubProcess create_model() called ==================================
2023-11-24 16:54:27,396:INFO:Initializing create_model()
2023-11-24 16:54:27,396:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e4b44d0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28eb04ed0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:54:27,396:INFO:Checking exceptions
2023-11-24 16:54:27,396:INFO:Importing libraries
2023-11-24 16:54:27,396:INFO:Copying training dataset
2023-11-24 16:54:27,398:INFO:Defining folds
2023-11-24 16:54:27,398:INFO:Declaring metric variables
2023-11-24 16:54:27,398:INFO:Importing untrained model
2023-11-24 16:54:27,399:INFO:Dummy Classifier Imported successfully
2023-11-24 16:54:27,399:INFO:Starting cross validation
2023-11-24 16:54:27,400:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:54:28,015:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:28,018:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:28,019:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:54:28,020:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:28,057:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:28,060:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:28,061:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:54:28,062:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:28,069:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:28,072:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:28,073:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:54:28,074:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:28,079:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:28,083:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:28,085:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:54:28,086:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:28,100:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:28,101:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:28,102:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:28,104:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:54:28,104:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:28,105:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:28,105:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:28,105:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:54:28,106:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:28,107:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:28,108:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:54:28,109:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:28,126:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:28,127:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:28,128:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:28,129:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:28,129:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:54:28,130:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:28,130:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:54:28,131:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:28,142:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:28,145:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:28,146:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:54:28,147:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:54:28,152:INFO:Calculating mean and std
2023-11-24 16:54:28,153:INFO:Creating metrics dataframe
2023-11-24 16:54:28,154:INFO:Uploading results into container
2023-11-24 16:54:28,154:INFO:Uploading model into container now
2023-11-24 16:54:28,154:INFO:_master_model_container: 14
2023-11-24 16:54:28,154:INFO:_display_container: 2
2023-11-24 16:54:28,155:INFO:DummyClassifier(random_state=8325)
2023-11-24 16:54:28,155:INFO:create_model() successfully completed......................................
2023-11-24 16:54:28,286:INFO:SubProcess create_model() end ==================================
2023-11-24 16:54:28,286:INFO:Creating metrics dataframe
2023-11-24 16:54:28,289:INFO:Initializing create_model()
2023-11-24 16:54:28,289:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e4b44d0>, estimator=RandomForestClassifier(n_jobs=-1, random_state=8325), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:54:28,289:INFO:Checking exceptions
2023-11-24 16:54:28,289:INFO:Importing libraries
2023-11-24 16:54:28,289:INFO:Copying training dataset
2023-11-24 16:54:28,291:INFO:Defining folds
2023-11-24 16:54:28,291:INFO:Declaring metric variables
2023-11-24 16:54:28,291:INFO:Importing untrained model
2023-11-24 16:54:28,291:INFO:Declaring custom model
2023-11-24 16:54:28,291:INFO:Random Forest Classifier Imported successfully
2023-11-24 16:54:28,292:INFO:Cross validation set to False
2023-11-24 16:54:28,292:INFO:Fitting Model
2023-11-24 16:54:28,767:INFO:RandomForestClassifier(n_jobs=-1, random_state=8325)
2023-11-24 16:54:28,767:INFO:create_model() successfully completed......................................
2023-11-24 16:54:28,858:INFO:_master_model_container: 14
2023-11-24 16:54:28,858:INFO:_display_container: 2
2023-11-24 16:54:28,858:INFO:RandomForestClassifier(n_jobs=-1, random_state=8325)
2023-11-24 16:54:28,858:INFO:compare_models() successfully completed......................................
2023-11-24 16:54:28,864:INFO:Initializing save_model()
2023-11-24 16:54:28,864:INFO:save_model(model=RandomForestClassifier(n_jobs=-1, random_state=8325), model_name=best_model, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/46/tcczvndd7xj_pqs5r176bl600000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Number_of_vehicles_involved',
                                             'Number_of_casualties'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrappe...
                                                                    'Vehicle_movement',
                                                                    'Casualty_class',
                                                                    'Sex_of_casualty',
                                                                    'Age_band_of_casualty',
                                                                    'Casualty_severity',
                                                                    'Work_of_casuality',
                                                                    'Fitness_of_casuality',
                                                                    'Pedestrian_movement',
                                                                    'Cause_of_accident'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['Time'],
                                    transformer=TargetEncoder(cols=['Time'],
                                                              handle_missing='return_nan')))]), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-11-24 16:54:28,864:INFO:Adding model into prep_pipe
2023-11-24 16:54:28,894:INFO:best_model.pkl saved in current working directory
2023-11-24 16:54:28,898:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Number_of_vehicles_involved',
                                             'Number_of_casualties'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Time', 'Day_of_week',
                                             'Age_band_of_driver',
                                             'S...
                                                                    'Casualty_severity',
                                                                    'Work_of_casuality',
                                                                    'Fitness_of_casuality',
                                                                    'Pedestrian_movement',
                                                                    'Cause_of_accident'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['Time'],
                                    transformer=TargetEncoder(cols=['Time'],
                                                              handle_missing='return_nan'))),
                ('trained_model',
                 RandomForestClassifier(n_jobs=-1, random_state=8325))])
2023-11-24 16:54:28,898:INFO:save_model() successfully completed......................................
2023-11-24 16:57:01,337:INFO:PyCaret ClassificationExperiment
2023-11-24 16:57:01,338:INFO:Logging name: clf-default-name
2023-11-24 16:57:01,338:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-11-24 16:57:01,338:INFO:version 3.2.0
2023-11-24 16:57:01,338:INFO:Initializing setup()
2023-11-24 16:57:01,338:INFO:self.USI: e20a
2023-11-24 16:57:01,338:INFO:self._variable_keys: {'_available_plots', 'fix_imbalance', 'fold_shuffle_param', 'exp_id', 'y_test', 'y_train', 'n_jobs_param', 'memory', 'log_plots_param', 'html_param', 'gpu_param', '_ml_usecase', 'idx', 'pipeline', 'is_multiclass', 'seed', 'X_test', 'logging_param', 'data', 'fold_generator', 'exp_name_log', 'USI', 'X', 'fold_groups_param', 'X_train', 'y', 'gpu_n_jobs_param', 'target_param'}
2023-11-24 16:57:01,338:INFO:Checking environment
2023-11-24 16:57:01,338:INFO:python_version: 3.11.5
2023-11-24 16:57:01,338:INFO:python_build: ('main', 'Sep 11 2023 08:31:25')
2023-11-24 16:57:01,338:INFO:machine: arm64
2023-11-24 16:57:01,338:INFO:platform: macOS-14.0-arm64-arm-64bit
2023-11-24 16:57:01,338:INFO:Memory: svmem(total=17179869184, available=4405837824, percent=74.4, used=6291062784, free=54591488, active=4365434880, inactive=4348674048, wired=1925627904)
2023-11-24 16:57:01,338:INFO:Physical Core: 10
2023-11-24 16:57:01,338:INFO:Logical Core: 10
2023-11-24 16:57:01,338:INFO:Checking libraries
2023-11-24 16:57:01,338:INFO:System:
2023-11-24 16:57:01,338:INFO:    python: 3.11.5 (main, Sep 11 2023, 08:31:25) [Clang 14.0.6 ]
2023-11-24 16:57:01,338:INFO:executable: /Users/saiakhil/anaconda3/envs/mlauto/bin/python
2023-11-24 16:57:01,338:INFO:   machine: macOS-14.0-arm64-arm-64bit
2023-11-24 16:57:01,338:INFO:PyCaret required dependencies:
2023-11-24 16:57:01,338:INFO:                 pip: 23.3.1
2023-11-24 16:57:01,338:INFO:          setuptools: 68.0.0
2023-11-24 16:57:01,338:INFO:             pycaret: 3.2.0
2023-11-24 16:57:01,338:INFO:             IPython: 8.15.0
2023-11-24 16:57:01,338:INFO:          ipywidgets: 8.1.1
2023-11-24 16:57:01,338:INFO:                tqdm: 4.66.1
2023-11-24 16:57:01,338:INFO:               numpy: 1.25.2
2023-11-24 16:57:01,338:INFO:              pandas: 1.5.3
2023-11-24 16:57:01,338:INFO:              jinja2: 3.1.2
2023-11-24 16:57:01,338:INFO:               scipy: 1.11.3
2023-11-24 16:57:01,338:INFO:              joblib: 1.3.2
2023-11-24 16:57:01,338:INFO:             sklearn: 1.2.2
2023-11-24 16:57:01,338:INFO:                pyod: 1.1.2
2023-11-24 16:57:01,338:INFO:            imblearn: 0.11.0
2023-11-24 16:57:01,338:INFO:   category_encoders: 2.6.3
2023-11-24 16:57:01,338:INFO:            lightgbm: 4.1.0
2023-11-24 16:57:01,338:INFO:               numba: 0.58.1
2023-11-24 16:57:01,338:INFO:            requests: 2.31.0
2023-11-24 16:57:01,338:INFO:          matplotlib: 3.6.0
2023-11-24 16:57:01,338:INFO:          scikitplot: 0.3.7
2023-11-24 16:57:01,338:INFO:         yellowbrick: 1.5
2023-11-24 16:57:01,338:INFO:              plotly: 5.18.0
2023-11-24 16:57:01,338:INFO:    plotly-resampler: Not installed
2023-11-24 16:57:01,338:INFO:             kaleido: 0.2.1
2023-11-24 16:57:01,338:INFO:           schemdraw: 0.15
2023-11-24 16:57:01,338:INFO:         statsmodels: 0.14.0
2023-11-24 16:57:01,338:INFO:              sktime: 0.21.1
2023-11-24 16:57:01,338:INFO:               tbats: 1.1.3
2023-11-24 16:57:01,338:INFO:            pmdarima: 2.0.4
2023-11-24 16:57:01,338:INFO:              psutil: 5.9.6
2023-11-24 16:57:01,338:INFO:          markupsafe: 2.1.3
2023-11-24 16:57:01,338:INFO:             pickle5: Not installed
2023-11-24 16:57:01,338:INFO:         cloudpickle: 3.0.0
2023-11-24 16:57:01,338:INFO:         deprecation: 2.1.0
2023-11-24 16:57:01,338:INFO:              xxhash: 3.4.1
2023-11-24 16:57:01,338:INFO:           wurlitzer: 3.0.3
2023-11-24 16:57:01,338:INFO:PyCaret optional dependencies:
2023-11-24 16:57:01,338:INFO:                shap: Not installed
2023-11-24 16:57:01,338:INFO:           interpret: Not installed
2023-11-24 16:57:01,338:INFO:                umap: Not installed
2023-11-24 16:57:01,338:INFO:     ydata_profiling: 4.6.2
2023-11-24 16:57:01,339:INFO:  explainerdashboard: Not installed
2023-11-24 16:57:01,339:INFO:             autoviz: Not installed
2023-11-24 16:57:01,339:INFO:           fairlearn: Not installed
2023-11-24 16:57:01,339:INFO:          deepchecks: Not installed
2023-11-24 16:57:01,339:INFO:             xgboost: 1.7.3
2023-11-24 16:57:01,339:INFO:            catboost: Not installed
2023-11-24 16:57:01,339:INFO:              kmodes: Not installed
2023-11-24 16:57:01,339:INFO:             mlxtend: Not installed
2023-11-24 16:57:01,339:INFO:       statsforecast: Not installed
2023-11-24 16:57:01,339:INFO:        tune_sklearn: Not installed
2023-11-24 16:57:01,339:INFO:                 ray: Not installed
2023-11-24 16:57:01,339:INFO:            hyperopt: Not installed
2023-11-24 16:57:01,339:INFO:              optuna: Not installed
2023-11-24 16:57:01,339:INFO:               skopt: Not installed
2023-11-24 16:57:01,339:INFO:              mlflow: Not installed
2023-11-24 16:57:01,339:INFO:              gradio: Not installed
2023-11-24 16:57:01,339:INFO:             fastapi: Not installed
2023-11-24 16:57:01,339:INFO:             uvicorn: Not installed
2023-11-24 16:57:01,339:INFO:              m2cgen: Not installed
2023-11-24 16:57:01,339:INFO:           evidently: Not installed
2023-11-24 16:57:01,339:INFO:               fugue: Not installed
2023-11-24 16:57:01,339:INFO:           streamlit: 1.28.2
2023-11-24 16:57:01,339:INFO:             prophet: Not installed
2023-11-24 16:57:01,339:INFO:None
2023-11-24 16:57:01,339:INFO:Set up data.
2023-11-24 16:57:01,363:INFO:Set up folding strategy.
2023-11-24 16:57:01,363:INFO:Set up train/test split.
2023-11-24 16:57:01,370:INFO:Set up index.
2023-11-24 16:57:01,371:INFO:Assigning column types.
2023-11-24 16:57:01,372:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-24 16:57:01,440:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 16:57:01,440:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:57:01,451:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:57:01,452:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:57:01,470:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 16:57:01,471:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:57:01,482:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:57:01,483:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:57:01,483:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-11-24 16:57:01,501:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:57:01,513:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:57:01,514:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:57:01,532:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:57:01,543:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:57:01,544:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:57:01,544:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-11-24 16:57:01,573:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:57:01,574:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:57:01,602:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:57:01,603:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:57:01,604:INFO:Preparing preprocessing pipeline...
2023-11-24 16:57:01,604:INFO:Set up label encoding.
2023-11-24 16:57:01,604:INFO:Set up simple imputation.
2023-11-24 16:57:01,606:INFO:Set up encoding of categorical features.
2023-11-24 16:57:02,004:INFO:Finished creating preprocessing pipeline.
2023-11-24 16:57:02,006:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/46/tcczvndd7xj_pqs5r176bl600000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Number_of_vehicles_involved',
                                             'Number_of_casualties'],
                                    transformer=SimpleImputer(add_i...
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['Time'],
                                    transformer=TargetEncoder(cols=['Time'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2023-11-24 16:57:02,006:INFO:Creating final display dataframe.
2023-11-24 16:57:02,477:INFO:Setup _display_container:                     Description                                              Value
0                    Session id                                               4215
1                        Target                                  Accident_severity
2                   Target type                                         Multiclass
3                Target mapping  Fatal injury: 0, Serious Injury: 1, Slight Inj...
4           Original data shape                                        (12316, 32)
5        Transformed data shape                                       (12316, 208)
6   Transformed train set shape                                        (8621, 208)
7    Transformed test set shape                                        (3695, 208)
8              Numeric features                                                  2
9          Categorical features                                                 29
10     Rows with missing values                                              76.5%
11                   Preprocess                                               True
12              Imputation type                                             simple
13           Numeric imputation                                               mean
14       Categorical imputation                                               mode
15     Maximum one-hot encoding                                                 25
16              Encoding method                                               None
17               Fold Generator                                    StratifiedKFold
18                  Fold Number                                                 10
19                     CPU Jobs                                                 -1
20                      Use GPU                                              False
21               Log Experiment                                              False
22              Experiment Name                                   clf-default-name
23                          USI                                               e20a
2023-11-24 16:57:02,506:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:57:02,507:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:57:02,534:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 16:57:02,536:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:57:02,536:INFO:setup() successfully completed in 1.2s...............
2023-11-24 16:57:04,668:INFO:Initializing compare_models()
2023-11-24 16:57:04,668:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e8f8c10>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x28e8f8c10>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2023-11-24 16:57:04,669:INFO:Checking exceptions
2023-11-24 16:57:04,671:INFO:Preparing display monitor
2023-11-24 16:57:04,672:INFO:Initializing Logistic Regression
2023-11-24 16:57:04,672:INFO:Total runtime is 6.039937337239583e-07 minutes
2023-11-24 16:57:04,672:INFO:SubProcess create_model() called ==================================
2023-11-24 16:57:04,672:INFO:Initializing create_model()
2023-11-24 16:57:04,672:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e8f8c10>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2a58b2bd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:57:04,672:INFO:Checking exceptions
2023-11-24 16:57:04,672:INFO:Importing libraries
2023-11-24 16:57:04,672:INFO:Copying training dataset
2023-11-24 16:57:04,674:INFO:Defining folds
2023-11-24 16:57:04,674:INFO:Declaring metric variables
2023-11-24 16:57:04,674:INFO:Importing untrained model
2023-11-24 16:57:04,675:INFO:Logistic Regression Imported successfully
2023-11-24 16:57:04,675:INFO:Starting cross validation
2023-11-24 16:57:04,676:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:57:09,404:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:09,407:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:09,409:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:09,532:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:09,537:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:09,540:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:09,564:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:09,567:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:09,568:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:57:09,569:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:09,650:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:09,655:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:09,658:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:09,667:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:09,670:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:09,672:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:09,764:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:09,766:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:09,769:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:09,769:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:09,771:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:09,773:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:57:09,774:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:09,977:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:09,980:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:09,981:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:57:09,982:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:10,023:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:10,025:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:10,027:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:10,157:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:10,159:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:10,160:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:57:10,161:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:10,167:INFO:Calculating mean and std
2023-11-24 16:57:10,168:INFO:Creating metrics dataframe
2023-11-24 16:57:10,169:INFO:Uploading results into container
2023-11-24 16:57:10,169:INFO:Uploading model into container now
2023-11-24 16:57:10,169:INFO:_master_model_container: 1
2023-11-24 16:57:10,169:INFO:_display_container: 2
2023-11-24 16:57:10,170:INFO:LogisticRegression(max_iter=1000, random_state=4215)
2023-11-24 16:57:10,170:INFO:create_model() successfully completed......................................
2023-11-24 16:57:10,256:INFO:SubProcess create_model() end ==================================
2023-11-24 16:57:10,256:INFO:Creating metrics dataframe
2023-11-24 16:57:10,257:INFO:Initializing K Neighbors Classifier
2023-11-24 16:57:10,257:INFO:Total runtime is 0.09309083620707194 minutes
2023-11-24 16:57:10,258:INFO:SubProcess create_model() called ==================================
2023-11-24 16:57:10,258:INFO:Initializing create_model()
2023-11-24 16:57:10,258:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e8f8c10>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2a58b2bd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:57:10,258:INFO:Checking exceptions
2023-11-24 16:57:10,258:INFO:Importing libraries
2023-11-24 16:57:10,258:INFO:Copying training dataset
2023-11-24 16:57:10,260:INFO:Defining folds
2023-11-24 16:57:10,260:INFO:Declaring metric variables
2023-11-24 16:57:10,260:INFO:Importing untrained model
2023-11-24 16:57:10,260:INFO:K Neighbors Classifier Imported successfully
2023-11-24 16:57:10,260:INFO:Starting cross validation
2023-11-24 16:57:10,261:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:57:11,108:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:11,110:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:11,112:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:57:11,113:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:11,234:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:11,240:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:11,241:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:57:11,242:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:11,270:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:11,272:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:11,272:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:11,272:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:11,274:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:11,274:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:11,274:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:11,276:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:57:11,277:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:11,277:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:11,280:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:11,283:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:11,284:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:57:11,285:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:11,299:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:11,301:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:11,302:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:57:11,303:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:11,305:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:11,306:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:11,307:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:11,308:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:11,309:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:11,310:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:11,316:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:11,319:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:11,320:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:57:11,321:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:11,327:INFO:Calculating mean and std
2023-11-24 16:57:11,328:INFO:Creating metrics dataframe
2023-11-24 16:57:11,332:INFO:Uploading results into container
2023-11-24 16:57:11,332:INFO:Uploading model into container now
2023-11-24 16:57:11,333:INFO:_master_model_container: 2
2023-11-24 16:57:11,333:INFO:_display_container: 2
2023-11-24 16:57:11,333:INFO:KNeighborsClassifier(n_jobs=-1)
2023-11-24 16:57:11,333:INFO:create_model() successfully completed......................................
2023-11-24 16:57:11,469:INFO:SubProcess create_model() end ==================================
2023-11-24 16:57:11,469:INFO:Creating metrics dataframe
2023-11-24 16:57:11,471:INFO:Initializing Naive Bayes
2023-11-24 16:57:11,471:INFO:Total runtime is 0.11331830422083536 minutes
2023-11-24 16:57:11,471:INFO:SubProcess create_model() called ==================================
2023-11-24 16:57:11,471:INFO:Initializing create_model()
2023-11-24 16:57:11,471:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e8f8c10>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2a58b2bd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:57:11,471:INFO:Checking exceptions
2023-11-24 16:57:11,471:INFO:Importing libraries
2023-11-24 16:57:11,471:INFO:Copying training dataset
2023-11-24 16:57:11,474:INFO:Defining folds
2023-11-24 16:57:11,474:INFO:Declaring metric variables
2023-11-24 16:57:11,474:INFO:Importing untrained model
2023-11-24 16:57:11,474:INFO:Naive Bayes Imported successfully
2023-11-24 16:57:11,474:INFO:Starting cross validation
2023-11-24 16:57:11,475:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:57:12,103:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:12,106:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:12,110:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:12,129:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:12,135:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:12,141:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:12,164:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:12,166:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:12,167:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:12,169:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:12,169:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:12,173:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:12,181:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:12,184:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:12,184:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:12,186:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:12,187:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:12,189:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:12,195:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:12,197:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:12,199:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:12,202:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:12,205:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:12,207:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:12,207:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:12,210:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:12,212:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:12,234:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:12,236:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:12,238:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:12,243:INFO:Calculating mean and std
2023-11-24 16:57:12,243:INFO:Creating metrics dataframe
2023-11-24 16:57:12,245:INFO:Uploading results into container
2023-11-24 16:57:12,245:INFO:Uploading model into container now
2023-11-24 16:57:12,245:INFO:_master_model_container: 3
2023-11-24 16:57:12,245:INFO:_display_container: 2
2023-11-24 16:57:12,245:INFO:GaussianNB()
2023-11-24 16:57:12,245:INFO:create_model() successfully completed......................................
2023-11-24 16:57:12,337:INFO:SubProcess create_model() end ==================================
2023-11-24 16:57:12,337:INFO:Creating metrics dataframe
2023-11-24 16:57:12,339:INFO:Initializing Decision Tree Classifier
2023-11-24 16:57:12,339:INFO:Total runtime is 0.12777948776880899 minutes
2023-11-24 16:57:12,339:INFO:SubProcess create_model() called ==================================
2023-11-24 16:57:12,339:INFO:Initializing create_model()
2023-11-24 16:57:12,339:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e8f8c10>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2a58b2bd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:57:12,339:INFO:Checking exceptions
2023-11-24 16:57:12,339:INFO:Importing libraries
2023-11-24 16:57:12,339:INFO:Copying training dataset
2023-11-24 16:57:12,341:INFO:Defining folds
2023-11-24 16:57:12,341:INFO:Declaring metric variables
2023-11-24 16:57:12,341:INFO:Importing untrained model
2023-11-24 16:57:12,341:INFO:Decision Tree Classifier Imported successfully
2023-11-24 16:57:12,341:INFO:Starting cross validation
2023-11-24 16:57:12,343:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:57:13,039:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:13,042:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:13,045:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:13,088:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:13,091:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:13,094:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:13,136:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:13,136:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:13,139:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:13,141:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:13,142:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:13,145:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:13,147:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:13,148:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:13,151:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:13,151:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:13,153:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:13,156:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:13,183:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:13,186:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:13,186:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:13,188:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:13,189:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:13,191:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:13,192:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:13,194:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:13,197:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:13,228:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:13,230:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:13,232:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:13,236:INFO:Calculating mean and std
2023-11-24 16:57:13,236:INFO:Creating metrics dataframe
2023-11-24 16:57:13,238:INFO:Uploading results into container
2023-11-24 16:57:13,238:INFO:Uploading model into container now
2023-11-24 16:57:13,238:INFO:_master_model_container: 4
2023-11-24 16:57:13,238:INFO:_display_container: 2
2023-11-24 16:57:13,238:INFO:DecisionTreeClassifier(random_state=4215)
2023-11-24 16:57:13,238:INFO:create_model() successfully completed......................................
2023-11-24 16:57:13,329:INFO:SubProcess create_model() end ==================================
2023-11-24 16:57:13,329:INFO:Creating metrics dataframe
2023-11-24 16:57:13,331:INFO:Initializing SVM - Linear Kernel
2023-11-24 16:57:13,331:INFO:Total runtime is 0.144315501054128 minutes
2023-11-24 16:57:13,331:INFO:SubProcess create_model() called ==================================
2023-11-24 16:57:13,331:INFO:Initializing create_model()
2023-11-24 16:57:13,331:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e8f8c10>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2a58b2bd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:57:13,331:INFO:Checking exceptions
2023-11-24 16:57:13,331:INFO:Importing libraries
2023-11-24 16:57:13,331:INFO:Copying training dataset
2023-11-24 16:57:13,334:INFO:Defining folds
2023-11-24 16:57:13,334:INFO:Declaring metric variables
2023-11-24 16:57:13,334:INFO:Importing untrained model
2023-11-24 16:57:13,334:INFO:SVM - Linear Kernel Imported successfully
2023-11-24 16:57:13,334:INFO:Starting cross validation
2023-11-24 16:57:13,335:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:57:14,744:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:57:14,745:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:14,747:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:14,748:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:57:14,749:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:14,844:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:57:14,845:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:14,847:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:14,849:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:57:14,850:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:14,892:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:57:14,893:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:14,895:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:14,897:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:57:14,898:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:14,898:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:57:14,899:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:14,900:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:14,900:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:57:14,901:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:14,901:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:57:14,902:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:14,903:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:14,904:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:57:14,905:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:14,915:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:57:14,916:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:14,919:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:14,920:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:57:14,921:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:14,924:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:57:14,925:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:14,926:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:57:14,927:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:14,927:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:14,929:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:57:14,929:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:14,930:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:14,931:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:14,933:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:57:14,934:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:14,936:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:14,937:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:57:14,938:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:14,940:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:57:14,941:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:14,943:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:14,944:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:57:14,945:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:14,949:INFO:Calculating mean and std
2023-11-24 16:57:14,950:INFO:Creating metrics dataframe
2023-11-24 16:57:14,951:INFO:Uploading results into container
2023-11-24 16:57:14,951:INFO:Uploading model into container now
2023-11-24 16:57:14,951:INFO:_master_model_container: 5
2023-11-24 16:57:14,951:INFO:_display_container: 2
2023-11-24 16:57:14,952:INFO:SGDClassifier(eta0=0.001, n_jobs=-1, random_state=4215)
2023-11-24 16:57:14,952:INFO:create_model() successfully completed......................................
2023-11-24 16:57:15,039:INFO:SubProcess create_model() end ==================================
2023-11-24 16:57:15,039:INFO:Creating metrics dataframe
2023-11-24 16:57:15,041:INFO:Initializing Ridge Classifier
2023-11-24 16:57:15,041:INFO:Total runtime is 0.17281630039215085 minutes
2023-11-24 16:57:15,041:INFO:SubProcess create_model() called ==================================
2023-11-24 16:57:15,041:INFO:Initializing create_model()
2023-11-24 16:57:15,041:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e8f8c10>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2a58b2bd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:57:15,041:INFO:Checking exceptions
2023-11-24 16:57:15,041:INFO:Importing libraries
2023-11-24 16:57:15,041:INFO:Copying training dataset
2023-11-24 16:57:15,044:INFO:Defining folds
2023-11-24 16:57:15,044:INFO:Declaring metric variables
2023-11-24 16:57:15,044:INFO:Importing untrained model
2023-11-24 16:57:15,044:INFO:Ridge Classifier Imported successfully
2023-11-24 16:57:15,044:INFO:Starting cross validation
2023-11-24 16:57:15,045:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:57:15,646:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:57:15,647:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:15,651:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:15,655:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:57:15,662:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:15,674:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:57:15,675:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:15,677:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:15,678:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:57:15,679:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:15,683:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:57:15,684:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:15,686:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:15,687:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:57:15,688:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:15,700:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:57:15,701:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:15,703:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:15,704:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:57:15,704:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:57:15,705:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:15,705:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:15,708:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:15,709:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:57:15,710:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:15,721:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:57:15,722:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:15,725:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:15,726:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:57:15,726:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:57:15,727:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:15,727:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:15,729:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:15,730:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:57:15,731:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:15,737:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:57:15,738:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:15,740:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:15,742:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:57:15,743:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:15,764:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:57:15,765:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:15,768:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:15,769:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:57:15,770:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:15,821:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:57:15,822:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:15,824:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:15,825:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:57:15,826:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:15,831:INFO:Calculating mean and std
2023-11-24 16:57:15,831:INFO:Creating metrics dataframe
2023-11-24 16:57:15,833:INFO:Uploading results into container
2023-11-24 16:57:15,833:INFO:Uploading model into container now
2023-11-24 16:57:15,833:INFO:_master_model_container: 6
2023-11-24 16:57:15,833:INFO:_display_container: 2
2023-11-24 16:57:15,833:INFO:RidgeClassifier(random_state=4215)
2023-11-24 16:57:15,833:INFO:create_model() successfully completed......................................
2023-11-24 16:57:15,921:INFO:SubProcess create_model() end ==================================
2023-11-24 16:57:15,921:INFO:Creating metrics dataframe
2023-11-24 16:57:15,923:INFO:Initializing Random Forest Classifier
2023-11-24 16:57:15,923:INFO:Total runtime is 0.1875140349070231 minutes
2023-11-24 16:57:15,923:INFO:SubProcess create_model() called ==================================
2023-11-24 16:57:15,923:INFO:Initializing create_model()
2023-11-24 16:57:15,923:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e8f8c10>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2a58b2bd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:57:15,923:INFO:Checking exceptions
2023-11-24 16:57:15,923:INFO:Importing libraries
2023-11-24 16:57:15,923:INFO:Copying training dataset
2023-11-24 16:57:15,925:INFO:Defining folds
2023-11-24 16:57:15,925:INFO:Declaring metric variables
2023-11-24 16:57:15,925:INFO:Importing untrained model
2023-11-24 16:57:15,926:INFO:Random Forest Classifier Imported successfully
2023-11-24 16:57:15,926:INFO:Starting cross validation
2023-11-24 16:57:15,927:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:57:17,487:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:17,490:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:17,491:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:57:17,492:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:17,785:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:17,788:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:17,789:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:57:17,790:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:17,825:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:17,827:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:17,829:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:57:17,830:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:17,849:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:17,852:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:17,854:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:17,855:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:57:17,855:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:17,856:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:17,856:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:17,857:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:17,858:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:57:17,858:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:57:17,859:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:17,859:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:17,860:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:17,862:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:17,862:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:17,864:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:57:17,864:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:17,864:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:17,865:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:17,866:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:57:17,867:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:17,867:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:17,868:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:57:17,869:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:17,873:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:17,875:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:17,876:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:57:17,877:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:17,882:INFO:Calculating mean and std
2023-11-24 16:57:17,882:INFO:Creating metrics dataframe
2023-11-24 16:57:17,883:INFO:Uploading results into container
2023-11-24 16:57:17,883:INFO:Uploading model into container now
2023-11-24 16:57:17,884:INFO:_master_model_container: 7
2023-11-24 16:57:17,884:INFO:_display_container: 2
2023-11-24 16:57:17,884:INFO:RandomForestClassifier(n_jobs=-1, random_state=4215)
2023-11-24 16:57:17,884:INFO:create_model() successfully completed......................................
2023-11-24 16:57:17,970:INFO:SubProcess create_model() end ==================================
2023-11-24 16:57:17,970:INFO:Creating metrics dataframe
2023-11-24 16:57:17,971:INFO:Initializing Quadratic Discriminant Analysis
2023-11-24 16:57:17,971:INFO:Total runtime is 0.22165738344192504 minutes
2023-11-24 16:57:17,972:INFO:SubProcess create_model() called ==================================
2023-11-24 16:57:17,972:INFO:Initializing create_model()
2023-11-24 16:57:17,972:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e8f8c10>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2a58b2bd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:57:17,972:INFO:Checking exceptions
2023-11-24 16:57:17,972:INFO:Importing libraries
2023-11-24 16:57:17,972:INFO:Copying training dataset
2023-11-24 16:57:17,974:INFO:Defining folds
2023-11-24 16:57:17,974:INFO:Declaring metric variables
2023-11-24 16:57:17,974:INFO:Importing untrained model
2023-11-24 16:57:17,974:INFO:Quadratic Discriminant Analysis Imported successfully
2023-11-24 16:57:17,974:INFO:Starting cross validation
2023-11-24 16:57:17,975:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:57:18,497:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 16:57:18,506:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 16:57:18,572:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 16:57:18,579:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 16:57:18,585:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 16:57:18,634:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 16:57:18,657:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 16:57:18,664:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 16:57:18,679:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 16:57:18,721:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 16:57:18,740:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:18,741:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:18,744:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:18,746:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:57:18,746:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:18,747:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:18,747:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:57:18,748:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:18,777:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:18,779:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:18,780:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:57:18,781:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:18,835:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:18,837:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:18,838:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:57:18,839:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:18,846:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:18,848:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:18,851:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:18,889:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:18,892:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:18,893:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:57:18,894:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:18,906:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:18,907:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:18,909:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:18,910:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:18,910:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:57:18,911:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:57:18,911:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:18,912:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:18,914:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:18,915:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:18,916:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:18,918:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:18,918:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:18,919:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:57:18,920:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:18,927:INFO:Calculating mean and std
2023-11-24 16:57:18,928:INFO:Creating metrics dataframe
2023-11-24 16:57:18,930:INFO:Uploading results into container
2023-11-24 16:57:18,931:INFO:Uploading model into container now
2023-11-24 16:57:18,931:INFO:_master_model_container: 8
2023-11-24 16:57:18,931:INFO:_display_container: 2
2023-11-24 16:57:18,931:INFO:QuadraticDiscriminantAnalysis()
2023-11-24 16:57:18,931:INFO:create_model() successfully completed......................................
2023-11-24 16:57:19,043:INFO:SubProcess create_model() end ==================================
2023-11-24 16:57:19,043:INFO:Creating metrics dataframe
2023-11-24 16:57:19,045:INFO:Initializing Ada Boost Classifier
2023-11-24 16:57:19,045:INFO:Total runtime is 0.2395532687505086 minutes
2023-11-24 16:57:19,045:INFO:SubProcess create_model() called ==================================
2023-11-24 16:57:19,045:INFO:Initializing create_model()
2023-11-24 16:57:19,045:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e8f8c10>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2a58b2bd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:57:19,045:INFO:Checking exceptions
2023-11-24 16:57:19,045:INFO:Importing libraries
2023-11-24 16:57:19,045:INFO:Copying training dataset
2023-11-24 16:57:19,048:INFO:Defining folds
2023-11-24 16:57:19,048:INFO:Declaring metric variables
2023-11-24 16:57:19,048:INFO:Importing untrained model
2023-11-24 16:57:19,048:INFO:Ada Boost Classifier Imported successfully
2023-11-24 16:57:19,048:INFO:Starting cross validation
2023-11-24 16:57:19,050:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:57:20,394:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:20,397:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:20,399:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:20,454:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:20,456:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:20,458:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:20,480:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:20,481:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:20,482:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:20,484:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:20,484:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:20,486:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:20,520:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:20,523:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:20,525:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:20,533:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:20,536:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:20,538:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:20,559:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:20,562:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:20,564:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:20,579:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:20,582:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:20,583:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:20,584:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:20,585:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:20,588:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:20,601:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:20,603:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:20,605:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:20,610:INFO:Calculating mean and std
2023-11-24 16:57:20,611:INFO:Creating metrics dataframe
2023-11-24 16:57:20,615:INFO:Uploading results into container
2023-11-24 16:57:20,616:INFO:Uploading model into container now
2023-11-24 16:57:20,616:INFO:_master_model_container: 9
2023-11-24 16:57:20,616:INFO:_display_container: 2
2023-11-24 16:57:20,616:INFO:AdaBoostClassifier(random_state=4215)
2023-11-24 16:57:20,616:INFO:create_model() successfully completed......................................
2023-11-24 16:57:20,722:INFO:SubProcess create_model() end ==================================
2023-11-24 16:57:20,722:INFO:Creating metrics dataframe
2023-11-24 16:57:20,723:INFO:Initializing Gradient Boosting Classifier
2023-11-24 16:57:20,723:INFO:Total runtime is 0.26752145290374757 minutes
2023-11-24 16:57:20,723:INFO:SubProcess create_model() called ==================================
2023-11-24 16:57:20,723:INFO:Initializing create_model()
2023-11-24 16:57:20,724:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e8f8c10>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2a58b2bd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:57:20,724:INFO:Checking exceptions
2023-11-24 16:57:20,724:INFO:Importing libraries
2023-11-24 16:57:20,724:INFO:Copying training dataset
2023-11-24 16:57:20,726:INFO:Defining folds
2023-11-24 16:57:20,726:INFO:Declaring metric variables
2023-11-24 16:57:20,726:INFO:Importing untrained model
2023-11-24 16:57:20,726:INFO:Gradient Boosting Classifier Imported successfully
2023-11-24 16:57:20,726:INFO:Starting cross validation
2023-11-24 16:57:20,727:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:57:28,674:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:28,687:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:28,689:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:28,698:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:28,700:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:28,703:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:28,754:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:28,760:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:28,763:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:28,767:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:28,769:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:28,772:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:28,774:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:28,776:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:28,778:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:28,791:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:28,793:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:28,796:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:28,802:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:28,803:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:28,805:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:28,805:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:28,807:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:28,807:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:28,831:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:28,833:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:28,835:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:28,916:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:28,918:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:28,921:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:28,925:INFO:Calculating mean and std
2023-11-24 16:57:28,925:INFO:Creating metrics dataframe
2023-11-24 16:57:28,927:INFO:Uploading results into container
2023-11-24 16:57:28,927:INFO:Uploading model into container now
2023-11-24 16:57:28,927:INFO:_master_model_container: 10
2023-11-24 16:57:28,927:INFO:_display_container: 2
2023-11-24 16:57:28,927:INFO:GradientBoostingClassifier(random_state=4215)
2023-11-24 16:57:28,927:INFO:create_model() successfully completed......................................
2023-11-24 16:57:29,018:INFO:SubProcess create_model() end ==================================
2023-11-24 16:57:29,018:INFO:Creating metrics dataframe
2023-11-24 16:57:29,019:INFO:Initializing Linear Discriminant Analysis
2023-11-24 16:57:29,019:INFO:Total runtime is 0.40578871965408325 minutes
2023-11-24 16:57:29,019:INFO:SubProcess create_model() called ==================================
2023-11-24 16:57:29,020:INFO:Initializing create_model()
2023-11-24 16:57:29,020:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e8f8c10>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2a58b2bd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:57:29,020:INFO:Checking exceptions
2023-11-24 16:57:29,020:INFO:Importing libraries
2023-11-24 16:57:29,020:INFO:Copying training dataset
2023-11-24 16:57:29,022:INFO:Defining folds
2023-11-24 16:57:29,022:INFO:Declaring metric variables
2023-11-24 16:57:29,022:INFO:Importing untrained model
2023-11-24 16:57:29,022:INFO:Linear Discriminant Analysis Imported successfully
2023-11-24 16:57:29,022:INFO:Starting cross validation
2023-11-24 16:57:29,023:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:57:29,854:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:29,859:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:29,861:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:29,864:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:29,866:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:29,868:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:29,881:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:29,883:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:29,886:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:29,888:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:29,891:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:29,894:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:29,902:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:29,904:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:29,909:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:29,909:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:29,912:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:29,914:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:29,930:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:29,932:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:29,934:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:29,937:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:29,937:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:29,940:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:29,941:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:29,942:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:29,943:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:30,008:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:30,011:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:30,013:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:30,017:INFO:Calculating mean and std
2023-11-24 16:57:30,018:INFO:Creating metrics dataframe
2023-11-24 16:57:30,019:INFO:Uploading results into container
2023-11-24 16:57:30,019:INFO:Uploading model into container now
2023-11-24 16:57:30,019:INFO:_master_model_container: 11
2023-11-24 16:57:30,019:INFO:_display_container: 2
2023-11-24 16:57:30,019:INFO:LinearDiscriminantAnalysis()
2023-11-24 16:57:30,019:INFO:create_model() successfully completed......................................
2023-11-24 16:57:30,114:INFO:SubProcess create_model() end ==================================
2023-11-24 16:57:30,114:INFO:Creating metrics dataframe
2023-11-24 16:57:30,116:INFO:Initializing Extra Trees Classifier
2023-11-24 16:57:30,116:INFO:Total runtime is 0.42406370242436725 minutes
2023-11-24 16:57:30,116:INFO:SubProcess create_model() called ==================================
2023-11-24 16:57:30,116:INFO:Initializing create_model()
2023-11-24 16:57:30,116:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e8f8c10>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2a58b2bd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:57:30,116:INFO:Checking exceptions
2023-11-24 16:57:30,116:INFO:Importing libraries
2023-11-24 16:57:30,116:INFO:Copying training dataset
2023-11-24 16:57:30,118:INFO:Defining folds
2023-11-24 16:57:30,118:INFO:Declaring metric variables
2023-11-24 16:57:30,118:INFO:Importing untrained model
2023-11-24 16:57:30,119:INFO:Extra Trees Classifier Imported successfully
2023-11-24 16:57:30,119:INFO:Starting cross validation
2023-11-24 16:57:30,120:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:57:31,837:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:31,840:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:31,841:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:57:31,843:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:31,970:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:31,973:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:31,974:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:57:31,975:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:32,353:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:32,355:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:32,360:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:57:32,362:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:32,379:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:32,384:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:32,385:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:57:32,387:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:32,394:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:32,396:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:32,397:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:32,398:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:57:32,398:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:32,399:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:32,400:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:57:32,400:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:32,401:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:32,401:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:32,403:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:32,403:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:32,403:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:32,404:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:57:32,405:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:57:32,405:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:32,405:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:32,406:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:32,406:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:57:32,407:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:32,419:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:32,422:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:32,423:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:57:32,424:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:32,429:INFO:Calculating mean and std
2023-11-24 16:57:32,429:INFO:Creating metrics dataframe
2023-11-24 16:57:32,430:INFO:Uploading results into container
2023-11-24 16:57:32,431:INFO:Uploading model into container now
2023-11-24 16:57:32,431:INFO:_master_model_container: 12
2023-11-24 16:57:32,431:INFO:_display_container: 2
2023-11-24 16:57:32,431:INFO:ExtraTreesClassifier(n_jobs=-1, random_state=4215)
2023-11-24 16:57:32,431:INFO:create_model() successfully completed......................................
2023-11-24 16:57:32,522:INFO:SubProcess create_model() end ==================================
2023-11-24 16:57:32,522:INFO:Creating metrics dataframe
2023-11-24 16:57:32,524:INFO:Initializing Extreme Gradient Boosting
2023-11-24 16:57:32,524:INFO:Total runtime is 0.4641979177792867 minutes
2023-11-24 16:57:32,524:INFO:SubProcess create_model() called ==================================
2023-11-24 16:57:32,524:INFO:Initializing create_model()
2023-11-24 16:57:32,524:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e8f8c10>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2a58b2bd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:57:32,524:INFO:Checking exceptions
2023-11-24 16:57:32,524:INFO:Importing libraries
2023-11-24 16:57:32,524:INFO:Copying training dataset
2023-11-24 16:57:32,526:INFO:Defining folds
2023-11-24 16:57:32,526:INFO:Declaring metric variables
2023-11-24 16:57:32,526:INFO:Importing untrained model
2023-11-24 16:57:32,527:INFO:Extreme Gradient Boosting Imported successfully
2023-11-24 16:57:32,527:INFO:Starting cross validation
2023-11-24 16:57:32,528:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:57:51,441:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:51,447:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:51,451:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:51,515:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:51,518:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:51,521:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:51,613:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:51,618:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:51,626:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:51,696:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:51,700:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:51,701:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:57:51,703:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:51,704:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:51,708:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:51,711:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:51,743:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:51,747:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:51,750:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:51,785:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:51,787:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:51,790:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:51,871:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:51,874:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:51,876:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:51,987:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:51,989:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:51,992:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:52,250:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:52,253:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:52,256:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:52,261:INFO:Calculating mean and std
2023-11-24 16:57:52,262:INFO:Creating metrics dataframe
2023-11-24 16:57:52,268:INFO:Uploading results into container
2023-11-24 16:57:52,268:INFO:Uploading model into container now
2023-11-24 16:57:52,269:INFO:_master_model_container: 13
2023-11-24 16:57:52,269:INFO:_display_container: 2
2023-11-24 16:57:52,270:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              predictor=None, random_state=4215, ...)
2023-11-24 16:57:52,270:INFO:create_model() successfully completed......................................
2023-11-24 16:57:52,462:INFO:SubProcess create_model() end ==================================
2023-11-24 16:57:52,462:INFO:Creating metrics dataframe
2023-11-24 16:57:52,464:INFO:Initializing Light Gradient Boosting Machine
2023-11-24 16:57:52,465:INFO:Total runtime is 0.7965426007906595 minutes
2023-11-24 16:57:52,465:INFO:SubProcess create_model() called ==================================
2023-11-24 16:57:52,465:INFO:Initializing create_model()
2023-11-24 16:57:52,465:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e8f8c10>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2a58b2bd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:57:52,465:INFO:Checking exceptions
2023-11-24 16:57:52,465:INFO:Importing libraries
2023-11-24 16:57:52,465:INFO:Copying training dataset
2023-11-24 16:57:52,469:INFO:Defining folds
2023-11-24 16:57:52,469:INFO:Declaring metric variables
2023-11-24 16:57:52,469:INFO:Importing untrained model
2023-11-24 16:57:52,469:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-24 16:57:52,469:INFO:Starting cross validation
2023-11-24 16:57:52,470:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:57:53,405:WARNING:create_model() for lightgbm raised an exception or returned all 0.0, trying without fit_kwargs:
2023-11-24 16:57:53,405:WARNING:Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/sklearn.py", line 1142, in fit
    super().fit(
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/sklearn.py", line 842, in fit
    self._Booster = train(
                    ^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/engine.py", line 255, in train
    booster = Booster(params=params, train_set=train_set)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 3200, in __init__
    train_set.construct()
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 2276, in construct
    self._lazy_init(data=self.data, label=self.label, reference=None,
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 1959, in _lazy_init
    return self.set_feature_name(feature_name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 2639, in set_feature_name
    _safe_call(_LIB.LGBM_DatasetSetFeatureNames(
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 242, in _safe_call
    raise LightGBMError(_LIB.LGBM_GetLastError().decode('utf-8'))
lightgbm.basic.LightGBMError: Do not support special JSON characters in feature name.


2023-11-24 16:57:53,405:INFO:Initializing create_model()
2023-11-24 16:57:53,405:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e8f8c10>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2a58b2bd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:57:53,405:INFO:Checking exceptions
2023-11-24 16:57:53,406:INFO:Importing libraries
2023-11-24 16:57:53,406:INFO:Copying training dataset
2023-11-24 16:57:53,409:INFO:Defining folds
2023-11-24 16:57:53,409:INFO:Declaring metric variables
2023-11-24 16:57:53,409:INFO:Importing untrained model
2023-11-24 16:57:53,409:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-24 16:57:53,409:INFO:Starting cross validation
2023-11-24 16:57:53,410:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:57:54,185:ERROR:create_model() for lightgbm raised an exception or returned all 0.0:
2023-11-24 16:57:54,186:ERROR:Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/sklearn.py", line 1142, in fit
    super().fit(
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/sklearn.py", line 842, in fit
    self._Booster = train(
                    ^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/engine.py", line 255, in train
    booster = Booster(params=params, train_set=train_set)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 3200, in __init__
    train_set.construct()
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 2276, in construct
    self._lazy_init(data=self.data, label=self.label, reference=None,
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 1959, in _lazy_init
    return self.set_feature_name(feature_name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 2639, in set_feature_name
    _safe_call(_LIB.LGBM_DatasetSetFeatureNames(
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 242, in _safe_call
    raise LightGBMError(_LIB.LGBM_GetLastError().decode('utf-8'))
lightgbm.basic.LightGBMError: Do not support special JSON characters in feature name.


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/sklearn.py", line 1142, in fit
    super().fit(
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/sklearn.py", line 842, in fit
    self._Booster = train(
                    ^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/engine.py", line 255, in train
    booster = Booster(params=params, train_set=train_set)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 3200, in __init__
    train_set.construct()
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 2276, in construct
    self._lazy_init(data=self.data, label=self.label, reference=None,
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 1959, in _lazy_init
    return self.set_feature_name(feature_name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 2639, in set_feature_name
    _safe_call(_LIB.LGBM_DatasetSetFeatureNames(
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 242, in _safe_call
    raise LightGBMError(_LIB.LGBM_GetLastError().decode('utf-8'))
lightgbm.basic.LightGBMError: Do not support special JSON characters in feature name.


2023-11-24 16:57:54,186:INFO:Initializing Dummy Classifier
2023-11-24 16:57:54,187:INFO:Total runtime is 0.8252415657043456 minutes
2023-11-24 16:57:54,187:INFO:SubProcess create_model() called ==================================
2023-11-24 16:57:54,187:INFO:Initializing create_model()
2023-11-24 16:57:54,187:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e8f8c10>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2a58b2bd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:57:54,187:INFO:Checking exceptions
2023-11-24 16:57:54,187:INFO:Importing libraries
2023-11-24 16:57:54,187:INFO:Copying training dataset
2023-11-24 16:57:54,190:INFO:Defining folds
2023-11-24 16:57:54,190:INFO:Declaring metric variables
2023-11-24 16:57:54,190:INFO:Importing untrained model
2023-11-24 16:57:54,190:INFO:Dummy Classifier Imported successfully
2023-11-24 16:57:54,190:INFO:Starting cross validation
2023-11-24 16:57:54,191:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:57:54,832:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:54,833:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:54,837:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:54,839:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:57:54,839:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:54,842:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:54,847:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:57:54,848:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:54,890:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:54,892:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:54,894:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:57:54,895:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:54,915:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:54,919:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:54,920:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:57:54,921:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:54,951:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:54,954:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:54,955:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:57:54,956:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:54,975:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:54,975:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:54,977:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:54,977:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:54,978:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:54,979:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:57:54,979:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:57:54,979:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:54,979:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:54,980:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:54,980:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:57:54,981:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:55,000:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:55,002:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:55,003:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:57:55,004:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:55,014:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:55,016:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:55,017:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:57:55,018:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:57:55,022:INFO:Calculating mean and std
2023-11-24 16:57:55,022:INFO:Creating metrics dataframe
2023-11-24 16:57:55,024:INFO:Uploading results into container
2023-11-24 16:57:55,024:INFO:Uploading model into container now
2023-11-24 16:57:55,024:INFO:_master_model_container: 14
2023-11-24 16:57:55,024:INFO:_display_container: 2
2023-11-24 16:57:55,024:INFO:DummyClassifier(random_state=4215)
2023-11-24 16:57:55,024:INFO:create_model() successfully completed......................................
2023-11-24 16:57:55,124:INFO:SubProcess create_model() end ==================================
2023-11-24 16:57:55,124:INFO:Creating metrics dataframe
2023-11-24 16:57:55,127:INFO:Initializing create_model()
2023-11-24 16:57:55,127:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e8f8c10>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              predictor=None, random_state=4215, ...), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:57:55,127:INFO:Checking exceptions
2023-11-24 16:57:55,127:INFO:Importing libraries
2023-11-24 16:57:55,128:INFO:Copying training dataset
2023-11-24 16:57:55,130:INFO:Defining folds
2023-11-24 16:57:55,130:INFO:Declaring metric variables
2023-11-24 16:57:55,130:INFO:Importing untrained model
2023-11-24 16:57:55,130:INFO:Declaring custom model
2023-11-24 16:57:55,130:INFO:Extreme Gradient Boosting Imported successfully
2023-11-24 16:57:55,131:INFO:Cross validation set to False
2023-11-24 16:57:55,131:INFO:Fitting Model
2023-11-24 16:57:58,204:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='multi:softprob', predictor=None, ...)
2023-11-24 16:57:58,204:INFO:create_model() successfully completed......................................
2023-11-24 16:57:58,325:INFO:_master_model_container: 14
2023-11-24 16:57:58,325:INFO:_display_container: 2
2023-11-24 16:57:58,325:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='multi:softprob', predictor=None, ...)
2023-11-24 16:57:58,325:INFO:compare_models() successfully completed......................................
2023-11-24 16:57:58,338:INFO:Initializing save_model()
2023-11-24 16:57:58,338:INFO:save_model(model=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='multi:softprob', predictor=None, ...), model_name=best_model, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/46/tcczvndd7xj_pqs5r176bl600000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Number_of_vehicles_involved',
                                             'Number_of_casualties'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrappe...
                                                                    'Vehicle_movement',
                                                                    'Casualty_class',
                                                                    'Sex_of_casualty',
                                                                    'Age_band_of_casualty',
                                                                    'Casualty_severity',
                                                                    'Work_of_casuality',
                                                                    'Fitness_of_casuality',
                                                                    'Pedestrian_movement',
                                                                    'Cause_of_accident'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['Time'],
                                    transformer=TargetEncoder(cols=['Time'],
                                                              handle_missing='return_nan')))]), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-11-24 16:57:58,338:INFO:Adding model into prep_pipe
2023-11-24 16:57:58,357:INFO:best_model.pkl saved in current working directory
2023-11-24 16:57:58,364:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Number_of_vehicles_involved',
                                             'Number_of_casualties'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Time', 'Day_of_week',
                                             'Age_band_of_driver',
                                             'S...
                               grow_policy=None, importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, n_estimators=100,
                               n_jobs=-1, num_parallel_tree=None,
                               objective='multi:softprob', predictor=None, ...))])
2023-11-24 16:57:58,364:INFO:save_model() successfully completed......................................
2023-11-24 17:00:52,991:INFO:Initializing compare_models()
2023-11-24 17:00:52,992:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e8f8c10>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x28e8f8c10>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2023-11-24 17:00:52,992:INFO:Checking exceptions
2023-11-24 17:00:52,995:INFO:Preparing display monitor
2023-11-24 17:00:52,997:INFO:Initializing Logistic Regression
2023-11-24 17:00:52,997:INFO:Total runtime is 1.0013580322265625e-06 minutes
2023-11-24 17:00:52,997:INFO:SubProcess create_model() called ==================================
2023-11-24 17:00:52,997:INFO:Initializing create_model()
2023-11-24 17:00:52,997:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e8f8c10>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28e9b74d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 17:00:52,998:INFO:Checking exceptions
2023-11-24 17:00:52,998:INFO:Importing libraries
2023-11-24 17:00:52,998:INFO:Copying training dataset
2023-11-24 17:00:53,000:INFO:Defining folds
2023-11-24 17:00:53,000:INFO:Declaring metric variables
2023-11-24 17:00:53,000:INFO:Importing untrained model
2023-11-24 17:00:53,000:INFO:Logistic Regression Imported successfully
2023-11-24 17:00:53,000:INFO:Starting cross validation
2023-11-24 17:00:53,002:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 17:00:58,112:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:00:58,114:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:00:58,117:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:00:58,126:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:00:58,129:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:00:58,131:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:00:58,232:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:00:58,241:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:00:58,244:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:00:58,279:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:00:58,281:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:00:58,283:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:00:58,284:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:00:58,413:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:00:58,415:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:00:58,418:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:00:58,441:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:00:58,444:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:00:58,446:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:00:58,642:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:00:58,644:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:00:58,645:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:00:58,646:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:00:58,648:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:00:58,651:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:00:58,653:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:00:58,741:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:00:58,743:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:00:58,745:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:00:58,746:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:00:58,856:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:00:58,858:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:00:58,860:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:00:58,861:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:00:58,867:INFO:Calculating mean and std
2023-11-24 17:00:58,868:INFO:Creating metrics dataframe
2023-11-24 17:00:58,869:INFO:Uploading results into container
2023-11-24 17:00:58,870:INFO:Uploading model into container now
2023-11-24 17:00:58,870:INFO:_master_model_container: 15
2023-11-24 17:00:58,870:INFO:_display_container: 3
2023-11-24 17:00:58,870:INFO:LogisticRegression(max_iter=1000, random_state=4215)
2023-11-24 17:00:58,870:INFO:create_model() successfully completed......................................
2023-11-24 17:00:59,003:INFO:SubProcess create_model() end ==================================
2023-11-24 17:00:59,004:INFO:Creating metrics dataframe
2023-11-24 17:00:59,005:INFO:Initializing K Neighbors Classifier
2023-11-24 17:00:59,005:INFO:Total runtime is 0.10013599793116251 minutes
2023-11-24 17:00:59,005:INFO:SubProcess create_model() called ==================================
2023-11-24 17:00:59,005:INFO:Initializing create_model()
2023-11-24 17:00:59,005:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e8f8c10>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28e9b74d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 17:00:59,005:INFO:Checking exceptions
2023-11-24 17:00:59,005:INFO:Importing libraries
2023-11-24 17:00:59,005:INFO:Copying training dataset
2023-11-24 17:00:59,008:INFO:Defining folds
2023-11-24 17:00:59,008:INFO:Declaring metric variables
2023-11-24 17:00:59,008:INFO:Importing untrained model
2023-11-24 17:00:59,008:INFO:K Neighbors Classifier Imported successfully
2023-11-24 17:00:59,008:INFO:Starting cross validation
2023-11-24 17:00:59,009:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 17:00:59,964:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:00:59,968:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:00:59,972:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:00:59,973:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:00:59,975:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:00:59,977:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:00:59,980:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:00:59,996:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:00:59,997:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:00:59,998:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:00,000:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:01:00,001:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:00,000:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:00,004:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:01:00,005:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:00,016:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:00,016:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:00,018:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:00,019:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:00,020:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:01:00,021:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:00,021:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:00,023:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:00,026:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:00,026:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:00,027:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:01:00,028:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:00,028:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:00,029:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:00,030:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:00,031:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:00,033:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:00,035:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:00,038:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:00,039:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:01:00,040:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:00,044:INFO:Calculating mean and std
2023-11-24 17:01:00,044:INFO:Creating metrics dataframe
2023-11-24 17:01:00,046:INFO:Uploading results into container
2023-11-24 17:01:00,046:INFO:Uploading model into container now
2023-11-24 17:01:00,046:INFO:_master_model_container: 16
2023-11-24 17:01:00,046:INFO:_display_container: 3
2023-11-24 17:01:00,046:INFO:KNeighborsClassifier(n_jobs=-1)
2023-11-24 17:01:00,046:INFO:create_model() successfully completed......................................
2023-11-24 17:01:00,143:INFO:SubProcess create_model() end ==================================
2023-11-24 17:01:00,144:INFO:Creating metrics dataframe
2023-11-24 17:01:00,145:INFO:Initializing Naive Bayes
2023-11-24 17:01:00,145:INFO:Total runtime is 0.11913558642069498 minutes
2023-11-24 17:01:00,145:INFO:SubProcess create_model() called ==================================
2023-11-24 17:01:00,145:INFO:Initializing create_model()
2023-11-24 17:01:00,145:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e8f8c10>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28e9b74d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 17:01:00,145:INFO:Checking exceptions
2023-11-24 17:01:00,145:INFO:Importing libraries
2023-11-24 17:01:00,145:INFO:Copying training dataset
2023-11-24 17:01:00,148:INFO:Defining folds
2023-11-24 17:01:00,148:INFO:Declaring metric variables
2023-11-24 17:01:00,148:INFO:Importing untrained model
2023-11-24 17:01:00,148:INFO:Naive Bayes Imported successfully
2023-11-24 17:01:00,148:INFO:Starting cross validation
2023-11-24 17:01:00,149:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 17:01:00,871:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:00,874:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:00,876:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:00,876:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:00,879:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:00,884:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:00,928:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:00,931:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:00,933:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:00,935:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:00,937:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:00,940:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:00,950:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:00,953:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:00,956:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:00,956:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:00,957:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:00,960:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:00,961:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:00,963:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:00,963:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:00,979:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:00,981:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:00,981:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:00,983:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:00,983:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:00,986:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:01,006:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:01,009:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:01,011:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:01,017:INFO:Calculating mean and std
2023-11-24 17:01:01,018:INFO:Creating metrics dataframe
2023-11-24 17:01:01,022:INFO:Uploading results into container
2023-11-24 17:01:01,022:INFO:Uploading model into container now
2023-11-24 17:01:01,023:INFO:_master_model_container: 17
2023-11-24 17:01:01,023:INFO:_display_container: 3
2023-11-24 17:01:01,023:INFO:GaussianNB()
2023-11-24 17:01:01,023:INFO:create_model() successfully completed......................................
2023-11-24 17:01:01,124:INFO:SubProcess create_model() end ==================================
2023-11-24 17:01:01,124:INFO:Creating metrics dataframe
2023-11-24 17:01:01,125:INFO:Initializing Decision Tree Classifier
2023-11-24 17:01:01,125:INFO:Total runtime is 0.13547013600667318 minutes
2023-11-24 17:01:01,125:INFO:SubProcess create_model() called ==================================
2023-11-24 17:01:01,125:INFO:Initializing create_model()
2023-11-24 17:01:01,125:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e8f8c10>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28e9b74d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 17:01:01,125:INFO:Checking exceptions
2023-11-24 17:01:01,126:INFO:Importing libraries
2023-11-24 17:01:01,126:INFO:Copying training dataset
2023-11-24 17:01:01,128:INFO:Defining folds
2023-11-24 17:01:01,128:INFO:Declaring metric variables
2023-11-24 17:01:01,128:INFO:Importing untrained model
2023-11-24 17:01:01,128:INFO:Decision Tree Classifier Imported successfully
2023-11-24 17:01:01,128:INFO:Starting cross validation
2023-11-24 17:01:01,129:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 17:01:01,935:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:01,938:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:01,940:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:01,974:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:01,977:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:01,980:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:01,982:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:01,985:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:01,987:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:02,002:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:02,004:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:02,006:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:02,007:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:02,008:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:02,010:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:02,011:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:02,013:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:02,016:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:02,016:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:02,018:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:02,019:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:02,021:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:02,021:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:02,023:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:02,045:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:02,045:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:02,047:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:02,048:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:02,049:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:02,050:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:02,055:INFO:Calculating mean and std
2023-11-24 17:01:02,055:INFO:Creating metrics dataframe
2023-11-24 17:01:02,056:INFO:Uploading results into container
2023-11-24 17:01:02,057:INFO:Uploading model into container now
2023-11-24 17:01:02,057:INFO:_master_model_container: 18
2023-11-24 17:01:02,057:INFO:_display_container: 3
2023-11-24 17:01:02,057:INFO:DecisionTreeClassifier(random_state=4215)
2023-11-24 17:01:02,057:INFO:create_model() successfully completed......................................
2023-11-24 17:01:02,149:INFO:SubProcess create_model() end ==================================
2023-11-24 17:01:02,149:INFO:Creating metrics dataframe
2023-11-24 17:01:02,150:INFO:Initializing SVM - Linear Kernel
2023-11-24 17:01:02,151:INFO:Total runtime is 0.15255706707636515 minutes
2023-11-24 17:01:02,151:INFO:SubProcess create_model() called ==================================
2023-11-24 17:01:02,151:INFO:Initializing create_model()
2023-11-24 17:01:02,151:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e8f8c10>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28e9b74d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 17:01:02,151:INFO:Checking exceptions
2023-11-24 17:01:02,151:INFO:Importing libraries
2023-11-24 17:01:02,151:INFO:Copying training dataset
2023-11-24 17:01:02,153:INFO:Defining folds
2023-11-24 17:01:02,153:INFO:Declaring metric variables
2023-11-24 17:01:02,153:INFO:Importing untrained model
2023-11-24 17:01:02,153:INFO:SVM - Linear Kernel Imported successfully
2023-11-24 17:01:02,153:INFO:Starting cross validation
2023-11-24 17:01:02,154:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 17:01:03,262:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 17:01:03,264:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:03,266:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:03,268:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:01:03,269:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:03,337:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 17:01:03,338:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:03,341:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:03,342:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:01:03,343:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:03,708:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 17:01:03,710:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:03,713:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:03,714:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:01:03,715:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:03,720:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 17:01:03,721:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:03,724:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:03,725:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:01:03,726:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:03,743:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 17:01:03,743:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 17:01:03,744:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:03,745:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:03,747:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:03,747:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:03,748:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:01:03,749:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:01:03,749:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:03,749:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:03,756:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 17:01:03,757:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:03,759:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 17:01:03,759:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:03,760:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:03,760:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:01:03,761:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:03,762:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:03,763:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:01:03,764:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:03,783:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 17:01:03,783:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:03,786:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:03,788:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:03,799:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 17:01:03,800:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:03,802:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:03,803:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:01:03,804:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:03,808:INFO:Calculating mean and std
2023-11-24 17:01:03,808:INFO:Creating metrics dataframe
2023-11-24 17:01:03,809:INFO:Uploading results into container
2023-11-24 17:01:03,809:INFO:Uploading model into container now
2023-11-24 17:01:03,809:INFO:_master_model_container: 19
2023-11-24 17:01:03,809:INFO:_display_container: 3
2023-11-24 17:01:03,809:INFO:SGDClassifier(eta0=0.001, n_jobs=-1, random_state=4215)
2023-11-24 17:01:03,809:INFO:create_model() successfully completed......................................
2023-11-24 17:01:03,901:INFO:SubProcess create_model() end ==================================
2023-11-24 17:01:03,901:INFO:Creating metrics dataframe
2023-11-24 17:01:03,903:INFO:Initializing Ridge Classifier
2023-11-24 17:01:03,903:INFO:Total runtime is 0.18176525036493937 minutes
2023-11-24 17:01:03,903:INFO:SubProcess create_model() called ==================================
2023-11-24 17:01:03,903:INFO:Initializing create_model()
2023-11-24 17:01:03,903:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e8f8c10>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28e9b74d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 17:01:03,903:INFO:Checking exceptions
2023-11-24 17:01:03,903:INFO:Importing libraries
2023-11-24 17:01:03,903:INFO:Copying training dataset
2023-11-24 17:01:03,905:INFO:Defining folds
2023-11-24 17:01:03,905:INFO:Declaring metric variables
2023-11-24 17:01:03,905:INFO:Importing untrained model
2023-11-24 17:01:03,906:INFO:Ridge Classifier Imported successfully
2023-11-24 17:01:03,906:INFO:Starting cross validation
2023-11-24 17:01:03,907:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 17:01:04,517:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 17:01:04,518:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:04,522:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:04,528:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:01:04,530:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:04,533:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 17:01:04,535:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:04,537:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:04,538:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:01:04,539:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:04,571:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 17:01:04,573:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:04,576:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 17:01:04,576:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 17:01:04,577:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:04,578:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:04,579:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:01:04,579:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:04,580:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:04,580:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:04,581:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:01:04,582:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:04,588:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:04,589:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:01:04,590:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:04,601:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 17:01:04,602:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:04,604:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:04,606:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:01:04,607:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:04,607:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 17:01:04,608:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:04,611:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:04,612:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:01:04,613:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:04,630:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 17:01:04,630:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 17:01:04,631:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:04,631:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:04,633:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:04,633:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:04,634:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:01:04,634:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:01:04,635:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:04,635:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:04,659:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 17:01:04,660:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:04,662:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:04,663:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:01:04,664:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:04,669:INFO:Calculating mean and std
2023-11-24 17:01:04,669:INFO:Creating metrics dataframe
2023-11-24 17:01:04,670:INFO:Uploading results into container
2023-11-24 17:01:04,670:INFO:Uploading model into container now
2023-11-24 17:01:04,671:INFO:_master_model_container: 20
2023-11-24 17:01:04,671:INFO:_display_container: 3
2023-11-24 17:01:04,671:INFO:RidgeClassifier(random_state=4215)
2023-11-24 17:01:04,671:INFO:create_model() successfully completed......................................
2023-11-24 17:01:04,762:INFO:SubProcess create_model() end ==================================
2023-11-24 17:01:04,762:INFO:Creating metrics dataframe
2023-11-24 17:01:04,764:INFO:Initializing Random Forest Classifier
2023-11-24 17:01:04,764:INFO:Total runtime is 0.19611550172170003 minutes
2023-11-24 17:01:04,764:INFO:SubProcess create_model() called ==================================
2023-11-24 17:01:04,764:INFO:Initializing create_model()
2023-11-24 17:01:04,764:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e8f8c10>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28e9b74d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 17:01:04,764:INFO:Checking exceptions
2023-11-24 17:01:04,764:INFO:Importing libraries
2023-11-24 17:01:04,764:INFO:Copying training dataset
2023-11-24 17:01:04,766:INFO:Defining folds
2023-11-24 17:01:04,767:INFO:Declaring metric variables
2023-11-24 17:01:04,767:INFO:Importing untrained model
2023-11-24 17:01:04,767:INFO:Random Forest Classifier Imported successfully
2023-11-24 17:01:04,767:INFO:Starting cross validation
2023-11-24 17:01:04,768:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 17:01:06,172:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:06,175:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:06,177:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:01:06,178:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:06,511:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:06,514:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:06,516:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:01:06,517:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:06,553:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:06,556:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:06,557:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:01:06,558:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:06,661:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:06,664:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:06,667:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:06,667:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:06,668:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:01:06,668:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:01:06,669:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:06,670:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:06,674:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:06,676:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:06,677:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:06,678:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:01:06,678:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:06,679:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:06,679:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:06,679:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:06,681:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:01:06,681:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:06,682:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:06,682:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:06,683:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:01:06,683:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:01:06,684:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:06,684:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:06,694:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:06,696:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:06,697:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:01:06,698:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:06,702:INFO:Calculating mean and std
2023-11-24 17:01:06,703:INFO:Creating metrics dataframe
2023-11-24 17:01:06,704:INFO:Uploading results into container
2023-11-24 17:01:06,704:INFO:Uploading model into container now
2023-11-24 17:01:06,704:INFO:_master_model_container: 21
2023-11-24 17:01:06,704:INFO:_display_container: 3
2023-11-24 17:01:06,704:INFO:RandomForestClassifier(n_jobs=-1, random_state=4215)
2023-11-24 17:01:06,705:INFO:create_model() successfully completed......................................
2023-11-24 17:01:06,797:INFO:SubProcess create_model() end ==================================
2023-11-24 17:01:06,797:INFO:Creating metrics dataframe
2023-11-24 17:01:06,799:INFO:Initializing Quadratic Discriminant Analysis
2023-11-24 17:01:06,799:INFO:Total runtime is 0.23003894885381063 minutes
2023-11-24 17:01:06,799:INFO:SubProcess create_model() called ==================================
2023-11-24 17:01:06,800:INFO:Initializing create_model()
2023-11-24 17:01:06,800:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e8f8c10>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28e9b74d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 17:01:06,800:INFO:Checking exceptions
2023-11-24 17:01:06,800:INFO:Importing libraries
2023-11-24 17:01:06,800:INFO:Copying training dataset
2023-11-24 17:01:06,802:INFO:Defining folds
2023-11-24 17:01:06,802:INFO:Declaring metric variables
2023-11-24 17:01:06,802:INFO:Importing untrained model
2023-11-24 17:01:06,802:INFO:Quadratic Discriminant Analysis Imported successfully
2023-11-24 17:01:06,802:INFO:Starting cross validation
2023-11-24 17:01:06,803:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 17:01:07,341:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 17:01:07,349:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 17:01:07,365:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 17:01:07,405:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 17:01:07,439:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 17:01:07,443:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 17:01:07,448:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 17:01:07,452:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 17:01:07,488:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 17:01:07,521:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 17:01:07,601:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:07,604:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:07,606:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:07,638:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:07,638:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:07,641:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:07,641:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:07,642:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:01:07,642:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:01:07,643:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:07,643:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:07,647:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:07,650:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:07,651:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:01:07,652:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:07,698:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:07,702:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:07,704:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:01:07,705:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:07,712:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:07,714:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:07,715:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:01:07,716:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:07,717:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:07,719:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:07,721:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:07,746:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:07,749:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:07,750:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:01:07,751:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:07,751:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:07,753:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:07,755:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:01:07,756:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:07,756:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:07,758:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:07,760:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:01:07,761:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:07,765:INFO:Calculating mean and std
2023-11-24 17:01:07,766:INFO:Creating metrics dataframe
2023-11-24 17:01:07,767:INFO:Uploading results into container
2023-11-24 17:01:07,767:INFO:Uploading model into container now
2023-11-24 17:01:07,767:INFO:_master_model_container: 22
2023-11-24 17:01:07,767:INFO:_display_container: 3
2023-11-24 17:01:07,767:INFO:QuadraticDiscriminantAnalysis()
2023-11-24 17:01:07,767:INFO:create_model() successfully completed......................................
2023-11-24 17:01:07,865:INFO:SubProcess create_model() end ==================================
2023-11-24 17:01:07,865:INFO:Creating metrics dataframe
2023-11-24 17:01:07,867:INFO:Initializing Ada Boost Classifier
2023-11-24 17:01:07,867:INFO:Total runtime is 0.2478296677271525 minutes
2023-11-24 17:01:07,867:INFO:SubProcess create_model() called ==================================
2023-11-24 17:01:07,867:INFO:Initializing create_model()
2023-11-24 17:01:07,867:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e8f8c10>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28e9b74d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 17:01:07,867:INFO:Checking exceptions
2023-11-24 17:01:07,867:INFO:Importing libraries
2023-11-24 17:01:07,867:INFO:Copying training dataset
2023-11-24 17:01:07,870:INFO:Defining folds
2023-11-24 17:01:07,870:INFO:Declaring metric variables
2023-11-24 17:01:07,870:INFO:Importing untrained model
2023-11-24 17:01:07,870:INFO:Ada Boost Classifier Imported successfully
2023-11-24 17:01:07,870:INFO:Starting cross validation
2023-11-24 17:01:07,871:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 17:01:09,225:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:09,228:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:09,230:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:09,250:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:09,253:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:09,255:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:09,270:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:09,272:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:09,275:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:09,275:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:09,278:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:09,280:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:09,303:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:09,305:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:09,307:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:09,307:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:09,309:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:09,310:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:09,312:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:09,312:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:09,314:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:09,319:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:09,320:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:09,322:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:09,323:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:09,324:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:09,325:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:09,325:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:09,328:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:09,330:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:09,334:INFO:Calculating mean and std
2023-11-24 17:01:09,334:INFO:Creating metrics dataframe
2023-11-24 17:01:09,335:INFO:Uploading results into container
2023-11-24 17:01:09,335:INFO:Uploading model into container now
2023-11-24 17:01:09,336:INFO:_master_model_container: 23
2023-11-24 17:01:09,336:INFO:_display_container: 3
2023-11-24 17:01:09,336:INFO:AdaBoostClassifier(random_state=4215)
2023-11-24 17:01:09,336:INFO:create_model() successfully completed......................................
2023-11-24 17:01:09,454:INFO:SubProcess create_model() end ==================================
2023-11-24 17:01:09,454:INFO:Creating metrics dataframe
2023-11-24 17:01:09,455:INFO:Initializing Gradient Boosting Classifier
2023-11-24 17:01:09,455:INFO:Total runtime is 0.2743046363194784 minutes
2023-11-24 17:01:09,455:INFO:SubProcess create_model() called ==================================
2023-11-24 17:01:09,456:INFO:Initializing create_model()
2023-11-24 17:01:09,456:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e8f8c10>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28e9b74d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 17:01:09,456:INFO:Checking exceptions
2023-11-24 17:01:09,456:INFO:Importing libraries
2023-11-24 17:01:09,456:INFO:Copying training dataset
2023-11-24 17:01:09,458:INFO:Defining folds
2023-11-24 17:01:09,458:INFO:Declaring metric variables
2023-11-24 17:01:09,458:INFO:Importing untrained model
2023-11-24 17:01:09,458:INFO:Gradient Boosting Classifier Imported successfully
2023-11-24 17:01:09,458:INFO:Starting cross validation
2023-11-24 17:01:09,459:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 17:01:17,505:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:17,508:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:17,511:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:17,553:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:17,555:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:17,557:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:17,562:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:17,567:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:17,569:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:17,582:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:17,585:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:17,588:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:17,597:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:17,598:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:17,600:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:17,600:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:17,602:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:17,602:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:17,603:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:17,604:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:17,606:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:17,606:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:17,609:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:17,611:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:17,663:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:17,665:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:17,668:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:17,668:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:17,671:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:17,673:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:17,677:INFO:Calculating mean and std
2023-11-24 17:01:17,678:INFO:Creating metrics dataframe
2023-11-24 17:01:17,679:INFO:Uploading results into container
2023-11-24 17:01:17,679:INFO:Uploading model into container now
2023-11-24 17:01:17,679:INFO:_master_model_container: 24
2023-11-24 17:01:17,679:INFO:_display_container: 3
2023-11-24 17:01:17,679:INFO:GradientBoostingClassifier(random_state=4215)
2023-11-24 17:01:17,679:INFO:create_model() successfully completed......................................
2023-11-24 17:01:17,778:INFO:SubProcess create_model() end ==================================
2023-11-24 17:01:17,778:INFO:Creating metrics dataframe
2023-11-24 17:01:17,779:INFO:Initializing Linear Discriminant Analysis
2023-11-24 17:01:17,779:INFO:Total runtime is 0.41303975184758507 minutes
2023-11-24 17:01:17,780:INFO:SubProcess create_model() called ==================================
2023-11-24 17:01:17,780:INFO:Initializing create_model()
2023-11-24 17:01:17,780:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e8f8c10>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28e9b74d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 17:01:17,780:INFO:Checking exceptions
2023-11-24 17:01:17,780:INFO:Importing libraries
2023-11-24 17:01:17,780:INFO:Copying training dataset
2023-11-24 17:01:17,782:INFO:Defining folds
2023-11-24 17:01:17,782:INFO:Declaring metric variables
2023-11-24 17:01:17,782:INFO:Importing untrained model
2023-11-24 17:01:17,782:INFO:Linear Discriminant Analysis Imported successfully
2023-11-24 17:01:17,782:INFO:Starting cross validation
2023-11-24 17:01:17,784:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 17:01:18,588:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:18,591:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:18,593:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:18,600:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:18,602:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:18,605:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:18,610:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:18,613:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:18,615:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:18,628:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:18,630:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:18,633:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:18,638:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:18,641:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:18,644:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:18,684:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:18,686:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:18,687:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:18,689:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:18,689:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:18,691:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:18,692:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:18,694:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:18,696:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:18,716:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:18,717:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:18,719:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:18,719:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:18,721:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:18,721:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:18,726:INFO:Calculating mean and std
2023-11-24 17:01:18,727:INFO:Creating metrics dataframe
2023-11-24 17:01:18,729:INFO:Uploading results into container
2023-11-24 17:01:18,729:INFO:Uploading model into container now
2023-11-24 17:01:18,729:INFO:_master_model_container: 25
2023-11-24 17:01:18,729:INFO:_display_container: 3
2023-11-24 17:01:18,729:INFO:LinearDiscriminantAnalysis()
2023-11-24 17:01:18,729:INFO:create_model() successfully completed......................................
2023-11-24 17:01:18,826:INFO:SubProcess create_model() end ==================================
2023-11-24 17:01:18,827:INFO:Creating metrics dataframe
2023-11-24 17:01:18,828:INFO:Initializing Extra Trees Classifier
2023-11-24 17:01:18,828:INFO:Total runtime is 0.43051993449529014 minutes
2023-11-24 17:01:18,828:INFO:SubProcess create_model() called ==================================
2023-11-24 17:01:18,828:INFO:Initializing create_model()
2023-11-24 17:01:18,828:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e8f8c10>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28e9b74d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 17:01:18,828:INFO:Checking exceptions
2023-11-24 17:01:18,828:INFO:Importing libraries
2023-11-24 17:01:18,829:INFO:Copying training dataset
2023-11-24 17:01:18,831:INFO:Defining folds
2023-11-24 17:01:18,831:INFO:Declaring metric variables
2023-11-24 17:01:18,831:INFO:Importing untrained model
2023-11-24 17:01:18,831:INFO:Extra Trees Classifier Imported successfully
2023-11-24 17:01:18,831:INFO:Starting cross validation
2023-11-24 17:01:18,833:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 17:01:20,857:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:20,863:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:20,865:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:01:20,866:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:21,023:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:21,026:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:21,027:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:01:21,028:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:21,165:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:21,167:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:21,168:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:21,168:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:21,168:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:01:21,169:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:21,170:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:21,171:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:21,171:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:21,172:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:01:21,172:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:01:21,172:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:21,173:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:21,173:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:21,173:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:21,174:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:01:21,175:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:21,175:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:21,176:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:01:21,177:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:21,188:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:21,190:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:21,192:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:01:21,193:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:21,193:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:21,193:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:21,195:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:21,195:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:21,196:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:01:21,197:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:01:21,197:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:21,197:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:21,202:INFO:Calculating mean and std
2023-11-24 17:01:21,202:INFO:Creating metrics dataframe
2023-11-24 17:01:21,203:INFO:Uploading results into container
2023-11-24 17:01:21,203:INFO:Uploading model into container now
2023-11-24 17:01:21,204:INFO:_master_model_container: 26
2023-11-24 17:01:21,204:INFO:_display_container: 3
2023-11-24 17:01:21,204:INFO:ExtraTreesClassifier(n_jobs=-1, random_state=4215)
2023-11-24 17:01:21,204:INFO:create_model() successfully completed......................................
2023-11-24 17:01:21,296:INFO:SubProcess create_model() end ==================================
2023-11-24 17:01:21,296:INFO:Creating metrics dataframe
2023-11-24 17:01:21,298:INFO:Initializing Extreme Gradient Boosting
2023-11-24 17:01:21,298:INFO:Total runtime is 0.47168198426564534 minutes
2023-11-24 17:01:21,298:INFO:SubProcess create_model() called ==================================
2023-11-24 17:01:21,298:INFO:Initializing create_model()
2023-11-24 17:01:21,298:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e8f8c10>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28e9b74d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 17:01:21,298:INFO:Checking exceptions
2023-11-24 17:01:21,298:INFO:Importing libraries
2023-11-24 17:01:21,298:INFO:Copying training dataset
2023-11-24 17:01:21,301:INFO:Defining folds
2023-11-24 17:01:21,301:INFO:Declaring metric variables
2023-11-24 17:01:21,301:INFO:Importing untrained model
2023-11-24 17:01:21,301:INFO:Extreme Gradient Boosting Imported successfully
2023-11-24 17:01:21,301:INFO:Starting cross validation
2023-11-24 17:01:21,302:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 17:01:37,214:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:37,218:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:37,220:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:38,266:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:38,268:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:38,271:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:38,630:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:38,632:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:38,634:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:38,636:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:38,641:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:38,645:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:38,677:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:38,679:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:38,681:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:38,714:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:38,716:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:38,719:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:38,790:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:38,793:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:38,795:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:38,804:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:38,807:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:38,807:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:38,809:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:38,809:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:38,811:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:38,828:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:38,830:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:38,832:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:01:38,832:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:38,837:INFO:Calculating mean and std
2023-11-24 17:01:38,838:INFO:Creating metrics dataframe
2023-11-24 17:01:38,839:INFO:Uploading results into container
2023-11-24 17:01:38,839:INFO:Uploading model into container now
2023-11-24 17:01:38,839:INFO:_master_model_container: 27
2023-11-24 17:01:38,839:INFO:_display_container: 3
2023-11-24 17:01:38,840:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              predictor=None, random_state=4215, ...)
2023-11-24 17:01:38,840:INFO:create_model() successfully completed......................................
2023-11-24 17:01:38,929:INFO:SubProcess create_model() end ==================================
2023-11-24 17:01:38,929:INFO:Creating metrics dataframe
2023-11-24 17:01:38,931:INFO:Initializing Light Gradient Boosting Machine
2023-11-24 17:01:38,931:INFO:Total runtime is 0.7655588865280152 minutes
2023-11-24 17:01:38,931:INFO:SubProcess create_model() called ==================================
2023-11-24 17:01:38,931:INFO:Initializing create_model()
2023-11-24 17:01:38,931:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e8f8c10>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28e9b74d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 17:01:38,931:INFO:Checking exceptions
2023-11-24 17:01:38,931:INFO:Importing libraries
2023-11-24 17:01:38,931:INFO:Copying training dataset
2023-11-24 17:01:38,933:INFO:Defining folds
2023-11-24 17:01:38,933:INFO:Declaring metric variables
2023-11-24 17:01:38,933:INFO:Importing untrained model
2023-11-24 17:01:38,933:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-24 17:01:38,933:INFO:Starting cross validation
2023-11-24 17:01:38,934:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 17:01:39,612:WARNING:create_model() for lightgbm raised an exception or returned all 0.0, trying without fit_kwargs:
2023-11-24 17:01:39,612:WARNING:Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/sklearn.py", line 1142, in fit
    super().fit(
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/sklearn.py", line 842, in fit
    self._Booster = train(
                    ^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/engine.py", line 255, in train
    booster = Booster(params=params, train_set=train_set)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 3200, in __init__
    train_set.construct()
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 2276, in construct
    self._lazy_init(data=self.data, label=self.label, reference=None,
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 1959, in _lazy_init
    return self.set_feature_name(feature_name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 2639, in set_feature_name
    _safe_call(_LIB.LGBM_DatasetSetFeatureNames(
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 242, in _safe_call
    raise LightGBMError(_LIB.LGBM_GetLastError().decode('utf-8'))
lightgbm.basic.LightGBMError: Do not support special JSON characters in feature name.


2023-11-24 17:01:39,612:INFO:Initializing create_model()
2023-11-24 17:01:39,613:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e8f8c10>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28e9b74d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 17:01:39,613:INFO:Checking exceptions
2023-11-24 17:01:39,613:INFO:Importing libraries
2023-11-24 17:01:39,613:INFO:Copying training dataset
2023-11-24 17:01:39,615:INFO:Defining folds
2023-11-24 17:01:39,615:INFO:Declaring metric variables
2023-11-24 17:01:39,615:INFO:Importing untrained model
2023-11-24 17:01:39,615:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-24 17:01:39,615:INFO:Starting cross validation
2023-11-24 17:01:39,616:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 17:01:40,307:ERROR:create_model() for lightgbm raised an exception or returned all 0.0:
2023-11-24 17:01:40,308:ERROR:Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/sklearn.py", line 1142, in fit
    super().fit(
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/sklearn.py", line 842, in fit
    self._Booster = train(
                    ^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/engine.py", line 255, in train
    booster = Booster(params=params, train_set=train_set)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 3200, in __init__
    train_set.construct()
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 2276, in construct
    self._lazy_init(data=self.data, label=self.label, reference=None,
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 1959, in _lazy_init
    return self.set_feature_name(feature_name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 2639, in set_feature_name
    _safe_call(_LIB.LGBM_DatasetSetFeatureNames(
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 242, in _safe_call
    raise LightGBMError(_LIB.LGBM_GetLastError().decode('utf-8'))
lightgbm.basic.LightGBMError: Do not support special JSON characters in feature name.


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/sklearn.py", line 1142, in fit
    super().fit(
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/sklearn.py", line 842, in fit
    self._Booster = train(
                    ^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/engine.py", line 255, in train
    booster = Booster(params=params, train_set=train_set)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 3200, in __init__
    train_set.construct()
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 2276, in construct
    self._lazy_init(data=self.data, label=self.label, reference=None,
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 1959, in _lazy_init
    return self.set_feature_name(feature_name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 2639, in set_feature_name
    _safe_call(_LIB.LGBM_DatasetSetFeatureNames(
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 242, in _safe_call
    raise LightGBMError(_LIB.LGBM_GetLastError().decode('utf-8'))
lightgbm.basic.LightGBMError: Do not support special JSON characters in feature name.


2023-11-24 17:01:40,309:INFO:Initializing Dummy Classifier
2023-11-24 17:01:40,309:INFO:Total runtime is 0.7885243852933248 minutes
2023-11-24 17:01:40,309:INFO:SubProcess create_model() called ==================================
2023-11-24 17:01:40,309:INFO:Initializing create_model()
2023-11-24 17:01:40,309:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e8f8c10>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28e9b74d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 17:01:40,309:INFO:Checking exceptions
2023-11-24 17:01:40,309:INFO:Importing libraries
2023-11-24 17:01:40,309:INFO:Copying training dataset
2023-11-24 17:01:40,311:INFO:Defining folds
2023-11-24 17:01:40,311:INFO:Declaring metric variables
2023-11-24 17:01:40,311:INFO:Importing untrained model
2023-11-24 17:01:40,312:INFO:Dummy Classifier Imported successfully
2023-11-24 17:01:40,312:INFO:Starting cross validation
2023-11-24 17:01:40,313:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 17:01:40,921:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:40,924:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:40,925:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:01:40,926:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:40,976:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:40,978:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:40,982:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:01:40,985:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:40,992:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:40,995:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:40,996:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:40,998:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:01:40,998:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:40,999:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:40,999:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:40,999:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:01:41,000:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:41,000:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:41,001:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:41,002:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:41,003:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:41,003:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:01:41,004:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:41,004:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:41,004:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:01:41,005:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:01:41,005:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:41,006:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:41,007:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:41,010:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:41,011:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:41,011:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:01:41,012:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:41,013:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:41,014:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:01:41,015:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:41,025:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:41,027:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:41,028:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:01:41,029:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:01:41,033:INFO:Calculating mean and std
2023-11-24 17:01:41,033:INFO:Creating metrics dataframe
2023-11-24 17:01:41,035:INFO:Uploading results into container
2023-11-24 17:01:41,035:INFO:Uploading model into container now
2023-11-24 17:01:41,035:INFO:_master_model_container: 28
2023-11-24 17:01:41,035:INFO:_display_container: 3
2023-11-24 17:01:41,036:INFO:DummyClassifier(random_state=4215)
2023-11-24 17:01:41,036:INFO:create_model() successfully completed......................................
2023-11-24 17:01:41,166:INFO:SubProcess create_model() end ==================================
2023-11-24 17:01:41,166:INFO:Creating metrics dataframe
2023-11-24 17:01:41,169:INFO:Initializing create_model()
2023-11-24 17:01:41,169:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28e8f8c10>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              predictor=None, random_state=4215, ...), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 17:01:41,169:INFO:Checking exceptions
2023-11-24 17:01:41,169:INFO:Importing libraries
2023-11-24 17:01:41,169:INFO:Copying training dataset
2023-11-24 17:01:41,172:INFO:Defining folds
2023-11-24 17:01:41,172:INFO:Declaring metric variables
2023-11-24 17:01:41,172:INFO:Importing untrained model
2023-11-24 17:01:41,172:INFO:Declaring custom model
2023-11-24 17:01:41,172:INFO:Extreme Gradient Boosting Imported successfully
2023-11-24 17:01:41,173:INFO:Cross validation set to False
2023-11-24 17:01:41,173:INFO:Fitting Model
2023-11-24 17:01:43,814:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='multi:softprob', predictor=None, ...)
2023-11-24 17:01:43,815:INFO:create_model() successfully completed......................................
2023-11-24 17:01:43,907:INFO:_master_model_container: 28
2023-11-24 17:01:43,907:INFO:_display_container: 3
2023-11-24 17:01:43,908:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='multi:softprob', predictor=None, ...)
2023-11-24 17:01:43,908:INFO:compare_models() successfully completed......................................
2023-11-24 17:01:43,914:INFO:Initializing save_model()
2023-11-24 17:01:43,914:INFO:save_model(model=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='multi:softprob', predictor=None, ...), model_name=best_model, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/46/tcczvndd7xj_pqs5r176bl600000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Number_of_vehicles_involved',
                                             'Number_of_casualties'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrappe...
                                                                    'Vehicle_movement',
                                                                    'Casualty_class',
                                                                    'Sex_of_casualty',
                                                                    'Age_band_of_casualty',
                                                                    'Casualty_severity',
                                                                    'Work_of_casuality',
                                                                    'Fitness_of_casuality',
                                                                    'Pedestrian_movement',
                                                                    'Cause_of_accident'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['Time'],
                                    transformer=TargetEncoder(cols=['Time'],
                                                              handle_missing='return_nan')))]), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-11-24 17:01:43,914:INFO:Adding model into prep_pipe
2023-11-24 17:01:43,929:INFO:best_model.pkl saved in current working directory
2023-11-24 17:01:43,935:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Number_of_vehicles_involved',
                                             'Number_of_casualties'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Time', 'Day_of_week',
                                             'Age_band_of_driver',
                                             'S...
                               grow_policy=None, importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, n_estimators=100,
                               n_jobs=-1, num_parallel_tree=None,
                               objective='multi:softprob', predictor=None, ...))])
2023-11-24 17:01:43,935:INFO:save_model() successfully completed......................................
2023-11-24 17:22:03,896:INFO:PyCaret ClassificationExperiment
2023-11-24 17:22:03,896:INFO:Logging name: clf-default-name
2023-11-24 17:22:03,896:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-11-24 17:22:03,896:INFO:version 3.2.0
2023-11-24 17:22:03,896:INFO:Initializing setup()
2023-11-24 17:22:03,896:INFO:self.USI: 5deb
2023-11-24 17:22:03,896:INFO:self._variable_keys: {'_available_plots', 'fix_imbalance', 'fold_shuffle_param', 'exp_id', 'y_test', 'y_train', 'n_jobs_param', 'memory', 'log_plots_param', 'html_param', 'gpu_param', '_ml_usecase', 'idx', 'pipeline', 'is_multiclass', 'seed', 'X_test', 'logging_param', 'data', 'fold_generator', 'exp_name_log', 'USI', 'X', 'fold_groups_param', 'X_train', 'y', 'gpu_n_jobs_param', 'target_param'}
2023-11-24 17:22:03,896:INFO:Checking environment
2023-11-24 17:22:03,896:INFO:python_version: 3.11.5
2023-11-24 17:22:03,896:INFO:python_build: ('main', 'Sep 11 2023 08:31:25')
2023-11-24 17:22:03,897:INFO:machine: arm64
2023-11-24 17:22:03,897:INFO:platform: macOS-14.0-arm64-arm-64bit
2023-11-24 17:22:03,897:INFO:Memory: svmem(total=17179869184, available=5463982080, percent=68.2, used=7525187584, free=62242816, active=5413388288, inactive=5396660224, wired=2111799296)
2023-11-24 17:22:03,897:INFO:Physical Core: 10
2023-11-24 17:22:03,897:INFO:Logical Core: 10
2023-11-24 17:22:03,897:INFO:Checking libraries
2023-11-24 17:22:03,897:INFO:System:
2023-11-24 17:22:03,897:INFO:    python: 3.11.5 (main, Sep 11 2023, 08:31:25) [Clang 14.0.6 ]
2023-11-24 17:22:03,897:INFO:executable: /Users/saiakhil/anaconda3/envs/mlauto/bin/python
2023-11-24 17:22:03,897:INFO:   machine: macOS-14.0-arm64-arm-64bit
2023-11-24 17:22:03,897:INFO:PyCaret required dependencies:
2023-11-24 17:22:03,897:INFO:                 pip: 23.3.1
2023-11-24 17:22:03,897:INFO:          setuptools: 68.0.0
2023-11-24 17:22:03,897:INFO:             pycaret: 3.2.0
2023-11-24 17:22:03,897:INFO:             IPython: 8.15.0
2023-11-24 17:22:03,897:INFO:          ipywidgets: 8.1.1
2023-11-24 17:22:03,897:INFO:                tqdm: 4.66.1
2023-11-24 17:22:03,897:INFO:               numpy: 1.25.2
2023-11-24 17:22:03,897:INFO:              pandas: 1.5.3
2023-11-24 17:22:03,897:INFO:              jinja2: 3.1.2
2023-11-24 17:22:03,897:INFO:               scipy: 1.11.3
2023-11-24 17:22:03,897:INFO:              joblib: 1.3.2
2023-11-24 17:22:03,897:INFO:             sklearn: 1.2.2
2023-11-24 17:22:03,897:INFO:                pyod: 1.1.2
2023-11-24 17:22:03,897:INFO:            imblearn: 0.11.0
2023-11-24 17:22:03,897:INFO:   category_encoders: 2.6.3
2023-11-24 17:22:03,897:INFO:            lightgbm: 4.1.0
2023-11-24 17:22:03,897:INFO:               numba: 0.58.1
2023-11-24 17:22:03,897:INFO:            requests: 2.31.0
2023-11-24 17:22:03,897:INFO:          matplotlib: 3.6.0
2023-11-24 17:22:03,897:INFO:          scikitplot: 0.3.7
2023-11-24 17:22:03,897:INFO:         yellowbrick: 1.5
2023-11-24 17:22:03,897:INFO:              plotly: 5.18.0
2023-11-24 17:22:03,897:INFO:    plotly-resampler: Not installed
2023-11-24 17:22:03,897:INFO:             kaleido: 0.2.1
2023-11-24 17:22:03,897:INFO:           schemdraw: 0.15
2023-11-24 17:22:03,897:INFO:         statsmodels: 0.14.0
2023-11-24 17:22:03,897:INFO:              sktime: 0.21.1
2023-11-24 17:22:03,897:INFO:               tbats: 1.1.3
2023-11-24 17:22:03,897:INFO:            pmdarima: 2.0.4
2023-11-24 17:22:03,897:INFO:              psutil: 5.9.6
2023-11-24 17:22:03,897:INFO:          markupsafe: 2.1.3
2023-11-24 17:22:03,897:INFO:             pickle5: Not installed
2023-11-24 17:22:03,897:INFO:         cloudpickle: 3.0.0
2023-11-24 17:22:03,897:INFO:         deprecation: 2.1.0
2023-11-24 17:22:03,897:INFO:              xxhash: 3.4.1
2023-11-24 17:22:03,897:INFO:           wurlitzer: 3.0.3
2023-11-24 17:22:03,897:INFO:PyCaret optional dependencies:
2023-11-24 17:22:03,897:INFO:                shap: Not installed
2023-11-24 17:22:03,897:INFO:           interpret: Not installed
2023-11-24 17:22:03,897:INFO:                umap: Not installed
2023-11-24 17:22:03,897:INFO:     ydata_profiling: 4.6.2
2023-11-24 17:22:03,897:INFO:  explainerdashboard: Not installed
2023-11-24 17:22:03,897:INFO:             autoviz: Not installed
2023-11-24 17:22:03,897:INFO:           fairlearn: Not installed
2023-11-24 17:22:03,897:INFO:          deepchecks: Not installed
2023-11-24 17:22:03,897:INFO:             xgboost: 1.7.3
2023-11-24 17:22:03,897:INFO:            catboost: Not installed
2023-11-24 17:22:03,897:INFO:              kmodes: Not installed
2023-11-24 17:22:03,897:INFO:             mlxtend: Not installed
2023-11-24 17:22:03,897:INFO:       statsforecast: Not installed
2023-11-24 17:22:03,897:INFO:        tune_sklearn: Not installed
2023-11-24 17:22:03,897:INFO:                 ray: Not installed
2023-11-24 17:22:03,897:INFO:            hyperopt: Not installed
2023-11-24 17:22:03,897:INFO:              optuna: Not installed
2023-11-24 17:22:03,897:INFO:               skopt: Not installed
2023-11-24 17:22:03,897:INFO:              mlflow: Not installed
2023-11-24 17:22:03,897:INFO:              gradio: Not installed
2023-11-24 17:22:03,897:INFO:             fastapi: Not installed
2023-11-24 17:22:03,897:INFO:             uvicorn: Not installed
2023-11-24 17:22:03,897:INFO:              m2cgen: Not installed
2023-11-24 17:22:03,897:INFO:           evidently: Not installed
2023-11-24 17:22:03,897:INFO:               fugue: Not installed
2023-11-24 17:22:03,897:INFO:           streamlit: 1.28.2
2023-11-24 17:22:03,897:INFO:             prophet: Not installed
2023-11-24 17:22:03,897:INFO:None
2023-11-24 17:22:03,897:INFO:Set up data.
2023-11-24 17:22:03,921:INFO:Set up folding strategy.
2023-11-24 17:22:03,921:INFO:Set up train/test split.
2023-11-24 17:22:03,928:INFO:Set up index.
2023-11-24 17:22:03,928:INFO:Assigning column types.
2023-11-24 17:22:03,929:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-24 17:22:03,946:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 17:22:03,946:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 17:22:03,957:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 17:22:03,958:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 17:22:03,974:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 17:22:03,975:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 17:22:03,985:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 17:22:03,986:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 17:22:03,986:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-11-24 17:22:04,003:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 17:22:04,013:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 17:22:04,014:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 17:22:04,031:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 17:22:04,042:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 17:22:04,043:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 17:22:04,043:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-11-24 17:22:04,070:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 17:22:04,071:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 17:22:04,099:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 17:22:04,099:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 17:22:04,100:INFO:Preparing preprocessing pipeline...
2023-11-24 17:22:04,100:INFO:Set up label encoding.
2023-11-24 17:22:04,100:INFO:Set up simple imputation.
2023-11-24 17:22:04,102:INFO:Set up encoding of categorical features.
2023-11-24 17:22:04,480:INFO:Finished creating preprocessing pipeline.
2023-11-24 17:22:04,482:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/46/tcczvndd7xj_pqs5r176bl600000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Number_of_vehicles_involved',
                                             'Number_of_casualties'],
                                    transformer=SimpleImputer(add_i...
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['Time'],
                                    transformer=TargetEncoder(cols=['Time'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2023-11-24 17:22:04,483:INFO:Creating final display dataframe.
2023-11-24 17:22:04,935:INFO:Setup _display_container:                     Description                                              Value
0                    Session id                                               2003
1                        Target                                  Accident_severity
2                   Target type                                         Multiclass
3                Target mapping  Fatal injury: 0, Serious Injury: 1, Slight Inj...
4           Original data shape                                        (12316, 32)
5        Transformed data shape                                       (12316, 206)
6   Transformed train set shape                                        (8621, 206)
7    Transformed test set shape                                        (3695, 206)
8              Numeric features                                                  2
9          Categorical features                                                 29
10     Rows with missing values                                              76.5%
11                   Preprocess                                               True
12              Imputation type                                             simple
13           Numeric imputation                                               mean
14       Categorical imputation                                               mode
15     Maximum one-hot encoding                                                 25
16              Encoding method                                               None
17               Fold Generator                                    StratifiedKFold
18                  Fold Number                                                 10
19                     CPU Jobs                                                 -1
20                      Use GPU                                              False
21               Log Experiment                                              False
22              Experiment Name                                   clf-default-name
23                          USI                                               5deb
2023-11-24 17:22:04,963:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 17:22:04,964:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 17:22:04,991:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 17:22:04,992:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 17:22:04,993:INFO:setup() successfully completed in 1.1s...............
2023-11-24 17:22:19,139:INFO:Initializing compare_models()
2023-11-24 17:22:19,139:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2b59b56d0>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x2b59b56d0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2023-11-24 17:22:19,139:INFO:Checking exceptions
2023-11-24 17:22:19,142:INFO:Preparing display monitor
2023-11-24 17:22:19,143:INFO:Initializing Logistic Regression
2023-11-24 17:22:19,143:INFO:Total runtime is 6.556510925292969e-07 minutes
2023-11-24 17:22:19,143:INFO:SubProcess create_model() called ==================================
2023-11-24 17:22:19,143:INFO:Initializing create_model()
2023-11-24 17:22:19,143:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2b59b56d0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x15422db50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 17:22:19,143:INFO:Checking exceptions
2023-11-24 17:22:19,143:INFO:Importing libraries
2023-11-24 17:22:19,143:INFO:Copying training dataset
2023-11-24 17:22:19,146:INFO:Defining folds
2023-11-24 17:22:19,146:INFO:Declaring metric variables
2023-11-24 17:22:19,146:INFO:Importing untrained model
2023-11-24 17:22:19,146:INFO:Logistic Regression Imported successfully
2023-11-24 17:22:19,146:INFO:Starting cross validation
2023-11-24 17:22:19,147:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 17:22:24,818:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:24,821:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:24,824:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:25,140:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:25,142:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:25,143:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:25,143:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:22:25,144:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:25,145:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:25,146:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:22:25,147:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:25,503:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:25,505:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:25,507:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:25,537:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:25,540:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:25,542:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:25,548:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:25,550:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:25,550:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:25,552:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:25,552:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:25,554:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:22:25,555:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:25,708:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:25,710:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:25,712:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:25,808:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:25,810:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:25,813:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:26,179:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:26,181:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:26,183:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:26,188:INFO:Calculating mean and std
2023-11-24 17:22:26,189:INFO:Creating metrics dataframe
2023-11-24 17:22:26,191:INFO:Uploading results into container
2023-11-24 17:22:26,192:INFO:Uploading model into container now
2023-11-24 17:22:26,192:INFO:_master_model_container: 1
2023-11-24 17:22:26,192:INFO:_display_container: 2
2023-11-24 17:22:26,192:INFO:LogisticRegression(max_iter=1000, random_state=2003)
2023-11-24 17:22:26,192:INFO:create_model() successfully completed......................................
2023-11-24 17:22:26,330:INFO:SubProcess create_model() end ==================================
2023-11-24 17:22:26,330:INFO:Creating metrics dataframe
2023-11-24 17:22:26,332:INFO:Initializing K Neighbors Classifier
2023-11-24 17:22:26,332:INFO:Total runtime is 0.11981191635131835 minutes
2023-11-24 17:22:26,332:INFO:SubProcess create_model() called ==================================
2023-11-24 17:22:26,332:INFO:Initializing create_model()
2023-11-24 17:22:26,332:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2b59b56d0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x15422db50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 17:22:26,332:INFO:Checking exceptions
2023-11-24 17:22:26,332:INFO:Importing libraries
2023-11-24 17:22:26,332:INFO:Copying training dataset
2023-11-24 17:22:26,335:INFO:Defining folds
2023-11-24 17:22:26,335:INFO:Declaring metric variables
2023-11-24 17:22:26,335:INFO:Importing untrained model
2023-11-24 17:22:26,335:INFO:K Neighbors Classifier Imported successfully
2023-11-24 17:22:26,335:INFO:Starting cross validation
2023-11-24 17:22:26,336:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 17:22:27,190:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:27,195:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:27,197:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:27,230:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:27,233:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:27,235:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:27,260:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:27,266:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:27,268:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:27,307:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:27,309:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:27,311:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:27,312:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:27,313:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:27,314:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:27,315:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:22:27,315:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:27,316:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:27,318:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:27,319:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:27,321:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:27,323:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:27,332:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:27,334:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:27,334:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:27,336:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:27,336:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:27,337:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:27,338:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:27,339:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:27,342:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:27,346:INFO:Calculating mean and std
2023-11-24 17:22:27,346:INFO:Creating metrics dataframe
2023-11-24 17:22:27,348:INFO:Uploading results into container
2023-11-24 17:22:27,348:INFO:Uploading model into container now
2023-11-24 17:22:27,348:INFO:_master_model_container: 2
2023-11-24 17:22:27,348:INFO:_display_container: 2
2023-11-24 17:22:27,348:INFO:KNeighborsClassifier(n_jobs=-1)
2023-11-24 17:22:27,348:INFO:create_model() successfully completed......................................
2023-11-24 17:22:27,457:INFO:SubProcess create_model() end ==================================
2023-11-24 17:22:27,457:INFO:Creating metrics dataframe
2023-11-24 17:22:27,459:INFO:Initializing Naive Bayes
2023-11-24 17:22:27,459:INFO:Total runtime is 0.13860091765721638 minutes
2023-11-24 17:22:27,459:INFO:SubProcess create_model() called ==================================
2023-11-24 17:22:27,459:INFO:Initializing create_model()
2023-11-24 17:22:27,459:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2b59b56d0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x15422db50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 17:22:27,459:INFO:Checking exceptions
2023-11-24 17:22:27,459:INFO:Importing libraries
2023-11-24 17:22:27,459:INFO:Copying training dataset
2023-11-24 17:22:27,462:INFO:Defining folds
2023-11-24 17:22:27,462:INFO:Declaring metric variables
2023-11-24 17:22:27,462:INFO:Importing untrained model
2023-11-24 17:22:27,462:INFO:Naive Bayes Imported successfully
2023-11-24 17:22:27,462:INFO:Starting cross validation
2023-11-24 17:22:27,463:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 17:22:28,102:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:28,105:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:28,107:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:28,118:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:28,120:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:28,124:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:28,126:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:28,128:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:28,131:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:28,142:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:28,144:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:28,145:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:28,147:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:28,147:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:28,147:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:28,150:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:28,151:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:28,152:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:28,174:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:28,176:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:28,179:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:28,182:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:28,183:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:28,184:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:28,184:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:28,186:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:28,186:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:28,187:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:28,188:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:28,189:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:28,193:INFO:Calculating mean and std
2023-11-24 17:22:28,194:INFO:Creating metrics dataframe
2023-11-24 17:22:28,195:INFO:Uploading results into container
2023-11-24 17:22:28,195:INFO:Uploading model into container now
2023-11-24 17:22:28,195:INFO:_master_model_container: 3
2023-11-24 17:22:28,195:INFO:_display_container: 2
2023-11-24 17:22:28,195:INFO:GaussianNB()
2023-11-24 17:22:28,195:INFO:create_model() successfully completed......................................
2023-11-24 17:22:28,286:INFO:SubProcess create_model() end ==================================
2023-11-24 17:22:28,286:INFO:Creating metrics dataframe
2023-11-24 17:22:28,288:INFO:Initializing Decision Tree Classifier
2023-11-24 17:22:28,288:INFO:Total runtime is 0.15241741736729938 minutes
2023-11-24 17:22:28,288:INFO:SubProcess create_model() called ==================================
2023-11-24 17:22:28,288:INFO:Initializing create_model()
2023-11-24 17:22:28,288:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2b59b56d0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x15422db50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 17:22:28,288:INFO:Checking exceptions
2023-11-24 17:22:28,288:INFO:Importing libraries
2023-11-24 17:22:28,288:INFO:Copying training dataset
2023-11-24 17:22:28,291:INFO:Defining folds
2023-11-24 17:22:28,291:INFO:Declaring metric variables
2023-11-24 17:22:28,291:INFO:Importing untrained model
2023-11-24 17:22:28,291:INFO:Decision Tree Classifier Imported successfully
2023-11-24 17:22:28,291:INFO:Starting cross validation
2023-11-24 17:22:28,292:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 17:22:29,072:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:29,081:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:29,083:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:29,107:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:29,108:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:29,109:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:29,110:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:29,111:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:29,114:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:29,115:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:29,118:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:29,119:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:29,122:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:29,125:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:29,127:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:29,129:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:29,132:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:29,133:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:29,134:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:29,136:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:29,136:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:29,138:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:29,138:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:29,140:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:29,140:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:29,143:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:29,145:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:29,166:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:29,168:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:29,171:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:29,175:INFO:Calculating mean and std
2023-11-24 17:22:29,175:INFO:Creating metrics dataframe
2023-11-24 17:22:29,176:INFO:Uploading results into container
2023-11-24 17:22:29,176:INFO:Uploading model into container now
2023-11-24 17:22:29,177:INFO:_master_model_container: 4
2023-11-24 17:22:29,177:INFO:_display_container: 2
2023-11-24 17:22:29,177:INFO:DecisionTreeClassifier(random_state=2003)
2023-11-24 17:22:29,177:INFO:create_model() successfully completed......................................
2023-11-24 17:22:29,266:INFO:SubProcess create_model() end ==================================
2023-11-24 17:22:29,266:INFO:Creating metrics dataframe
2023-11-24 17:22:29,268:INFO:Initializing SVM - Linear Kernel
2023-11-24 17:22:29,268:INFO:Total runtime is 0.16874698400497434 minutes
2023-11-24 17:22:29,268:INFO:SubProcess create_model() called ==================================
2023-11-24 17:22:29,268:INFO:Initializing create_model()
2023-11-24 17:22:29,268:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2b59b56d0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x15422db50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 17:22:29,268:INFO:Checking exceptions
2023-11-24 17:22:29,268:INFO:Importing libraries
2023-11-24 17:22:29,268:INFO:Copying training dataset
2023-11-24 17:22:29,270:INFO:Defining folds
2023-11-24 17:22:29,270:INFO:Declaring metric variables
2023-11-24 17:22:29,270:INFO:Importing untrained model
2023-11-24 17:22:29,271:INFO:SVM - Linear Kernel Imported successfully
2023-11-24 17:22:29,271:INFO:Starting cross validation
2023-11-24 17:22:29,272:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 17:22:30,659:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 17:22:30,660:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:30,663:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:30,664:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:22:30,665:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:30,721:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 17:22:30,722:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:30,724:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:30,726:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:30,752:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 17:22:30,753:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:30,756:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:30,758:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:30,769:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 17:22:30,770:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:30,772:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:30,774:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:22:30,775:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:30,777:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 17:22:30,778:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:30,780:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:30,782:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:30,801:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 17:22:30,802:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:30,804:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:30,805:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:22:30,806:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:30,814:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 17:22:30,815:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:30,817:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:30,819:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:22:30,819:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:30,823:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 17:22:30,824:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:30,827:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:30,828:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:22:30,829:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:30,853:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 17:22:30,854:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:30,856:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:30,857:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 17:22:30,858:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:22:30,858:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:30,858:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:30,860:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:30,863:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:30,866:INFO:Calculating mean and std
2023-11-24 17:22:30,866:INFO:Creating metrics dataframe
2023-11-24 17:22:30,867:INFO:Uploading results into container
2023-11-24 17:22:30,868:INFO:Uploading model into container now
2023-11-24 17:22:30,868:INFO:_master_model_container: 5
2023-11-24 17:22:30,868:INFO:_display_container: 2
2023-11-24 17:22:30,868:INFO:SGDClassifier(eta0=0.001, n_jobs=-1, random_state=2003)
2023-11-24 17:22:30,868:INFO:create_model() successfully completed......................................
2023-11-24 17:22:30,957:INFO:SubProcess create_model() end ==================================
2023-11-24 17:22:30,957:INFO:Creating metrics dataframe
2023-11-24 17:22:30,959:INFO:Initializing Ridge Classifier
2023-11-24 17:22:30,959:INFO:Total runtime is 0.19693168799082436 minutes
2023-11-24 17:22:30,959:INFO:SubProcess create_model() called ==================================
2023-11-24 17:22:30,959:INFO:Initializing create_model()
2023-11-24 17:22:30,959:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2b59b56d0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x15422db50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 17:22:30,959:INFO:Checking exceptions
2023-11-24 17:22:30,959:INFO:Importing libraries
2023-11-24 17:22:30,959:INFO:Copying training dataset
2023-11-24 17:22:30,961:INFO:Defining folds
2023-11-24 17:22:30,961:INFO:Declaring metric variables
2023-11-24 17:22:30,961:INFO:Importing untrained model
2023-11-24 17:22:30,961:INFO:Ridge Classifier Imported successfully
2023-11-24 17:22:30,962:INFO:Starting cross validation
2023-11-24 17:22:30,963:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 17:22:31,584:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 17:22:31,585:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:31,587:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 17:22:31,589:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:31,592:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:31,595:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:31,595:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:22:31,596:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:22:31,597:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:31,597:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:31,626:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 17:22:31,627:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:31,629:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:31,632:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:22:31,634:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:31,646:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 17:22:31,647:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:31,649:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 17:22:31,649:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:31,650:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:31,651:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:22:31,652:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:31,655:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 17:22:31,656:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:31,656:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:31,657:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:22:31,658:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 17:22:31,658:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:31,659:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:31,659:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:31,660:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:22:31,661:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:31,661:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 17:22:31,661:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:31,661:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 17:22:31,662:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:31,662:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:31,663:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:22:31,663:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:31,664:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:31,665:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:31,666:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:22:31,666:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:22:31,667:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:31,667:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:31,668:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 17:22:31,668:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:31,671:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:31,672:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:22:31,673:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:31,676:INFO:Calculating mean and std
2023-11-24 17:22:31,677:INFO:Creating metrics dataframe
2023-11-24 17:22:31,678:INFO:Uploading results into container
2023-11-24 17:22:31,678:INFO:Uploading model into container now
2023-11-24 17:22:31,678:INFO:_master_model_container: 6
2023-11-24 17:22:31,678:INFO:_display_container: 2
2023-11-24 17:22:31,678:INFO:RidgeClassifier(random_state=2003)
2023-11-24 17:22:31,678:INFO:create_model() successfully completed......................................
2023-11-24 17:22:31,766:INFO:SubProcess create_model() end ==================================
2023-11-24 17:22:31,766:INFO:Creating metrics dataframe
2023-11-24 17:22:31,768:INFO:Initializing Random Forest Classifier
2023-11-24 17:22:31,768:INFO:Total runtime is 0.21041071812311807 minutes
2023-11-24 17:22:31,768:INFO:SubProcess create_model() called ==================================
2023-11-24 17:22:31,768:INFO:Initializing create_model()
2023-11-24 17:22:31,768:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2b59b56d0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x15422db50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 17:22:31,768:INFO:Checking exceptions
2023-11-24 17:22:31,768:INFO:Importing libraries
2023-11-24 17:22:31,768:INFO:Copying training dataset
2023-11-24 17:22:31,770:INFO:Defining folds
2023-11-24 17:22:31,770:INFO:Declaring metric variables
2023-11-24 17:22:31,770:INFO:Importing untrained model
2023-11-24 17:22:31,770:INFO:Random Forest Classifier Imported successfully
2023-11-24 17:22:31,770:INFO:Starting cross validation
2023-11-24 17:22:31,771:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 17:22:33,453:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:33,455:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:33,457:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:33,726:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:33,731:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:33,731:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:33,733:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:33,733:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:22:33,734:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:33,734:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:33,735:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:22:33,735:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:33,735:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:33,736:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:33,737:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:33,739:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:33,740:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:22:33,741:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:22:33,741:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:33,741:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:33,742:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:33,743:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:22:33,744:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:33,744:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:33,744:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:33,746:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:33,746:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:33,747:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:33,747:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:22:33,747:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:22:33,748:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:33,748:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:33,749:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:33,750:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:22:33,751:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:33,753:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:33,756:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:33,757:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:22:33,758:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:33,762:INFO:Calculating mean and std
2023-11-24 17:22:33,762:INFO:Creating metrics dataframe
2023-11-24 17:22:33,763:INFO:Uploading results into container
2023-11-24 17:22:33,764:INFO:Uploading model into container now
2023-11-24 17:22:33,764:INFO:_master_model_container: 7
2023-11-24 17:22:33,764:INFO:_display_container: 2
2023-11-24 17:22:33,764:INFO:RandomForestClassifier(n_jobs=-1, random_state=2003)
2023-11-24 17:22:33,764:INFO:create_model() successfully completed......................................
2023-11-24 17:22:33,856:INFO:SubProcess create_model() end ==================================
2023-11-24 17:22:33,856:INFO:Creating metrics dataframe
2023-11-24 17:22:33,858:INFO:Initializing Quadratic Discriminant Analysis
2023-11-24 17:22:33,858:INFO:Total runtime is 0.24524231751759845 minutes
2023-11-24 17:22:33,858:INFO:SubProcess create_model() called ==================================
2023-11-24 17:22:33,858:INFO:Initializing create_model()
2023-11-24 17:22:33,858:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2b59b56d0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x15422db50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 17:22:33,858:INFO:Checking exceptions
2023-11-24 17:22:33,858:INFO:Importing libraries
2023-11-24 17:22:33,858:INFO:Copying training dataset
2023-11-24 17:22:33,860:INFO:Defining folds
2023-11-24 17:22:33,860:INFO:Declaring metric variables
2023-11-24 17:22:33,860:INFO:Importing untrained model
2023-11-24 17:22:33,860:INFO:Quadratic Discriminant Analysis Imported successfully
2023-11-24 17:22:33,860:INFO:Starting cross validation
2023-11-24 17:22:33,861:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 17:22:34,425:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 17:22:34,498:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 17:22:34,499:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 17:22:34,533:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 17:22:34,535:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 17:22:34,546:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 17:22:34,548:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 17:22:34,562:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 17:22:34,603:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 17:22:34,623:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 17:22:34,777:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:34,779:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:34,781:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:22:34,782:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:34,820:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:34,824:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:34,829:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:22:34,830:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:34,837:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:34,839:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:34,841:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:22:34,841:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:34,842:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:34,842:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:34,843:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:34,844:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:34,845:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:22:34,846:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:34,846:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:22:34,847:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:34,853:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:34,855:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:34,855:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:34,857:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:22:34,858:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:34,858:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:34,859:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:22:34,860:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:34,873:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:34,876:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:34,878:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:22:34,879:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:34,895:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:34,896:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:34,898:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:34,898:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:34,899:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:22:34,899:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:22:34,900:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:34,900:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:34,904:INFO:Calculating mean and std
2023-11-24 17:22:34,904:INFO:Creating metrics dataframe
2023-11-24 17:22:34,906:INFO:Uploading results into container
2023-11-24 17:22:34,906:INFO:Uploading model into container now
2023-11-24 17:22:34,906:INFO:_master_model_container: 8
2023-11-24 17:22:34,906:INFO:_display_container: 2
2023-11-24 17:22:34,906:INFO:QuadraticDiscriminantAnalysis()
2023-11-24 17:22:34,906:INFO:create_model() successfully completed......................................
2023-11-24 17:22:34,998:INFO:SubProcess create_model() end ==================================
2023-11-24 17:22:34,998:INFO:Creating metrics dataframe
2023-11-24 17:22:35,000:INFO:Initializing Ada Boost Classifier
2023-11-24 17:22:35,000:INFO:Total runtime is 0.26427806615829463 minutes
2023-11-24 17:22:35,000:INFO:SubProcess create_model() called ==================================
2023-11-24 17:22:35,000:INFO:Initializing create_model()
2023-11-24 17:22:35,000:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2b59b56d0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x15422db50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 17:22:35,000:INFO:Checking exceptions
2023-11-24 17:22:35,000:INFO:Importing libraries
2023-11-24 17:22:35,000:INFO:Copying training dataset
2023-11-24 17:22:35,002:INFO:Defining folds
2023-11-24 17:22:35,002:INFO:Declaring metric variables
2023-11-24 17:22:35,002:INFO:Importing untrained model
2023-11-24 17:22:35,002:INFO:Ada Boost Classifier Imported successfully
2023-11-24 17:22:35,002:INFO:Starting cross validation
2023-11-24 17:22:35,003:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 17:22:36,331:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:36,334:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:36,337:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:36,343:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:36,345:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:36,348:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:36,353:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:36,356:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:36,358:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:36,379:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:36,382:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:36,384:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:36,400:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:36,405:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:36,409:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:36,410:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:36,410:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:36,412:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:36,412:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:36,415:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:36,415:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:36,415:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:36,417:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:36,419:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:36,421:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:36,423:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:36,425:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:36,429:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:36,431:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:36,434:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:36,437:INFO:Calculating mean and std
2023-11-24 17:22:36,438:INFO:Creating metrics dataframe
2023-11-24 17:22:36,439:INFO:Uploading results into container
2023-11-24 17:22:36,439:INFO:Uploading model into container now
2023-11-24 17:22:36,439:INFO:_master_model_container: 9
2023-11-24 17:22:36,439:INFO:_display_container: 2
2023-11-24 17:22:36,439:INFO:AdaBoostClassifier(random_state=2003)
2023-11-24 17:22:36,439:INFO:create_model() successfully completed......................................
2023-11-24 17:22:36,531:INFO:SubProcess create_model() end ==================================
2023-11-24 17:22:36,531:INFO:Creating metrics dataframe
2023-11-24 17:22:36,533:INFO:Initializing Gradient Boosting Classifier
2023-11-24 17:22:36,533:INFO:Total runtime is 0.28983374834060666 minutes
2023-11-24 17:22:36,533:INFO:SubProcess create_model() called ==================================
2023-11-24 17:22:36,533:INFO:Initializing create_model()
2023-11-24 17:22:36,533:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2b59b56d0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x15422db50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 17:22:36,533:INFO:Checking exceptions
2023-11-24 17:22:36,533:INFO:Importing libraries
2023-11-24 17:22:36,533:INFO:Copying training dataset
2023-11-24 17:22:36,536:INFO:Defining folds
2023-11-24 17:22:36,536:INFO:Declaring metric variables
2023-11-24 17:22:36,536:INFO:Importing untrained model
2023-11-24 17:22:36,536:INFO:Gradient Boosting Classifier Imported successfully
2023-11-24 17:22:36,536:INFO:Starting cross validation
2023-11-24 17:22:36,537:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 17:22:44,980:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:44,983:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:44,985:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:44,987:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:44,992:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:44,995:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:45,035:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:45,036:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:45,037:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:45,039:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:45,041:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:45,044:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:45,049:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:45,052:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:45,054:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:45,069:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:45,072:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:45,073:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:22:45,074:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:45,103:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:45,106:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:45,108:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:45,118:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:45,120:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:45,120:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:45,123:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:45,123:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:45,125:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:45,174:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:45,177:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:45,179:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:45,183:INFO:Calculating mean and std
2023-11-24 17:22:45,184:INFO:Creating metrics dataframe
2023-11-24 17:22:45,185:INFO:Uploading results into container
2023-11-24 17:22:45,186:INFO:Uploading model into container now
2023-11-24 17:22:45,186:INFO:_master_model_container: 10
2023-11-24 17:22:45,186:INFO:_display_container: 2
2023-11-24 17:22:45,186:INFO:GradientBoostingClassifier(random_state=2003)
2023-11-24 17:22:45,186:INFO:create_model() successfully completed......................................
2023-11-24 17:22:45,296:INFO:SubProcess create_model() end ==================================
2023-11-24 17:22:45,296:INFO:Creating metrics dataframe
2023-11-24 17:22:45,298:INFO:Initializing Linear Discriminant Analysis
2023-11-24 17:22:45,298:INFO:Total runtime is 0.43591187000274656 minutes
2023-11-24 17:22:45,298:INFO:SubProcess create_model() called ==================================
2023-11-24 17:22:45,298:INFO:Initializing create_model()
2023-11-24 17:22:45,298:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2b59b56d0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x15422db50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 17:22:45,298:INFO:Checking exceptions
2023-11-24 17:22:45,298:INFO:Importing libraries
2023-11-24 17:22:45,298:INFO:Copying training dataset
2023-11-24 17:22:45,301:INFO:Defining folds
2023-11-24 17:22:45,301:INFO:Declaring metric variables
2023-11-24 17:22:45,301:INFO:Importing untrained model
2023-11-24 17:22:45,301:INFO:Linear Discriminant Analysis Imported successfully
2023-11-24 17:22:45,301:INFO:Starting cross validation
2023-11-24 17:22:45,302:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 17:22:46,121:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:46,124:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:46,128:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:46,136:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:46,138:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:46,141:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:46,145:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:46,147:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:46,150:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:46,164:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:46,167:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:46,169:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:46,172:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:46,176:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:46,179:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:46,245:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:46,250:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:46,251:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:46,251:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:46,252:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:46,253:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:46,253:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:46,255:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:46,256:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:46,261:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:46,263:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:46,267:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:46,296:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:46,298:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:46,300:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:46,304:INFO:Calculating mean and std
2023-11-24 17:22:46,304:INFO:Creating metrics dataframe
2023-11-24 17:22:46,306:INFO:Uploading results into container
2023-11-24 17:22:46,307:INFO:Uploading model into container now
2023-11-24 17:22:46,307:INFO:_master_model_container: 11
2023-11-24 17:22:46,307:INFO:_display_container: 2
2023-11-24 17:22:46,307:INFO:LinearDiscriminantAnalysis()
2023-11-24 17:22:46,307:INFO:create_model() successfully completed......................................
2023-11-24 17:22:46,412:INFO:SubProcess create_model() end ==================================
2023-11-24 17:22:46,412:INFO:Creating metrics dataframe
2023-11-24 17:22:46,414:INFO:Initializing Extra Trees Classifier
2023-11-24 17:22:46,414:INFO:Total runtime is 0.45452181895573934 minutes
2023-11-24 17:22:46,415:INFO:SubProcess create_model() called ==================================
2023-11-24 17:22:46,415:INFO:Initializing create_model()
2023-11-24 17:22:46,415:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2b59b56d0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x15422db50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 17:22:46,415:INFO:Checking exceptions
2023-11-24 17:22:46,415:INFO:Importing libraries
2023-11-24 17:22:46,415:INFO:Copying training dataset
2023-11-24 17:22:46,418:INFO:Defining folds
2023-11-24 17:22:46,418:INFO:Declaring metric variables
2023-11-24 17:22:46,418:INFO:Importing untrained model
2023-11-24 17:22:46,418:INFO:Extra Trees Classifier Imported successfully
2023-11-24 17:22:46,418:INFO:Starting cross validation
2023-11-24 17:22:46,419:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 17:22:48,367:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:48,370:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:48,371:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:22:48,372:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:48,403:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:48,407:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:48,409:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:22:48,410:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:48,697:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:48,701:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:48,703:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:22:48,705:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:48,757:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:48,760:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:48,761:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:22:48,762:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:48,772:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:48,775:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:48,776:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:22:48,777:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:48,777:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:48,777:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:48,780:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:48,780:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:48,782:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:22:48,783:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:48,783:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:48,818:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:48,821:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:48,822:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:48,823:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:22:48,824:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:48,825:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:48,827:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:48,837:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:48,840:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:48,841:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:22:48,842:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:22:48,845:INFO:Calculating mean and std
2023-11-24 17:22:48,845:INFO:Creating metrics dataframe
2023-11-24 17:22:48,847:INFO:Uploading results into container
2023-11-24 17:22:48,847:INFO:Uploading model into container now
2023-11-24 17:22:48,847:INFO:_master_model_container: 12
2023-11-24 17:22:48,847:INFO:_display_container: 2
2023-11-24 17:22:48,847:INFO:ExtraTreesClassifier(n_jobs=-1, random_state=2003)
2023-11-24 17:22:48,847:INFO:create_model() successfully completed......................................
2023-11-24 17:22:48,937:INFO:SubProcess create_model() end ==================================
2023-11-24 17:22:48,938:INFO:Creating metrics dataframe
2023-11-24 17:22:48,939:INFO:Initializing Extreme Gradient Boosting
2023-11-24 17:22:48,939:INFO:Total runtime is 0.49660176833470665 minutes
2023-11-24 17:22:48,939:INFO:SubProcess create_model() called ==================================
2023-11-24 17:22:48,939:INFO:Initializing create_model()
2023-11-24 17:22:48,939:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2b59b56d0>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x15422db50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 17:22:48,939:INFO:Checking exceptions
2023-11-24 17:22:48,939:INFO:Importing libraries
2023-11-24 17:22:48,939:INFO:Copying training dataset
2023-11-24 17:22:48,942:INFO:Defining folds
2023-11-24 17:22:48,942:INFO:Declaring metric variables
2023-11-24 17:22:48,942:INFO:Importing untrained model
2023-11-24 17:22:48,942:INFO:Extreme Gradient Boosting Imported successfully
2023-11-24 17:22:48,942:INFO:Starting cross validation
2023-11-24 17:22:48,943:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 17:23:06,945:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:23:06,949:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:23:06,951:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:23:07,495:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:23:07,498:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:23:07,499:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:23:07,500:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:23:07,505:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:23:07,507:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:23:07,554:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:23:07,557:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:23:07,560:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:23:07,563:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:23:07,567:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:23:07,569:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:23:07,648:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:23:07,651:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:23:07,653:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:23:07,780:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:23:07,782:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:23:07,784:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:23:07,995:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:23:07,998:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:23:08,000:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:23:08,062:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:23:08,064:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:23:08,066:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:23:08,285:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:23:08,287:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:23:08,289:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:23:08,293:INFO:Calculating mean and std
2023-11-24 17:23:08,293:INFO:Creating metrics dataframe
2023-11-24 17:23:08,294:INFO:Uploading results into container
2023-11-24 17:23:08,294:INFO:Uploading model into container now
2023-11-24 17:23:08,295:INFO:_master_model_container: 13
2023-11-24 17:23:08,295:INFO:_display_container: 2
2023-11-24 17:23:08,295:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              predictor=None, random_state=2003, ...)
2023-11-24 17:23:08,295:INFO:create_model() successfully completed......................................
2023-11-24 17:23:08,384:INFO:SubProcess create_model() end ==================================
2023-11-24 17:23:08,384:INFO:Creating metrics dataframe
2023-11-24 17:23:08,386:INFO:Initializing Light Gradient Boosting Machine
2023-11-24 17:23:08,386:INFO:Total runtime is 0.820708167552948 minutes
2023-11-24 17:23:08,386:INFO:SubProcess create_model() called ==================================
2023-11-24 17:23:08,386:INFO:Initializing create_model()
2023-11-24 17:23:08,386:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2b59b56d0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x15422db50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 17:23:08,386:INFO:Checking exceptions
2023-11-24 17:23:08,386:INFO:Importing libraries
2023-11-24 17:23:08,386:INFO:Copying training dataset
2023-11-24 17:23:08,388:INFO:Defining folds
2023-11-24 17:23:08,388:INFO:Declaring metric variables
2023-11-24 17:23:08,388:INFO:Importing untrained model
2023-11-24 17:23:08,388:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-24 17:23:08,388:INFO:Starting cross validation
2023-11-24 17:23:08,389:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 17:23:09,118:WARNING:create_model() for lightgbm raised an exception or returned all 0.0, trying without fit_kwargs:
2023-11-24 17:23:09,118:WARNING:Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/sklearn.py", line 1142, in fit
    super().fit(
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/sklearn.py", line 842, in fit
    self._Booster = train(
                    ^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/engine.py", line 255, in train
    booster = Booster(params=params, train_set=train_set)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 3200, in __init__
    train_set.construct()
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 2276, in construct
    self._lazy_init(data=self.data, label=self.label, reference=None,
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 1959, in _lazy_init
    return self.set_feature_name(feature_name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 2639, in set_feature_name
    _safe_call(_LIB.LGBM_DatasetSetFeatureNames(
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 242, in _safe_call
    raise LightGBMError(_LIB.LGBM_GetLastError().decode('utf-8'))
lightgbm.basic.LightGBMError: Do not support special JSON characters in feature name.


2023-11-24 17:23:09,119:INFO:Initializing create_model()
2023-11-24 17:23:09,119:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2b59b56d0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x15422db50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 17:23:09,119:INFO:Checking exceptions
2023-11-24 17:23:09,119:INFO:Importing libraries
2023-11-24 17:23:09,119:INFO:Copying training dataset
2023-11-24 17:23:09,121:INFO:Defining folds
2023-11-24 17:23:09,121:INFO:Declaring metric variables
2023-11-24 17:23:09,122:INFO:Importing untrained model
2023-11-24 17:23:09,122:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-24 17:23:09,122:INFO:Starting cross validation
2023-11-24 17:23:09,123:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 17:23:09,882:ERROR:create_model() for lightgbm raised an exception or returned all 0.0:
2023-11-24 17:23:09,883:ERROR:Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/sklearn.py", line 1142, in fit
    super().fit(
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/sklearn.py", line 842, in fit
    self._Booster = train(
                    ^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/engine.py", line 255, in train
    booster = Booster(params=params, train_set=train_set)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 3200, in __init__
    train_set.construct()
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 2276, in construct
    self._lazy_init(data=self.data, label=self.label, reference=None,
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 1959, in _lazy_init
    return self.set_feature_name(feature_name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 2639, in set_feature_name
    _safe_call(_LIB.LGBM_DatasetSetFeatureNames(
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 242, in _safe_call
    raise LightGBMError(_LIB.LGBM_GetLastError().decode('utf-8'))
lightgbm.basic.LightGBMError: Do not support special JSON characters in feature name.


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/sklearn.py", line 1142, in fit
    super().fit(
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/sklearn.py", line 842, in fit
    self._Booster = train(
                    ^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/engine.py", line 255, in train
    booster = Booster(params=params, train_set=train_set)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 3200, in __init__
    train_set.construct()
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 2276, in construct
    self._lazy_init(data=self.data, label=self.label, reference=None,
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 1959, in _lazy_init
    return self.set_feature_name(feature_name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 2639, in set_feature_name
    _safe_call(_LIB.LGBM_DatasetSetFeatureNames(
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 242, in _safe_call
    raise LightGBMError(_LIB.LGBM_GetLastError().decode('utf-8'))
lightgbm.basic.LightGBMError: Do not support special JSON characters in feature name.


2023-11-24 17:23:09,884:INFO:Initializing Dummy Classifier
2023-11-24 17:23:09,884:INFO:Total runtime is 0.8456754366556803 minutes
2023-11-24 17:23:09,884:INFO:SubProcess create_model() called ==================================
2023-11-24 17:23:09,884:INFO:Initializing create_model()
2023-11-24 17:23:09,884:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2b59b56d0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x15422db50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 17:23:09,884:INFO:Checking exceptions
2023-11-24 17:23:09,884:INFO:Importing libraries
2023-11-24 17:23:09,884:INFO:Copying training dataset
2023-11-24 17:23:09,887:INFO:Defining folds
2023-11-24 17:23:09,887:INFO:Declaring metric variables
2023-11-24 17:23:09,887:INFO:Importing untrained model
2023-11-24 17:23:09,887:INFO:Dummy Classifier Imported successfully
2023-11-24 17:23:09,887:INFO:Starting cross validation
2023-11-24 17:23:09,888:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 17:23:10,460:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:23:10,466:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:23:10,466:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:23:10,467:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:23:10,468:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:23:10,468:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:23:10,469:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:23:10,470:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:23:10,471:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:23:10,473:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:23:10,477:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:23:10,478:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:23:10,505:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:23:10,507:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:23:10,508:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:23:10,509:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:23:10,524:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:23:10,526:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:23:10,528:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:23:10,529:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:23:10,529:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:23:10,531:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:23:10,532:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:23:10,533:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:23:10,534:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:23:10,536:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:23:10,537:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:23:10,538:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:23:10,538:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:23:10,540:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:23:10,541:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:23:10,542:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:23:10,547:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:23:10,549:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:23:10,549:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:23:10,551:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:23:10,551:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:23:10,551:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:23:10,553:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:23:10,554:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:23:10,557:INFO:Calculating mean and std
2023-11-24 17:23:10,557:INFO:Creating metrics dataframe
2023-11-24 17:23:10,559:INFO:Uploading results into container
2023-11-24 17:23:10,559:INFO:Uploading model into container now
2023-11-24 17:23:10,559:INFO:_master_model_container: 14
2023-11-24 17:23:10,559:INFO:_display_container: 2
2023-11-24 17:23:10,559:INFO:DummyClassifier(random_state=2003)
2023-11-24 17:23:10,559:INFO:create_model() successfully completed......................................
2023-11-24 17:23:10,693:INFO:SubProcess create_model() end ==================================
2023-11-24 17:23:10,694:INFO:Creating metrics dataframe
2023-11-24 17:23:10,696:INFO:Initializing create_model()
2023-11-24 17:23:10,696:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2b59b56d0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              predictor=None, random_state=2003, ...), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 17:23:10,696:INFO:Checking exceptions
2023-11-24 17:23:10,696:INFO:Importing libraries
2023-11-24 17:23:10,696:INFO:Copying training dataset
2023-11-24 17:23:10,699:INFO:Defining folds
2023-11-24 17:23:10,699:INFO:Declaring metric variables
2023-11-24 17:23:10,699:INFO:Importing untrained model
2023-11-24 17:23:10,700:INFO:Declaring custom model
2023-11-24 17:23:10,700:INFO:Extreme Gradient Boosting Imported successfully
2023-11-24 17:23:10,701:INFO:Cross validation set to False
2023-11-24 17:23:10,701:INFO:Fitting Model
2023-11-24 17:23:13,482:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='multi:softprob', predictor=None, ...)
2023-11-24 17:23:13,483:INFO:create_model() successfully completed......................................
2023-11-24 17:23:13,580:INFO:_master_model_container: 14
2023-11-24 17:23:13,580:INFO:_display_container: 2
2023-11-24 17:23:13,581:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='multi:softprob', predictor=None, ...)
2023-11-24 17:23:13,581:INFO:compare_models() successfully completed......................................
2023-11-24 17:23:13,587:INFO:Initializing save_model()
2023-11-24 17:23:13,587:INFO:save_model(model=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='multi:softprob', predictor=None, ...), model_name=best_model, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/46/tcczvndd7xj_pqs5r176bl600000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Number_of_vehicles_involved',
                                             'Number_of_casualties'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrappe...
                                                                    'Vehicle_movement',
                                                                    'Casualty_class',
                                                                    'Sex_of_casualty',
                                                                    'Age_band_of_casualty',
                                                                    'Casualty_severity',
                                                                    'Work_of_casuality',
                                                                    'Fitness_of_casuality',
                                                                    'Pedestrian_movement',
                                                                    'Cause_of_accident'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['Time'],
                                    transformer=TargetEncoder(cols=['Time'],
                                                              handle_missing='return_nan')))]), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-11-24 17:23:13,588:INFO:Adding model into prep_pipe
2023-11-24 17:23:13,603:INFO:best_model.pkl saved in current working directory
2023-11-24 17:23:13,608:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Number_of_vehicles_involved',
                                             'Number_of_casualties'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Time', 'Day_of_week',
                                             'Age_band_of_driver',
                                             'S...
                               grow_policy=None, importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, n_estimators=100,
                               n_jobs=-1, num_parallel_tree=None,
                               objective='multi:softprob', predictor=None, ...))])
2023-11-24 17:23:13,608:INFO:save_model() successfully completed......................................
2023-11-24 17:57:53,342:INFO:PyCaret ClassificationExperiment
2023-11-24 17:57:53,342:INFO:Logging name: clf-default-name
2023-11-24 17:57:53,342:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-11-24 17:57:53,342:INFO:version 3.2.0
2023-11-24 17:57:53,342:INFO:Initializing setup()
2023-11-24 17:57:53,342:INFO:self.USI: 1518
2023-11-24 17:57:53,342:INFO:self._variable_keys: {'_available_plots', 'fix_imbalance', 'fold_shuffle_param', 'exp_id', 'y_test', 'y_train', 'n_jobs_param', 'memory', 'log_plots_param', 'html_param', 'gpu_param', '_ml_usecase', 'idx', 'pipeline', 'is_multiclass', 'seed', 'X_test', 'logging_param', 'data', 'fold_generator', 'exp_name_log', 'USI', 'X', 'fold_groups_param', 'X_train', 'y', 'gpu_n_jobs_param', 'target_param'}
2023-11-24 17:57:53,342:INFO:Checking environment
2023-11-24 17:57:53,342:INFO:python_version: 3.11.5
2023-11-24 17:57:53,342:INFO:python_build: ('main', 'Sep 11 2023 08:31:25')
2023-11-24 17:57:53,342:INFO:machine: arm64
2023-11-24 17:57:53,342:INFO:platform: macOS-14.0-arm64-arm-64bit
2023-11-24 17:57:53,342:INFO:Memory: svmem(total=17179869184, available=5013323776, percent=70.8, used=7080230912, free=57147392, active=4981456896, inactive=4955881472, wired=2098774016)
2023-11-24 17:57:53,342:INFO:Physical Core: 10
2023-11-24 17:57:53,342:INFO:Logical Core: 10
2023-11-24 17:57:53,342:INFO:Checking libraries
2023-11-24 17:57:53,342:INFO:System:
2023-11-24 17:57:53,342:INFO:    python: 3.11.5 (main, Sep 11 2023, 08:31:25) [Clang 14.0.6 ]
2023-11-24 17:57:53,342:INFO:executable: /Users/saiakhil/anaconda3/envs/mlauto/bin/python
2023-11-24 17:57:53,342:INFO:   machine: macOS-14.0-arm64-arm-64bit
2023-11-24 17:57:53,342:INFO:PyCaret required dependencies:
2023-11-24 17:57:53,342:INFO:                 pip: 23.3.1
2023-11-24 17:57:53,342:INFO:          setuptools: 68.0.0
2023-11-24 17:57:53,342:INFO:             pycaret: 3.2.0
2023-11-24 17:57:53,342:INFO:             IPython: 8.15.0
2023-11-24 17:57:53,342:INFO:          ipywidgets: 8.1.1
2023-11-24 17:57:53,342:INFO:                tqdm: 4.66.1
2023-11-24 17:57:53,342:INFO:               numpy: 1.25.2
2023-11-24 17:57:53,342:INFO:              pandas: 1.5.3
2023-11-24 17:57:53,342:INFO:              jinja2: 3.1.2
2023-11-24 17:57:53,342:INFO:               scipy: 1.11.3
2023-11-24 17:57:53,342:INFO:              joblib: 1.3.2
2023-11-24 17:57:53,342:INFO:             sklearn: 1.2.2
2023-11-24 17:57:53,342:INFO:                pyod: 1.1.2
2023-11-24 17:57:53,342:INFO:            imblearn: 0.11.0
2023-11-24 17:57:53,342:INFO:   category_encoders: 2.6.3
2023-11-24 17:57:53,343:INFO:            lightgbm: 4.1.0
2023-11-24 17:57:53,343:INFO:               numba: 0.58.1
2023-11-24 17:57:53,343:INFO:            requests: 2.31.0
2023-11-24 17:57:53,343:INFO:          matplotlib: 3.6.0
2023-11-24 17:57:53,343:INFO:          scikitplot: 0.3.7
2023-11-24 17:57:53,343:INFO:         yellowbrick: 1.5
2023-11-24 17:57:53,343:INFO:              plotly: 5.18.0
2023-11-24 17:57:53,343:INFO:    plotly-resampler: Not installed
2023-11-24 17:57:53,343:INFO:             kaleido: 0.2.1
2023-11-24 17:57:53,343:INFO:           schemdraw: 0.15
2023-11-24 17:57:53,343:INFO:         statsmodels: 0.14.0
2023-11-24 17:57:53,343:INFO:              sktime: 0.21.1
2023-11-24 17:57:53,343:INFO:               tbats: 1.1.3
2023-11-24 17:57:53,343:INFO:            pmdarima: 2.0.4
2023-11-24 17:57:53,343:INFO:              psutil: 5.9.6
2023-11-24 17:57:53,343:INFO:          markupsafe: 2.1.3
2023-11-24 17:57:53,343:INFO:             pickle5: Not installed
2023-11-24 17:57:53,343:INFO:         cloudpickle: 3.0.0
2023-11-24 17:57:53,343:INFO:         deprecation: 2.1.0
2023-11-24 17:57:53,343:INFO:              xxhash: 3.4.1
2023-11-24 17:57:53,343:INFO:           wurlitzer: 3.0.3
2023-11-24 17:57:53,343:INFO:PyCaret optional dependencies:
2023-11-24 17:57:53,343:INFO:                shap: Not installed
2023-11-24 17:57:53,343:INFO:           interpret: Not installed
2023-11-24 17:57:53,343:INFO:                umap: Not installed
2023-11-24 17:57:53,343:INFO:     ydata_profiling: 4.6.2
2023-11-24 17:57:53,343:INFO:  explainerdashboard: Not installed
2023-11-24 17:57:53,343:INFO:             autoviz: Not installed
2023-11-24 17:57:53,343:INFO:           fairlearn: Not installed
2023-11-24 17:57:53,343:INFO:          deepchecks: Not installed
2023-11-24 17:57:53,343:INFO:             xgboost: 1.7.3
2023-11-24 17:57:53,343:INFO:            catboost: Not installed
2023-11-24 17:57:53,343:INFO:              kmodes: Not installed
2023-11-24 17:57:53,343:INFO:             mlxtend: Not installed
2023-11-24 17:57:53,343:INFO:       statsforecast: Not installed
2023-11-24 17:57:53,343:INFO:        tune_sklearn: Not installed
2023-11-24 17:57:53,343:INFO:                 ray: Not installed
2023-11-24 17:57:53,343:INFO:            hyperopt: Not installed
2023-11-24 17:57:53,343:INFO:              optuna: Not installed
2023-11-24 17:57:53,343:INFO:               skopt: Not installed
2023-11-24 17:57:53,343:INFO:              mlflow: Not installed
2023-11-24 17:57:53,343:INFO:              gradio: Not installed
2023-11-24 17:57:53,343:INFO:             fastapi: Not installed
2023-11-24 17:57:53,343:INFO:             uvicorn: Not installed
2023-11-24 17:57:53,343:INFO:              m2cgen: Not installed
2023-11-24 17:57:53,343:INFO:           evidently: Not installed
2023-11-24 17:57:53,343:INFO:               fugue: Not installed
2023-11-24 17:57:53,343:INFO:           streamlit: 1.28.2
2023-11-24 17:57:53,343:INFO:             prophet: Not installed
2023-11-24 17:57:53,343:INFO:None
2023-11-24 17:57:53,343:INFO:Set up data.
2023-11-24 17:57:53,367:INFO:Set up folding strategy.
2023-11-24 17:57:53,367:INFO:Set up train/test split.
2023-11-24 17:57:53,375:INFO:Set up index.
2023-11-24 17:57:53,375:INFO:Assigning column types.
2023-11-24 17:57:53,376:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-24 17:57:53,394:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 17:57:53,394:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 17:57:53,405:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 17:57:53,406:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 17:57:53,424:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 17:57:53,424:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 17:57:53,435:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 17:57:53,436:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 17:57:53,436:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-11-24 17:57:53,454:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 17:57:53,464:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 17:57:53,465:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 17:57:53,483:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 17:57:53,493:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 17:57:53,495:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 17:57:53,495:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-11-24 17:57:53,523:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 17:57:53,524:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 17:57:53,553:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 17:57:53,554:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 17:57:53,554:INFO:Preparing preprocessing pipeline...
2023-11-24 17:57:53,555:INFO:Set up label encoding.
2023-11-24 17:57:53,555:INFO:Set up simple imputation.
2023-11-24 17:57:53,557:INFO:Set up encoding of categorical features.
2023-11-24 17:57:53,927:INFO:Finished creating preprocessing pipeline.
2023-11-24 17:57:53,930:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/46/tcczvndd7xj_pqs5r176bl600000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Number_of_vehicles_involved',
                                             'Number_of_casualties'],
                                    transformer=SimpleImputer(add_i...
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['Time'],
                                    transformer=TargetEncoder(cols=['Time'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2023-11-24 17:57:53,930:INFO:Creating final display dataframe.
2023-11-24 17:57:54,390:INFO:Setup _display_container:                     Description                                              Value
0                    Session id                                               4312
1                        Target                                  Accident_severity
2                   Target type                                         Multiclass
3                Target mapping  Fatal injury: 0, Serious Injury: 1, Slight Inj...
4           Original data shape                                        (12316, 32)
5        Transformed data shape                                       (12316, 207)
6   Transformed train set shape                                        (8621, 207)
7    Transformed test set shape                                        (3695, 207)
8              Numeric features                                                  2
9          Categorical features                                                 29
10     Rows with missing values                                              76.5%
11                   Preprocess                                               True
12              Imputation type                                             simple
13           Numeric imputation                                               mean
14       Categorical imputation                                               mode
15     Maximum one-hot encoding                                                 25
16              Encoding method                                               None
17               Fold Generator                                    StratifiedKFold
18                  Fold Number                                                 10
19                     CPU Jobs                                                 -1
20                      Use GPU                                              False
21               Log Experiment                                              False
22              Experiment Name                                   clf-default-name
23                          USI                                               1518
2023-11-24 17:57:54,421:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 17:57:54,422:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 17:57:54,450:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 17:57:54,451:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 17:57:54,451:INFO:setup() successfully completed in 1.11s...............
2023-11-24 17:57:59,265:INFO:Initializing compare_models()
2023-11-24 17:57:59,265:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x154503750>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x154503750>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2023-11-24 17:57:59,265:INFO:Checking exceptions
2023-11-24 17:57:59,268:INFO:Preparing display monitor
2023-11-24 17:57:59,269:INFO:Initializing Logistic Regression
2023-11-24 17:57:59,269:INFO:Total runtime is 5.324681599934896e-07 minutes
2023-11-24 17:57:59,269:INFO:SubProcess create_model() called ==================================
2023-11-24 17:57:59,269:INFO:Initializing create_model()
2023-11-24 17:57:59,269:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x154503750>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x284bb8210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 17:57:59,269:INFO:Checking exceptions
2023-11-24 17:57:59,269:INFO:Importing libraries
2023-11-24 17:57:59,269:INFO:Copying training dataset
2023-11-24 17:57:59,271:INFO:Defining folds
2023-11-24 17:57:59,271:INFO:Declaring metric variables
2023-11-24 17:57:59,271:INFO:Importing untrained model
2023-11-24 17:57:59,271:INFO:Logistic Regression Imported successfully
2023-11-24 17:57:59,271:INFO:Starting cross validation
2023-11-24 17:57:59,272:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 17:58:05,124:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:05,126:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:05,129:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:05,140:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:05,143:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:05,145:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:05,205:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:05,209:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:05,211:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:58:05,212:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:05,231:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:05,234:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:05,235:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:58:05,237:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:05,340:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:05,343:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:05,345:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:05,396:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:05,399:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:05,400:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:58:05,401:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:05,633:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:05,636:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:05,638:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:05,699:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:05,701:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:05,703:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:06,003:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:06,005:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:06,007:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:06,401:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:06,404:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:06,406:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:06,410:INFO:Calculating mean and std
2023-11-24 17:58:06,411:INFO:Creating metrics dataframe
2023-11-24 17:58:06,416:INFO:Uploading results into container
2023-11-24 17:58:06,417:INFO:Uploading model into container now
2023-11-24 17:58:06,417:INFO:_master_model_container: 1
2023-11-24 17:58:06,417:INFO:_display_container: 2
2023-11-24 17:58:06,418:INFO:LogisticRegression(max_iter=1000, random_state=4312)
2023-11-24 17:58:06,418:INFO:create_model() successfully completed......................................
2023-11-24 17:58:06,532:INFO:SubProcess create_model() end ==================================
2023-11-24 17:58:06,532:INFO:Creating metrics dataframe
2023-11-24 17:58:06,533:INFO:Initializing K Neighbors Classifier
2023-11-24 17:58:06,533:INFO:Total runtime is 0.12107691764831544 minutes
2023-11-24 17:58:06,533:INFO:SubProcess create_model() called ==================================
2023-11-24 17:58:06,533:INFO:Initializing create_model()
2023-11-24 17:58:06,533:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x154503750>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x284bb8210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 17:58:06,533:INFO:Checking exceptions
2023-11-24 17:58:06,533:INFO:Importing libraries
2023-11-24 17:58:06,533:INFO:Copying training dataset
2023-11-24 17:58:06,536:INFO:Defining folds
2023-11-24 17:58:06,536:INFO:Declaring metric variables
2023-11-24 17:58:06,536:INFO:Importing untrained model
2023-11-24 17:58:06,536:INFO:K Neighbors Classifier Imported successfully
2023-11-24 17:58:06,536:INFO:Starting cross validation
2023-11-24 17:58:06,537:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 17:58:07,504:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:07,506:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:07,507:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:58:07,509:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:07,517:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:07,520:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:07,521:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:58:07,522:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:07,531:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:07,534:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:07,535:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:58:07,536:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:07,546:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:07,548:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:07,550:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:58:07,551:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:07,552:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:07,554:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:07,556:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:07,557:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:07,559:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:07,561:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:07,568:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:07,571:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:07,573:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:07,594:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:07,596:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:07,596:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:07,598:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:07,598:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:07,599:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:58:07,600:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:07,607:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:07,609:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:07,611:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:07,616:INFO:Calculating mean and std
2023-11-24 17:58:07,617:INFO:Creating metrics dataframe
2023-11-24 17:58:07,618:INFO:Uploading results into container
2023-11-24 17:58:07,618:INFO:Uploading model into container now
2023-11-24 17:58:07,618:INFO:_master_model_container: 2
2023-11-24 17:58:07,618:INFO:_display_container: 2
2023-11-24 17:58:07,618:INFO:KNeighborsClassifier(n_jobs=-1)
2023-11-24 17:58:07,618:INFO:create_model() successfully completed......................................
2023-11-24 17:58:07,708:INFO:SubProcess create_model() end ==================================
2023-11-24 17:58:07,709:INFO:Creating metrics dataframe
2023-11-24 17:58:07,710:INFO:Initializing Naive Bayes
2023-11-24 17:58:07,710:INFO:Total runtime is 0.14069265127182007 minutes
2023-11-24 17:58:07,710:INFO:SubProcess create_model() called ==================================
2023-11-24 17:58:07,710:INFO:Initializing create_model()
2023-11-24 17:58:07,710:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x154503750>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x284bb8210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 17:58:07,710:INFO:Checking exceptions
2023-11-24 17:58:07,710:INFO:Importing libraries
2023-11-24 17:58:07,710:INFO:Copying training dataset
2023-11-24 17:58:07,713:INFO:Defining folds
2023-11-24 17:58:07,713:INFO:Declaring metric variables
2023-11-24 17:58:07,713:INFO:Importing untrained model
2023-11-24 17:58:07,713:INFO:Naive Bayes Imported successfully
2023-11-24 17:58:07,713:INFO:Starting cross validation
2023-11-24 17:58:07,714:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 17:58:08,308:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:08,311:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:08,313:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:08,314:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:08,325:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:08,328:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:08,335:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:08,338:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:08,340:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:08,357:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:08,360:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:08,362:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:08,366:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:08,369:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:08,371:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:08,374:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:08,377:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:08,379:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:08,383:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:08,385:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:08,386:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:08,388:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:08,388:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:08,390:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:08,433:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:08,434:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:08,435:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:08,436:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:08,438:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:08,438:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:08,442:INFO:Calculating mean and std
2023-11-24 17:58:08,442:INFO:Creating metrics dataframe
2023-11-24 17:58:08,444:INFO:Uploading results into container
2023-11-24 17:58:08,444:INFO:Uploading model into container now
2023-11-24 17:58:08,444:INFO:_master_model_container: 3
2023-11-24 17:58:08,444:INFO:_display_container: 2
2023-11-24 17:58:08,444:INFO:GaussianNB()
2023-11-24 17:58:08,444:INFO:create_model() successfully completed......................................
2023-11-24 17:58:08,532:INFO:SubProcess create_model() end ==================================
2023-11-24 17:58:08,532:INFO:Creating metrics dataframe
2023-11-24 17:58:08,534:INFO:Initializing Decision Tree Classifier
2023-11-24 17:58:08,534:INFO:Total runtime is 0.1544162670771281 minutes
2023-11-24 17:58:08,534:INFO:SubProcess create_model() called ==================================
2023-11-24 17:58:08,534:INFO:Initializing create_model()
2023-11-24 17:58:08,534:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x154503750>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x284bb8210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 17:58:08,534:INFO:Checking exceptions
2023-11-24 17:58:08,534:INFO:Importing libraries
2023-11-24 17:58:08,534:INFO:Copying training dataset
2023-11-24 17:58:08,536:INFO:Defining folds
2023-11-24 17:58:08,536:INFO:Declaring metric variables
2023-11-24 17:58:08,536:INFO:Importing untrained model
2023-11-24 17:58:08,536:INFO:Decision Tree Classifier Imported successfully
2023-11-24 17:58:08,536:INFO:Starting cross validation
2023-11-24 17:58:08,537:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 17:58:09,300:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:09,302:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:09,304:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:09,318:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:09,324:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:09,325:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:09,327:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:09,327:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:09,331:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:09,344:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:09,345:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:09,346:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:09,348:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:09,348:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:09,350:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:09,355:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:09,358:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:09,360:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:09,369:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:09,369:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:09,370:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:09,371:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:09,371:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:09,371:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:09,373:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:09,373:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:09,373:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:09,373:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:09,375:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:09,375:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:09,379:INFO:Calculating mean and std
2023-11-24 17:58:09,379:INFO:Creating metrics dataframe
2023-11-24 17:58:09,381:INFO:Uploading results into container
2023-11-24 17:58:09,381:INFO:Uploading model into container now
2023-11-24 17:58:09,381:INFO:_master_model_container: 4
2023-11-24 17:58:09,381:INFO:_display_container: 2
2023-11-24 17:58:09,381:INFO:DecisionTreeClassifier(random_state=4312)
2023-11-24 17:58:09,381:INFO:create_model() successfully completed......................................
2023-11-24 17:58:09,469:INFO:SubProcess create_model() end ==================================
2023-11-24 17:58:09,469:INFO:Creating metrics dataframe
2023-11-24 17:58:09,471:INFO:Initializing SVM - Linear Kernel
2023-11-24 17:58:09,471:INFO:Total runtime is 0.170040233929952 minutes
2023-11-24 17:58:09,471:INFO:SubProcess create_model() called ==================================
2023-11-24 17:58:09,471:INFO:Initializing create_model()
2023-11-24 17:58:09,471:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x154503750>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x284bb8210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 17:58:09,471:INFO:Checking exceptions
2023-11-24 17:58:09,471:INFO:Importing libraries
2023-11-24 17:58:09,471:INFO:Copying training dataset
2023-11-24 17:58:09,474:INFO:Defining folds
2023-11-24 17:58:09,474:INFO:Declaring metric variables
2023-11-24 17:58:09,474:INFO:Importing untrained model
2023-11-24 17:58:09,474:INFO:SVM - Linear Kernel Imported successfully
2023-11-24 17:58:09,474:INFO:Starting cross validation
2023-11-24 17:58:09,475:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 17:58:10,908:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 17:58:10,910:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:10,912:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:10,914:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:58:10,915:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:10,924:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 17:58:10,925:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:10,927:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:10,930:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:10,959:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 17:58:10,960:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:10,962:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:10,965:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:58:10,966:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:10,971:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 17:58:10,972:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:10,974:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:10,976:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:10,992:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 17:58:10,993:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:10,994:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 17:58:10,995:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:10,995:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:10,996:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:58:10,997:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:10,998:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:10,999:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:58:11,000:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:11,000:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 17:58:11,001:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:11,003:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:11,005:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:58:11,006:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:11,016:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 17:58:11,017:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:11,019:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:11,022:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:11,029:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 17:58:11,030:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:11,032:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:11,033:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 17:58:11,033:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:58:11,034:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:11,034:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:11,036:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:11,037:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:58:11,038:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:11,042:INFO:Calculating mean and std
2023-11-24 17:58:11,043:INFO:Creating metrics dataframe
2023-11-24 17:58:11,044:INFO:Uploading results into container
2023-11-24 17:58:11,044:INFO:Uploading model into container now
2023-11-24 17:58:11,044:INFO:_master_model_container: 5
2023-11-24 17:58:11,044:INFO:_display_container: 2
2023-11-24 17:58:11,044:INFO:SGDClassifier(eta0=0.001, n_jobs=-1, random_state=4312)
2023-11-24 17:58:11,044:INFO:create_model() successfully completed......................................
2023-11-24 17:58:11,131:INFO:SubProcess create_model() end ==================================
2023-11-24 17:58:11,132:INFO:Creating metrics dataframe
2023-11-24 17:58:11,133:INFO:Initializing Ridge Classifier
2023-11-24 17:58:11,133:INFO:Total runtime is 0.19774445295333862 minutes
2023-11-24 17:58:11,133:INFO:SubProcess create_model() called ==================================
2023-11-24 17:58:11,133:INFO:Initializing create_model()
2023-11-24 17:58:11,133:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x154503750>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x284bb8210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 17:58:11,133:INFO:Checking exceptions
2023-11-24 17:58:11,133:INFO:Importing libraries
2023-11-24 17:58:11,134:INFO:Copying training dataset
2023-11-24 17:58:11,136:INFO:Defining folds
2023-11-24 17:58:11,136:INFO:Declaring metric variables
2023-11-24 17:58:11,136:INFO:Importing untrained model
2023-11-24 17:58:11,136:INFO:Ridge Classifier Imported successfully
2023-11-24 17:58:11,136:INFO:Starting cross validation
2023-11-24 17:58:11,137:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 17:58:11,756:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 17:58:11,757:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:11,760:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:11,761:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:58:11,762:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:11,790:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 17:58:11,791:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:11,792:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 17:58:11,793:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:11,795:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:11,796:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:11,796:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:58:11,797:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:11,798:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:58:11,799:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:11,816:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 17:58:11,817:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:11,819:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:11,820:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:58:11,821:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:11,831:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 17:58:11,832:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:11,832:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 17:58:11,833:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:11,834:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:11,835:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 17:58:11,836:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:11,836:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:58:11,836:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:11,837:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:11,837:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:58:11,838:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:11,838:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:11,840:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:58:11,841:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:11,842:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 17:58:11,842:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 17:58:11,843:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 17:58:11,843:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:11,843:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:11,844:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:11,845:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:11,845:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:11,846:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:11,846:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:58:11,847:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:58:11,847:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:58:11,847:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:11,848:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:11,848:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:11,851:INFO:Calculating mean and std
2023-11-24 17:58:11,852:INFO:Creating metrics dataframe
2023-11-24 17:58:11,853:INFO:Uploading results into container
2023-11-24 17:58:11,853:INFO:Uploading model into container now
2023-11-24 17:58:11,853:INFO:_master_model_container: 6
2023-11-24 17:58:11,853:INFO:_display_container: 2
2023-11-24 17:58:11,853:INFO:RidgeClassifier(random_state=4312)
2023-11-24 17:58:11,853:INFO:create_model() successfully completed......................................
2023-11-24 17:58:11,939:INFO:SubProcess create_model() end ==================================
2023-11-24 17:58:11,939:INFO:Creating metrics dataframe
2023-11-24 17:58:11,940:INFO:Initializing Random Forest Classifier
2023-11-24 17:58:11,940:INFO:Total runtime is 0.21119409799575806 minutes
2023-11-24 17:58:11,940:INFO:SubProcess create_model() called ==================================
2023-11-24 17:58:11,940:INFO:Initializing create_model()
2023-11-24 17:58:11,940:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x154503750>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x284bb8210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 17:58:11,940:INFO:Checking exceptions
2023-11-24 17:58:11,940:INFO:Importing libraries
2023-11-24 17:58:11,940:INFO:Copying training dataset
2023-11-24 17:58:11,943:INFO:Defining folds
2023-11-24 17:58:11,943:INFO:Declaring metric variables
2023-11-24 17:58:11,943:INFO:Importing untrained model
2023-11-24 17:58:11,943:INFO:Random Forest Classifier Imported successfully
2023-11-24 17:58:11,943:INFO:Starting cross validation
2023-11-24 17:58:11,944:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 17:58:13,404:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:13,407:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:13,409:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:13,412:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:13,415:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:13,418:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:58:13,440:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:13,709:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:13,711:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:13,712:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:13,713:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:13,713:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:58:13,714:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:13,714:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:13,715:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:13,716:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:58:13,717:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:13,717:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:58:13,717:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:13,718:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:13,718:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:13,719:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:13,721:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:13,722:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:13,723:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:13,723:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:13,726:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:13,727:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:58:13,728:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:13,732:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:13,734:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:13,735:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:13,735:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:58:13,736:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:13,737:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:13,738:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:58:13,739:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:13,744:INFO:Calculating mean and std
2023-11-24 17:58:13,744:INFO:Creating metrics dataframe
2023-11-24 17:58:13,745:INFO:Uploading results into container
2023-11-24 17:58:13,745:INFO:Uploading model into container now
2023-11-24 17:58:13,745:INFO:_master_model_container: 7
2023-11-24 17:58:13,745:INFO:_display_container: 2
2023-11-24 17:58:13,746:INFO:RandomForestClassifier(n_jobs=-1, random_state=4312)
2023-11-24 17:58:13,746:INFO:create_model() successfully completed......................................
2023-11-24 17:58:13,834:INFO:SubProcess create_model() end ==================================
2023-11-24 17:58:13,834:INFO:Creating metrics dataframe
2023-11-24 17:58:13,836:INFO:Initializing Quadratic Discriminant Analysis
2023-11-24 17:58:13,836:INFO:Total runtime is 0.24279009898503623 minutes
2023-11-24 17:58:13,836:INFO:SubProcess create_model() called ==================================
2023-11-24 17:58:13,836:INFO:Initializing create_model()
2023-11-24 17:58:13,836:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x154503750>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x284bb8210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 17:58:13,836:INFO:Checking exceptions
2023-11-24 17:58:13,836:INFO:Importing libraries
2023-11-24 17:58:13,836:INFO:Copying training dataset
2023-11-24 17:58:13,838:INFO:Defining folds
2023-11-24 17:58:13,838:INFO:Declaring metric variables
2023-11-24 17:58:13,838:INFO:Importing untrained model
2023-11-24 17:58:13,839:INFO:Quadratic Discriminant Analysis Imported successfully
2023-11-24 17:58:13,839:INFO:Starting cross validation
2023-11-24 17:58:13,840:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 17:58:14,353:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 17:58:14,360:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 17:58:14,387:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 17:58:14,418:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 17:58:14,437:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 17:58:14,471:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 17:58:14,473:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 17:58:14,479:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 17:58:14,509:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 17:58:14,514:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-11-24 17:58:14,667:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:14,669:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:14,672:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:14,672:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:14,674:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:14,676:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:58:14,677:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:14,692:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:14,695:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:14,696:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:58:14,697:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:14,710:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:14,713:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:14,714:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:58:14,715:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:14,720:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:14,723:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:14,724:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:58:14,725:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:14,730:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:14,730:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:14,732:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:14,732:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:14,733:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:58:14,733:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:58:14,734:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:14,734:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:14,739:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:14,741:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:14,742:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:58:14,743:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:14,743:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:14,746:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:14,747:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:58:14,748:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:14,748:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:14,750:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:14,753:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:14,757:INFO:Calculating mean and std
2023-11-24 17:58:14,757:INFO:Creating metrics dataframe
2023-11-24 17:58:14,759:INFO:Uploading results into container
2023-11-24 17:58:14,759:INFO:Uploading model into container now
2023-11-24 17:58:14,759:INFO:_master_model_container: 8
2023-11-24 17:58:14,759:INFO:_display_container: 2
2023-11-24 17:58:14,759:INFO:QuadraticDiscriminantAnalysis()
2023-11-24 17:58:14,759:INFO:create_model() successfully completed......................................
2023-11-24 17:58:14,848:INFO:SubProcess create_model() end ==================================
2023-11-24 17:58:14,848:INFO:Creating metrics dataframe
2023-11-24 17:58:14,850:INFO:Initializing Ada Boost Classifier
2023-11-24 17:58:14,850:INFO:Total runtime is 0.25968634684880576 minutes
2023-11-24 17:58:14,850:INFO:SubProcess create_model() called ==================================
2023-11-24 17:58:14,850:INFO:Initializing create_model()
2023-11-24 17:58:14,850:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x154503750>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x284bb8210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 17:58:14,850:INFO:Checking exceptions
2023-11-24 17:58:14,850:INFO:Importing libraries
2023-11-24 17:58:14,850:INFO:Copying training dataset
2023-11-24 17:58:14,852:INFO:Defining folds
2023-11-24 17:58:14,852:INFO:Declaring metric variables
2023-11-24 17:58:14,852:INFO:Importing untrained model
2023-11-24 17:58:14,852:INFO:Ada Boost Classifier Imported successfully
2023-11-24 17:58:14,852:INFO:Starting cross validation
2023-11-24 17:58:14,853:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 17:58:16,088:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:16,091:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:16,094:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:16,172:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:16,181:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:16,183:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:16,187:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:16,187:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:16,190:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:16,196:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:16,198:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:16,200:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:16,210:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:16,212:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:16,214:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:16,218:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:16,220:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:16,223:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:16,226:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:16,229:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:16,231:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:16,231:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:16,234:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:16,236:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:16,237:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:16,239:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:16,241:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:16,249:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:16,251:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:16,253:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:16,257:INFO:Calculating mean and std
2023-11-24 17:58:16,257:INFO:Creating metrics dataframe
2023-11-24 17:58:16,258:INFO:Uploading results into container
2023-11-24 17:58:16,258:INFO:Uploading model into container now
2023-11-24 17:58:16,259:INFO:_master_model_container: 9
2023-11-24 17:58:16,259:INFO:_display_container: 2
2023-11-24 17:58:16,259:INFO:AdaBoostClassifier(random_state=4312)
2023-11-24 17:58:16,259:INFO:create_model() successfully completed......................................
2023-11-24 17:58:16,344:INFO:SubProcess create_model() end ==================================
2023-11-24 17:58:16,344:INFO:Creating metrics dataframe
2023-11-24 17:58:16,346:INFO:Initializing Gradient Boosting Classifier
2023-11-24 17:58:16,346:INFO:Total runtime is 0.28462361494700117 minutes
2023-11-24 17:58:16,346:INFO:SubProcess create_model() called ==================================
2023-11-24 17:58:16,346:INFO:Initializing create_model()
2023-11-24 17:58:16,346:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x154503750>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x284bb8210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 17:58:16,346:INFO:Checking exceptions
2023-11-24 17:58:16,346:INFO:Importing libraries
2023-11-24 17:58:16,346:INFO:Copying training dataset
2023-11-24 17:58:16,348:INFO:Defining folds
2023-11-24 17:58:16,349:INFO:Declaring metric variables
2023-11-24 17:58:16,349:INFO:Importing untrained model
2023-11-24 17:58:16,349:INFO:Gradient Boosting Classifier Imported successfully
2023-11-24 17:58:16,349:INFO:Starting cross validation
2023-11-24 17:58:16,350:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 17:58:23,997:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:24,000:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:24,003:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:24,147:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:24,149:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:24,151:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:24,158:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:24,160:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:24,162:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:24,184:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:24,186:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:24,189:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:24,190:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:24,192:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:24,194:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:24,194:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:24,197:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:24,199:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:24,264:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:24,267:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:24,268:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:24,269:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:24,269:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:24,270:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:24,271:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:24,272:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:24,274:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:24,291:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:24,293:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:24,295:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:24,300:INFO:Calculating mean and std
2023-11-24 17:58:24,300:INFO:Creating metrics dataframe
2023-11-24 17:58:24,302:INFO:Uploading results into container
2023-11-24 17:58:24,302:INFO:Uploading model into container now
2023-11-24 17:58:24,303:INFO:_master_model_container: 10
2023-11-24 17:58:24,303:INFO:_display_container: 2
2023-11-24 17:58:24,303:INFO:GradientBoostingClassifier(random_state=4312)
2023-11-24 17:58:24,303:INFO:create_model() successfully completed......................................
2023-11-24 17:58:24,392:INFO:SubProcess create_model() end ==================================
2023-11-24 17:58:24,392:INFO:Creating metrics dataframe
2023-11-24 17:58:24,394:INFO:Initializing Linear Discriminant Analysis
2023-11-24 17:58:24,394:INFO:Total runtime is 0.41875241597493496 minutes
2023-11-24 17:58:24,394:INFO:SubProcess create_model() called ==================================
2023-11-24 17:58:24,394:INFO:Initializing create_model()
2023-11-24 17:58:24,394:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x154503750>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x284bb8210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 17:58:24,394:INFO:Checking exceptions
2023-11-24 17:58:24,394:INFO:Importing libraries
2023-11-24 17:58:24,394:INFO:Copying training dataset
2023-11-24 17:58:24,396:INFO:Defining folds
2023-11-24 17:58:24,396:INFO:Declaring metric variables
2023-11-24 17:58:24,396:INFO:Importing untrained model
2023-11-24 17:58:24,397:INFO:Linear Discriminant Analysis Imported successfully
2023-11-24 17:58:24,397:INFO:Starting cross validation
2023-11-24 17:58:24,398:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 17:58:25,169:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:25,171:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:25,174:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:25,191:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:25,199:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:25,202:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:25,205:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:25,207:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:25,210:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:25,265:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:25,268:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:25,270:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:25,273:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:25,275:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:25,275:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:25,277:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:25,277:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:25,280:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:25,281:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:25,283:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:25,286:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:25,296:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:25,298:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:25,301:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:25,321:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:25,322:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:25,323:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:25,324:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:25,325:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:25,326:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:25,330:INFO:Calculating mean and std
2023-11-24 17:58:25,331:INFO:Creating metrics dataframe
2023-11-24 17:58:25,333:INFO:Uploading results into container
2023-11-24 17:58:25,333:INFO:Uploading model into container now
2023-11-24 17:58:25,333:INFO:_master_model_container: 11
2023-11-24 17:58:25,333:INFO:_display_container: 2
2023-11-24 17:58:25,334:INFO:LinearDiscriminantAnalysis()
2023-11-24 17:58:25,334:INFO:create_model() successfully completed......................................
2023-11-24 17:58:25,466:INFO:SubProcess create_model() end ==================================
2023-11-24 17:58:25,466:INFO:Creating metrics dataframe
2023-11-24 17:58:25,468:INFO:Initializing Extra Trees Classifier
2023-11-24 17:58:25,468:INFO:Total runtime is 0.43665596644083665 minutes
2023-11-24 17:58:25,468:INFO:SubProcess create_model() called ==================================
2023-11-24 17:58:25,468:INFO:Initializing create_model()
2023-11-24 17:58:25,468:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x154503750>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x284bb8210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 17:58:25,468:INFO:Checking exceptions
2023-11-24 17:58:25,468:INFO:Importing libraries
2023-11-24 17:58:25,468:INFO:Copying training dataset
2023-11-24 17:58:25,471:INFO:Defining folds
2023-11-24 17:58:25,471:INFO:Declaring metric variables
2023-11-24 17:58:25,471:INFO:Importing untrained model
2023-11-24 17:58:25,471:INFO:Extra Trees Classifier Imported successfully
2023-11-24 17:58:25,471:INFO:Starting cross validation
2023-11-24 17:58:25,472:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 17:58:27,190:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:27,193:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:27,194:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:58:27,195:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:27,305:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:27,307:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:27,308:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:58:27,309:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:27,607:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:27,610:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:27,611:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:58:27,612:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:27,690:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:27,693:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:27,693:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:27,694:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:58:27,695:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:27,696:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:27,698:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:58:27,700:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:27,702:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:27,703:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:27,704:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:27,705:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:27,705:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:27,706:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:27,706:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:27,707:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:27,707:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:58:27,708:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:27,708:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:58:27,708:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:27,709:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:27,709:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:58:27,710:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:27,712:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:27,714:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:27,716:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:27,720:INFO:Calculating mean and std
2023-11-24 17:58:27,721:INFO:Creating metrics dataframe
2023-11-24 17:58:27,723:INFO:Uploading results into container
2023-11-24 17:58:27,723:INFO:Uploading model into container now
2023-11-24 17:58:27,723:INFO:_master_model_container: 12
2023-11-24 17:58:27,723:INFO:_display_container: 2
2023-11-24 17:58:27,724:INFO:ExtraTreesClassifier(n_jobs=-1, random_state=4312)
2023-11-24 17:58:27,724:INFO:create_model() successfully completed......................................
2023-11-24 17:58:27,817:INFO:SubProcess create_model() end ==================================
2023-11-24 17:58:27,817:INFO:Creating metrics dataframe
2023-11-24 17:58:27,819:INFO:Initializing Extreme Gradient Boosting
2023-11-24 17:58:27,819:INFO:Total runtime is 0.47583824793497725 minutes
2023-11-24 17:58:27,819:INFO:SubProcess create_model() called ==================================
2023-11-24 17:58:27,819:INFO:Initializing create_model()
2023-11-24 17:58:27,819:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x154503750>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x284bb8210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 17:58:27,819:INFO:Checking exceptions
2023-11-24 17:58:27,819:INFO:Importing libraries
2023-11-24 17:58:27,819:INFO:Copying training dataset
2023-11-24 17:58:27,822:INFO:Defining folds
2023-11-24 17:58:27,822:INFO:Declaring metric variables
2023-11-24 17:58:27,822:INFO:Importing untrained model
2023-11-24 17:58:27,822:INFO:Extreme Gradient Boosting Imported successfully
2023-11-24 17:58:27,822:INFO:Starting cross validation
2023-11-24 17:58:27,823:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 17:58:43,371:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:43,374:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:43,376:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:44,373:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:44,376:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:44,378:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:44,627:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:44,630:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:44,632:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:44,634:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:44,637:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:44,639:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:44,646:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:44,649:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:44,651:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:44,678:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:44,681:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:44,683:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:44,692:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:44,695:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:44,697:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:44,730:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:44,732:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:44,735:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:44,793:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:44,795:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:44,797:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:44,797:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:44,800:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:44,802:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:44,807:INFO:Calculating mean and std
2023-11-24 17:58:44,807:INFO:Creating metrics dataframe
2023-11-24 17:58:44,809:INFO:Uploading results into container
2023-11-24 17:58:44,809:INFO:Uploading model into container now
2023-11-24 17:58:44,809:INFO:_master_model_container: 13
2023-11-24 17:58:44,809:INFO:_display_container: 2
2023-11-24 17:58:44,809:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              predictor=None, random_state=4312, ...)
2023-11-24 17:58:44,809:INFO:create_model() successfully completed......................................
2023-11-24 17:58:44,895:INFO:SubProcess create_model() end ==================================
2023-11-24 17:58:44,896:INFO:Creating metrics dataframe
2023-11-24 17:58:44,897:INFO:Initializing Light Gradient Boosting Machine
2023-11-24 17:58:44,897:INFO:Total runtime is 0.7604782819747925 minutes
2023-11-24 17:58:44,897:INFO:SubProcess create_model() called ==================================
2023-11-24 17:58:44,898:INFO:Initializing create_model()
2023-11-24 17:58:44,898:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x154503750>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x284bb8210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 17:58:44,898:INFO:Checking exceptions
2023-11-24 17:58:44,898:INFO:Importing libraries
2023-11-24 17:58:44,898:INFO:Copying training dataset
2023-11-24 17:58:44,900:INFO:Defining folds
2023-11-24 17:58:44,900:INFO:Declaring metric variables
2023-11-24 17:58:44,900:INFO:Importing untrained model
2023-11-24 17:58:44,900:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-24 17:58:44,900:INFO:Starting cross validation
2023-11-24 17:58:44,901:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 17:58:45,579:WARNING:create_model() for lightgbm raised an exception or returned all 0.0, trying without fit_kwargs:
2023-11-24 17:58:45,580:WARNING:Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/sklearn.py", line 1142, in fit
    super().fit(
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/sklearn.py", line 842, in fit
    self._Booster = train(
                    ^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/engine.py", line 255, in train
    booster = Booster(params=params, train_set=train_set)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 3200, in __init__
    train_set.construct()
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 2276, in construct
    self._lazy_init(data=self.data, label=self.label, reference=None,
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 1959, in _lazy_init
    return self.set_feature_name(feature_name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 2639, in set_feature_name
    _safe_call(_LIB.LGBM_DatasetSetFeatureNames(
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 242, in _safe_call
    raise LightGBMError(_LIB.LGBM_GetLastError().decode('utf-8'))
lightgbm.basic.LightGBMError: Do not support special JSON characters in feature name.


2023-11-24 17:58:45,580:INFO:Initializing create_model()
2023-11-24 17:58:45,580:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x154503750>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x284bb8210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 17:58:45,580:INFO:Checking exceptions
2023-11-24 17:58:45,580:INFO:Importing libraries
2023-11-24 17:58:45,580:INFO:Copying training dataset
2023-11-24 17:58:45,583:INFO:Defining folds
2023-11-24 17:58:45,583:INFO:Declaring metric variables
2023-11-24 17:58:45,583:INFO:Importing untrained model
2023-11-24 17:58:45,583:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-24 17:58:45,583:INFO:Starting cross validation
2023-11-24 17:58:45,584:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 17:58:46,267:ERROR:create_model() for lightgbm raised an exception or returned all 0.0:
2023-11-24 17:58:46,268:ERROR:Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/sklearn.py", line 1142, in fit
    super().fit(
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/sklearn.py", line 842, in fit
    self._Booster = train(
                    ^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/engine.py", line 255, in train
    booster = Booster(params=params, train_set=train_set)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 3200, in __init__
    train_set.construct()
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 2276, in construct
    self._lazy_init(data=self.data, label=self.label, reference=None,
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 1959, in _lazy_init
    return self.set_feature_name(feature_name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 2639, in set_feature_name
    _safe_call(_LIB.LGBM_DatasetSetFeatureNames(
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 242, in _safe_call
    raise LightGBMError(_LIB.LGBM_GetLastError().decode('utf-8'))
lightgbm.basic.LightGBMError: Do not support special JSON characters in feature name.


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/model_selection/_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 275, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/joblib/memory.py", line 349, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/pycaret/internal/pipeline.py", line 68, in _fit_one
    transformer.fit(*args, **fit_params)
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/sklearn.py", line 1142, in fit
    super().fit(
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/sklearn.py", line 842, in fit
    self._Booster = train(
                    ^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/engine.py", line 255, in train
    booster = Booster(params=params, train_set=train_set)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 3200, in __init__
    train_set.construct()
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 2276, in construct
    self._lazy_init(data=self.data, label=self.label, reference=None,
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 1959, in _lazy_init
    return self.set_feature_name(feature_name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 2639, in set_feature_name
    _safe_call(_LIB.LGBM_DatasetSetFeatureNames(
  File "/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/lightgbm/basic.py", line 242, in _safe_call
    raise LightGBMError(_LIB.LGBM_GetLastError().decode('utf-8'))
lightgbm.basic.LightGBMError: Do not support special JSON characters in feature name.


2023-11-24 17:58:46,268:INFO:Initializing Dummy Classifier
2023-11-24 17:58:46,268:INFO:Total runtime is 0.7833302974700928 minutes
2023-11-24 17:58:46,269:INFO:SubProcess create_model() called ==================================
2023-11-24 17:58:46,269:INFO:Initializing create_model()
2023-11-24 17:58:46,269:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x154503750>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x284bb8210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 17:58:46,269:INFO:Checking exceptions
2023-11-24 17:58:46,269:INFO:Importing libraries
2023-11-24 17:58:46,269:INFO:Copying training dataset
2023-11-24 17:58:46,271:INFO:Defining folds
2023-11-24 17:58:46,271:INFO:Declaring metric variables
2023-11-24 17:58:46,271:INFO:Importing untrained model
2023-11-24 17:58:46,272:INFO:Dummy Classifier Imported successfully
2023-11-24 17:58:46,272:INFO:Starting cross validation
2023-11-24 17:58:46,273:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 17:58:46,870:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:46,874:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:46,876:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:58:46,877:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:46,910:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:46,913:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:46,914:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:58:46,915:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:46,920:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:46,922:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:46,924:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:58:46,925:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:46,943:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:46,945:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:46,947:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:58:46,947:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:46,958:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:46,960:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:46,961:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:46,961:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:58:46,962:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:46,963:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:46,964:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:58:46,965:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:46,965:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:46,966:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:46,966:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:46,967:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:46,968:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:58:46,968:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:46,969:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:46,969:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:46,970:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:58:46,970:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:58:46,971:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:46,971:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:46,971:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:46,973:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:46,974:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 17:58:46,975:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Slight Injury') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 17:58:46,980:INFO:Calculating mean and std
2023-11-24 17:58:46,980:INFO:Creating metrics dataframe
2023-11-24 17:58:46,981:INFO:Uploading results into container
2023-11-24 17:58:46,981:INFO:Uploading model into container now
2023-11-24 17:58:46,981:INFO:_master_model_container: 14
2023-11-24 17:58:46,981:INFO:_display_container: 2
2023-11-24 17:58:46,982:INFO:DummyClassifier(random_state=4312)
2023-11-24 17:58:46,982:INFO:create_model() successfully completed......................................
2023-11-24 17:58:47,069:INFO:SubProcess create_model() end ==================================
2023-11-24 17:58:47,069:INFO:Creating metrics dataframe
2023-11-24 17:58:47,072:INFO:Initializing create_model()
2023-11-24 17:58:47,072:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x154503750>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              predictor=None, random_state=4312, ...), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 17:58:47,072:INFO:Checking exceptions
2023-11-24 17:58:47,072:INFO:Importing libraries
2023-11-24 17:58:47,072:INFO:Copying training dataset
2023-11-24 17:58:47,075:INFO:Defining folds
2023-11-24 17:58:47,075:INFO:Declaring metric variables
2023-11-24 17:58:47,075:INFO:Importing untrained model
2023-11-24 17:58:47,075:INFO:Declaring custom model
2023-11-24 17:58:47,075:INFO:Extreme Gradient Boosting Imported successfully
2023-11-24 17:58:47,076:INFO:Cross validation set to False
2023-11-24 17:58:47,076:INFO:Fitting Model
2023-11-24 17:58:49,662:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='multi:softprob', predictor=None, ...)
2023-11-24 17:58:49,662:INFO:create_model() successfully completed......................................
2023-11-24 17:58:49,754:INFO:_master_model_container: 14
2023-11-24 17:58:49,754:INFO:_display_container: 2
2023-11-24 17:58:49,755:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='multi:softprob', predictor=None, ...)
2023-11-24 17:58:49,755:INFO:compare_models() successfully completed......................................
2023-11-24 17:58:49,761:INFO:Initializing save_model()
2023-11-24 17:58:49,761:INFO:save_model(model=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='multi:softprob', predictor=None, ...), model_name=best_model, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/46/tcczvndd7xj_pqs5r176bl600000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Number_of_vehicles_involved',
                                             'Number_of_casualties'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrappe...
                                                                    'Vehicle_movement',
                                                                    'Casualty_class',
                                                                    'Sex_of_casualty',
                                                                    'Age_band_of_casualty',
                                                                    'Casualty_severity',
                                                                    'Work_of_casuality',
                                                                    'Fitness_of_casuality',
                                                                    'Pedestrian_movement',
                                                                    'Cause_of_accident'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['Time'],
                                    transformer=TargetEncoder(cols=['Time'],
                                                              handle_missing='return_nan')))]), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-11-24 17:58:49,761:INFO:Adding model into prep_pipe
2023-11-24 17:58:49,776:INFO:best_model.pkl saved in current working directory
2023-11-24 17:58:49,781:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Number_of_vehicles_involved',
                                             'Number_of_casualties'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Time', 'Day_of_week',
                                             'Age_band_of_driver',
                                             'S...
                               grow_policy=None, importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, n_estimators=100,
                               n_jobs=-1, num_parallel_tree=None,
                               objective='multi:softprob', predictor=None, ...))])
2023-11-24 17:58:49,781:INFO:save_model() successfully completed......................................
2023-11-24 18:10:00,438:INFO:PyCaret RegressionExperiment
2023-11-24 18:10:00,438:INFO:Logging name: reg-default-name
2023-11-24 18:10:00,438:INFO:ML Usecase: MLUsecase.REGRESSION
2023-11-24 18:10:00,438:INFO:version 3.2.0
2023-11-24 18:10:00,438:INFO:Initializing setup()
2023-11-24 18:10:00,438:INFO:self.USI: e58c
2023-11-24 18:10:00,438:INFO:self._variable_keys: {'_available_plots', 'fold_shuffle_param', 'exp_id', 'y_test', 'y_train', 'n_jobs_param', 'memory', 'log_plots_param', 'html_param', 'gpu_param', '_ml_usecase', 'idx', 'pipeline', 'seed', 'X_test', 'transform_target_param', 'logging_param', 'data', 'fold_generator', 'exp_name_log', 'USI', 'X', 'fold_groups_param', 'X_train', 'y', 'gpu_n_jobs_param', 'target_param'}
2023-11-24 18:10:00,438:INFO:Checking environment
2023-11-24 18:10:00,438:INFO:python_version: 3.11.5
2023-11-24 18:10:00,438:INFO:python_build: ('main', 'Sep 11 2023 08:31:25')
2023-11-24 18:10:00,438:INFO:machine: arm64
2023-11-24 18:10:00,438:INFO:platform: macOS-14.0-arm64-arm-64bit
2023-11-24 18:10:00,438:INFO:Memory: svmem(total=17179869184, available=5315051520, percent=69.1, used=7431995392, free=175587328, active=5146689536, inactive=5130649600, wired=2285305856)
2023-11-24 18:10:00,438:INFO:Physical Core: 10
2023-11-24 18:10:00,438:INFO:Logical Core: 10
2023-11-24 18:10:00,438:INFO:Checking libraries
2023-11-24 18:10:00,438:INFO:System:
2023-11-24 18:10:00,438:INFO:    python: 3.11.5 (main, Sep 11 2023, 08:31:25) [Clang 14.0.6 ]
2023-11-24 18:10:00,438:INFO:executable: /Users/saiakhil/anaconda3/envs/mlauto/bin/python
2023-11-24 18:10:00,438:INFO:   machine: macOS-14.0-arm64-arm-64bit
2023-11-24 18:10:00,438:INFO:PyCaret required dependencies:
2023-11-24 18:10:00,438:INFO:                 pip: 23.3.1
2023-11-24 18:10:00,438:INFO:          setuptools: 68.0.0
2023-11-24 18:10:00,438:INFO:             pycaret: 3.2.0
2023-11-24 18:10:00,438:INFO:             IPython: 8.15.0
2023-11-24 18:10:00,439:INFO:          ipywidgets: 8.1.1
2023-11-24 18:10:00,439:INFO:                tqdm: 4.66.1
2023-11-24 18:10:00,439:INFO:               numpy: 1.25.2
2023-11-24 18:10:00,439:INFO:              pandas: 1.5.3
2023-11-24 18:10:00,439:INFO:              jinja2: 3.1.2
2023-11-24 18:10:00,439:INFO:               scipy: 1.11.3
2023-11-24 18:10:00,439:INFO:              joblib: 1.3.2
2023-11-24 18:10:00,439:INFO:             sklearn: 1.2.2
2023-11-24 18:10:00,439:INFO:                pyod: 1.1.2
2023-11-24 18:10:00,439:INFO:            imblearn: 0.11.0
2023-11-24 18:10:00,439:INFO:   category_encoders: 2.6.3
2023-11-24 18:10:00,439:INFO:            lightgbm: 4.1.0
2023-11-24 18:10:00,439:INFO:               numba: 0.58.1
2023-11-24 18:10:00,439:INFO:            requests: 2.31.0
2023-11-24 18:10:00,439:INFO:          matplotlib: 3.6.0
2023-11-24 18:10:00,439:INFO:          scikitplot: 0.3.7
2023-11-24 18:10:00,439:INFO:         yellowbrick: 1.5
2023-11-24 18:10:00,439:INFO:              plotly: 5.18.0
2023-11-24 18:10:00,439:INFO:    plotly-resampler: Not installed
2023-11-24 18:10:00,439:INFO:             kaleido: 0.2.1
2023-11-24 18:10:00,439:INFO:           schemdraw: 0.15
2023-11-24 18:10:00,439:INFO:         statsmodels: 0.14.0
2023-11-24 18:10:00,439:INFO:              sktime: 0.21.1
2023-11-24 18:10:00,439:INFO:               tbats: 1.1.3
2023-11-24 18:10:00,439:INFO:            pmdarima: 2.0.4
2023-11-24 18:10:00,439:INFO:              psutil: 5.9.6
2023-11-24 18:10:00,439:INFO:          markupsafe: 2.1.3
2023-11-24 18:10:00,439:INFO:             pickle5: Not installed
2023-11-24 18:10:00,439:INFO:         cloudpickle: 3.0.0
2023-11-24 18:10:00,439:INFO:         deprecation: 2.1.0
2023-11-24 18:10:00,439:INFO:              xxhash: 3.4.1
2023-11-24 18:10:00,439:INFO:           wurlitzer: 3.0.3
2023-11-24 18:10:00,439:INFO:PyCaret optional dependencies:
2023-11-24 18:10:00,439:INFO:                shap: Not installed
2023-11-24 18:10:00,439:INFO:           interpret: Not installed
2023-11-24 18:10:00,439:INFO:                umap: Not installed
2023-11-24 18:10:00,439:INFO:     ydata_profiling: 4.6.2
2023-11-24 18:10:00,439:INFO:  explainerdashboard: Not installed
2023-11-24 18:10:00,439:INFO:             autoviz: Not installed
2023-11-24 18:10:00,439:INFO:           fairlearn: Not installed
2023-11-24 18:10:00,439:INFO:          deepchecks: Not installed
2023-11-24 18:10:00,439:INFO:             xgboost: 1.7.3
2023-11-24 18:10:00,439:INFO:            catboost: Not installed
2023-11-24 18:10:00,439:INFO:              kmodes: Not installed
2023-11-24 18:10:00,439:INFO:             mlxtend: Not installed
2023-11-24 18:10:00,439:INFO:       statsforecast: Not installed
2023-11-24 18:10:00,439:INFO:        tune_sklearn: Not installed
2023-11-24 18:10:00,439:INFO:                 ray: Not installed
2023-11-24 18:10:00,439:INFO:            hyperopt: Not installed
2023-11-24 18:10:00,439:INFO:              optuna: Not installed
2023-11-24 18:10:00,439:INFO:               skopt: Not installed
2023-11-24 18:10:00,439:INFO:              mlflow: Not installed
2023-11-24 18:10:00,439:INFO:              gradio: Not installed
2023-11-24 18:10:00,439:INFO:             fastapi: Not installed
2023-11-24 18:10:00,439:INFO:             uvicorn: Not installed
2023-11-24 18:10:00,439:INFO:              m2cgen: Not installed
2023-11-24 18:10:00,439:INFO:           evidently: Not installed
2023-11-24 18:10:00,439:INFO:               fugue: Not installed
2023-11-24 18:10:00,439:INFO:           streamlit: 1.28.2
2023-11-24 18:10:00,439:INFO:             prophet: Not installed
2023-11-24 18:10:00,439:INFO:None
2023-11-24 18:10:00,439:INFO:Set up data.
2023-11-24 18:10:00,442:INFO:Set up folding strategy.
2023-11-24 18:10:00,442:INFO:Set up train/test split.
2023-11-24 18:10:00,444:INFO:Set up index.
2023-11-24 18:10:00,444:INFO:Assigning column types.
2023-11-24 18:10:00,445:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-24 18:10:00,445:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-11-24 18:10:00,447:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-24 18:10:00,449:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-24 18:10:00,471:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 18:10:00,488:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 18:10:00,489:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 18:10:00,490:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 18:10:00,490:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-11-24 18:10:00,492:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-24 18:10:00,494:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-24 18:10:00,516:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 18:10:00,533:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 18:10:00,533:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 18:10:00,534:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 18:10:00,534:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-11-24 18:10:00,536:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-24 18:10:00,538:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-24 18:10:00,559:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 18:10:00,577:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 18:10:00,577:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 18:10:00,578:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 18:10:00,580:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-24 18:10:00,582:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-24 18:10:00,604:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 18:10:00,622:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 18:10:00,622:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 18:10:00,623:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 18:10:00,623:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-11-24 18:10:00,627:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-24 18:10:00,649:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 18:10:00,667:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 18:10:00,667:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 18:10:00,668:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 18:10:00,671:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-24 18:10:00,693:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 18:10:00,711:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 18:10:00,711:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 18:10:00,712:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 18:10:00,712:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-11-24 18:10:00,737:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 18:10:00,754:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 18:10:00,754:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 18:10:00,755:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 18:10:00,779:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 18:10:00,797:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 18:10:00,797:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 18:10:00,798:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 18:10:00,798:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-11-24 18:10:00,823:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 18:10:00,840:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 18:10:00,841:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 18:10:00,866:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 18:10:00,882:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 18:10:00,883:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 18:10:00,883:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-11-24 18:10:00,923:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 18:10:00,924:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 18:10:00,965:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 18:10:00,965:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 18:10:00,966:INFO:Preparing preprocessing pipeline...
2023-11-24 18:10:00,966:INFO:Set up simple imputation.
2023-11-24 18:10:00,966:INFO:Set up encoding of categorical features.
2023-11-24 18:10:00,982:INFO:Finished creating preprocessing pipeline.
2023-11-24 18:10:00,984:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/46/tcczvndd7xj_pqs5r176bl600000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['year', 'events', 'athletes',
                                             'age', 'height', 'weight',
                                             'prev_medals', 'prev_3_medals'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['team', 'country'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['team', 'country'],
                                    transformer=TargetEncoder(cols=['team',
                                                                    'country'],
                                                              handle_missing='return_nan')))])
2023-11-24 18:10:00,984:INFO:Creating final display dataframe.
2023-11-24 18:10:01,041:INFO:Setup _display_container:                     Description             Value
0                    Session id              6125
1                        Target            medals
2                   Target type        Regression
3           Original data shape        (2144, 11)
4        Transformed data shape        (2144, 11)
5   Transformed train set shape        (1500, 11)
6    Transformed test set shape         (644, 11)
7              Numeric features                 8
8          Categorical features                 2
9      Rows with missing values              6.1%
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator             KFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  reg-default-name
22                          USI              e58c
2023-11-24 18:10:01,082:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 18:10:01,083:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 18:10:01,124:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 18:10:01,125:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 18:10:01,125:INFO:setup() successfully completed in 0.69s...............
2023-11-24 18:10:04,402:INFO:Initializing compare_models()
2023-11-24 18:10:04,402:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x135b68f50>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x135b68f50>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2023-11-24 18:10:04,402:INFO:Checking exceptions
2023-11-24 18:10:04,403:INFO:Preparing display monitor
2023-11-24 18:10:04,405:INFO:Initializing Linear Regression
2023-11-24 18:10:04,405:INFO:Total runtime is 3.1987826029459634e-06 minutes
2023-11-24 18:10:04,405:INFO:SubProcess create_model() called ==================================
2023-11-24 18:10:04,405:INFO:Initializing create_model()
2023-11-24 18:10:04,405:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x135b68f50>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28efd6950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 18:10:04,405:INFO:Checking exceptions
2023-11-24 18:10:04,405:INFO:Importing libraries
2023-11-24 18:10:04,405:INFO:Copying training dataset
2023-11-24 18:10:04,407:INFO:Defining folds
2023-11-24 18:10:04,407:INFO:Declaring metric variables
2023-11-24 18:10:04,407:INFO:Importing untrained model
2023-11-24 18:10:04,408:INFO:Linear Regression Imported successfully
2023-11-24 18:10:04,408:INFO:Starting cross validation
2023-11-24 18:10:04,408:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 18:10:06,122:INFO:Calculating mean and std
2023-11-24 18:10:06,123:INFO:Creating metrics dataframe
2023-11-24 18:10:06,127:INFO:Uploading results into container
2023-11-24 18:10:06,128:INFO:Uploading model into container now
2023-11-24 18:10:06,128:INFO:_master_model_container: 1
2023-11-24 18:10:06,128:INFO:_display_container: 2
2023-11-24 18:10:06,129:INFO:LinearRegression(n_jobs=-1)
2023-11-24 18:10:06,129:INFO:create_model() successfully completed......................................
2023-11-24 18:10:06,262:INFO:SubProcess create_model() end ==================================
2023-11-24 18:10:06,263:INFO:Creating metrics dataframe
2023-11-24 18:10:06,264:INFO:Initializing Lasso Regression
2023-11-24 18:10:06,264:INFO:Total runtime is 0.030995468298594158 minutes
2023-11-24 18:10:06,264:INFO:SubProcess create_model() called ==================================
2023-11-24 18:10:06,265:INFO:Initializing create_model()
2023-11-24 18:10:06,265:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x135b68f50>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28efd6950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 18:10:06,265:INFO:Checking exceptions
2023-11-24 18:10:06,265:INFO:Importing libraries
2023-11-24 18:10:06,265:INFO:Copying training dataset
2023-11-24 18:10:06,266:INFO:Defining folds
2023-11-24 18:10:06,266:INFO:Declaring metric variables
2023-11-24 18:10:06,266:INFO:Importing untrained model
2023-11-24 18:10:06,266:INFO:Lasso Regression Imported successfully
2023-11-24 18:10:06,266:INFO:Starting cross validation
2023-11-24 18:10:06,266:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 18:10:06,326:INFO:Calculating mean and std
2023-11-24 18:10:06,326:INFO:Creating metrics dataframe
2023-11-24 18:10:06,327:INFO:Uploading results into container
2023-11-24 18:10:06,327:INFO:Uploading model into container now
2023-11-24 18:10:06,327:INFO:_master_model_container: 2
2023-11-24 18:10:06,327:INFO:_display_container: 2
2023-11-24 18:10:06,328:INFO:Lasso(random_state=6125)
2023-11-24 18:10:06,328:INFO:create_model() successfully completed......................................
2023-11-24 18:10:06,420:INFO:SubProcess create_model() end ==================================
2023-11-24 18:10:06,420:INFO:Creating metrics dataframe
2023-11-24 18:10:06,422:INFO:Initializing Ridge Regression
2023-11-24 18:10:06,422:INFO:Total runtime is 0.03361638387044271 minutes
2023-11-24 18:10:06,422:INFO:SubProcess create_model() called ==================================
2023-11-24 18:10:06,422:INFO:Initializing create_model()
2023-11-24 18:10:06,422:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x135b68f50>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28efd6950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 18:10:06,422:INFO:Checking exceptions
2023-11-24 18:10:06,422:INFO:Importing libraries
2023-11-24 18:10:06,422:INFO:Copying training dataset
2023-11-24 18:10:06,423:INFO:Defining folds
2023-11-24 18:10:06,423:INFO:Declaring metric variables
2023-11-24 18:10:06,423:INFO:Importing untrained model
2023-11-24 18:10:06,423:INFO:Ridge Regression Imported successfully
2023-11-24 18:10:06,423:INFO:Starting cross validation
2023-11-24 18:10:06,423:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 18:10:06,469:INFO:Calculating mean and std
2023-11-24 18:10:06,469:INFO:Creating metrics dataframe
2023-11-24 18:10:06,470:INFO:Uploading results into container
2023-11-24 18:10:06,470:INFO:Uploading model into container now
2023-11-24 18:10:06,471:INFO:_master_model_container: 3
2023-11-24 18:10:06,471:INFO:_display_container: 2
2023-11-24 18:10:06,471:INFO:Ridge(random_state=6125)
2023-11-24 18:10:06,471:INFO:create_model() successfully completed......................................
2023-11-24 18:10:06,556:INFO:SubProcess create_model() end ==================================
2023-11-24 18:10:06,556:INFO:Creating metrics dataframe
2023-11-24 18:10:06,557:INFO:Initializing Elastic Net
2023-11-24 18:10:06,558:INFO:Total runtime is 0.03588168223698934 minutes
2023-11-24 18:10:06,558:INFO:SubProcess create_model() called ==================================
2023-11-24 18:10:06,558:INFO:Initializing create_model()
2023-11-24 18:10:06,558:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x135b68f50>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28efd6950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 18:10:06,558:INFO:Checking exceptions
2023-11-24 18:10:06,558:INFO:Importing libraries
2023-11-24 18:10:06,558:INFO:Copying training dataset
2023-11-24 18:10:06,559:INFO:Defining folds
2023-11-24 18:10:06,559:INFO:Declaring metric variables
2023-11-24 18:10:06,559:INFO:Importing untrained model
2023-11-24 18:10:06,559:INFO:Elastic Net Imported successfully
2023-11-24 18:10:06,559:INFO:Starting cross validation
2023-11-24 18:10:06,559:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 18:10:06,615:INFO:Calculating mean and std
2023-11-24 18:10:06,615:INFO:Creating metrics dataframe
2023-11-24 18:10:06,616:INFO:Uploading results into container
2023-11-24 18:10:06,617:INFO:Uploading model into container now
2023-11-24 18:10:06,617:INFO:_master_model_container: 4
2023-11-24 18:10:06,617:INFO:_display_container: 2
2023-11-24 18:10:06,617:INFO:ElasticNet(random_state=6125)
2023-11-24 18:10:06,617:INFO:create_model() successfully completed......................................
2023-11-24 18:10:06,704:INFO:SubProcess create_model() end ==================================
2023-11-24 18:10:06,704:INFO:Creating metrics dataframe
2023-11-24 18:10:06,705:INFO:Initializing Least Angle Regression
2023-11-24 18:10:06,705:INFO:Total runtime is 0.03834748268127442 minutes
2023-11-24 18:10:06,706:INFO:SubProcess create_model() called ==================================
2023-11-24 18:10:06,706:INFO:Initializing create_model()
2023-11-24 18:10:06,706:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x135b68f50>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28efd6950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 18:10:06,706:INFO:Checking exceptions
2023-11-24 18:10:06,706:INFO:Importing libraries
2023-11-24 18:10:06,706:INFO:Copying training dataset
2023-11-24 18:10:06,707:INFO:Defining folds
2023-11-24 18:10:06,707:INFO:Declaring metric variables
2023-11-24 18:10:06,707:INFO:Importing untrained model
2023-11-24 18:10:06,707:INFO:Least Angle Regression Imported successfully
2023-11-24 18:10:06,707:INFO:Starting cross validation
2023-11-24 18:10:06,707:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 18:10:06,757:INFO:Calculating mean and std
2023-11-24 18:10:06,757:INFO:Creating metrics dataframe
2023-11-24 18:10:06,758:INFO:Uploading results into container
2023-11-24 18:10:06,758:INFO:Uploading model into container now
2023-11-24 18:10:06,758:INFO:_master_model_container: 5
2023-11-24 18:10:06,758:INFO:_display_container: 2
2023-11-24 18:10:06,758:INFO:Lars(random_state=6125)
2023-11-24 18:10:06,758:INFO:create_model() successfully completed......................................
2023-11-24 18:10:06,844:INFO:SubProcess create_model() end ==================================
2023-11-24 18:10:06,844:INFO:Creating metrics dataframe
2023-11-24 18:10:06,846:INFO:Initializing Lasso Least Angle Regression
2023-11-24 18:10:06,846:INFO:Total runtime is 0.04068801403045655 minutes
2023-11-24 18:10:06,846:INFO:SubProcess create_model() called ==================================
2023-11-24 18:10:06,846:INFO:Initializing create_model()
2023-11-24 18:10:06,846:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x135b68f50>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28efd6950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 18:10:06,846:INFO:Checking exceptions
2023-11-24 18:10:06,846:INFO:Importing libraries
2023-11-24 18:10:06,846:INFO:Copying training dataset
2023-11-24 18:10:06,847:INFO:Defining folds
2023-11-24 18:10:06,847:INFO:Declaring metric variables
2023-11-24 18:10:06,847:INFO:Importing untrained model
2023-11-24 18:10:06,847:INFO:Lasso Least Angle Regression Imported successfully
2023-11-24 18:10:06,847:INFO:Starting cross validation
2023-11-24 18:10:06,848:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 18:10:06,897:INFO:Calculating mean and std
2023-11-24 18:10:06,897:INFO:Creating metrics dataframe
2023-11-24 18:10:06,898:INFO:Uploading results into container
2023-11-24 18:10:06,898:INFO:Uploading model into container now
2023-11-24 18:10:06,898:INFO:_master_model_container: 6
2023-11-24 18:10:06,898:INFO:_display_container: 2
2023-11-24 18:10:06,898:INFO:LassoLars(random_state=6125)
2023-11-24 18:10:06,898:INFO:create_model() successfully completed......................................
2023-11-24 18:10:06,983:INFO:SubProcess create_model() end ==================================
2023-11-24 18:10:06,983:INFO:Creating metrics dataframe
2023-11-24 18:10:06,985:INFO:Initializing Orthogonal Matching Pursuit
2023-11-24 18:10:06,985:INFO:Total runtime is 0.04300034840901693 minutes
2023-11-24 18:10:06,985:INFO:SubProcess create_model() called ==================================
2023-11-24 18:10:06,985:INFO:Initializing create_model()
2023-11-24 18:10:06,985:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x135b68f50>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28efd6950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 18:10:06,985:INFO:Checking exceptions
2023-11-24 18:10:06,985:INFO:Importing libraries
2023-11-24 18:10:06,985:INFO:Copying training dataset
2023-11-24 18:10:06,986:INFO:Defining folds
2023-11-24 18:10:06,986:INFO:Declaring metric variables
2023-11-24 18:10:06,986:INFO:Importing untrained model
2023-11-24 18:10:06,986:INFO:Orthogonal Matching Pursuit Imported successfully
2023-11-24 18:10:06,986:INFO:Starting cross validation
2023-11-24 18:10:06,986:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 18:10:07,033:INFO:Calculating mean and std
2023-11-24 18:10:07,033:INFO:Creating metrics dataframe
2023-11-24 18:10:07,035:INFO:Uploading results into container
2023-11-24 18:10:07,037:INFO:Uploading model into container now
2023-11-24 18:10:07,037:INFO:_master_model_container: 7
2023-11-24 18:10:07,037:INFO:_display_container: 2
2023-11-24 18:10:07,037:INFO:OrthogonalMatchingPursuit()
2023-11-24 18:10:07,037:INFO:create_model() successfully completed......................................
2023-11-24 18:10:07,124:INFO:SubProcess create_model() end ==================================
2023-11-24 18:10:07,124:INFO:Creating metrics dataframe
2023-11-24 18:10:07,125:INFO:Initializing Bayesian Ridge
2023-11-24 18:10:07,125:INFO:Total runtime is 0.04534469842910767 minutes
2023-11-24 18:10:07,125:INFO:SubProcess create_model() called ==================================
2023-11-24 18:10:07,125:INFO:Initializing create_model()
2023-11-24 18:10:07,125:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x135b68f50>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28efd6950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 18:10:07,125:INFO:Checking exceptions
2023-11-24 18:10:07,125:INFO:Importing libraries
2023-11-24 18:10:07,125:INFO:Copying training dataset
2023-11-24 18:10:07,126:INFO:Defining folds
2023-11-24 18:10:07,127:INFO:Declaring metric variables
2023-11-24 18:10:07,127:INFO:Importing untrained model
2023-11-24 18:10:07,127:INFO:Bayesian Ridge Imported successfully
2023-11-24 18:10:07,127:INFO:Starting cross validation
2023-11-24 18:10:07,127:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 18:10:07,181:INFO:Calculating mean and std
2023-11-24 18:10:07,181:INFO:Creating metrics dataframe
2023-11-24 18:10:07,182:INFO:Uploading results into container
2023-11-24 18:10:07,182:INFO:Uploading model into container now
2023-11-24 18:10:07,182:INFO:_master_model_container: 8
2023-11-24 18:10:07,182:INFO:_display_container: 2
2023-11-24 18:10:07,182:INFO:BayesianRidge()
2023-11-24 18:10:07,182:INFO:create_model() successfully completed......................................
2023-11-24 18:10:07,268:INFO:SubProcess create_model() end ==================================
2023-11-24 18:10:07,268:INFO:Creating metrics dataframe
2023-11-24 18:10:07,269:INFO:Initializing Passive Aggressive Regressor
2023-11-24 18:10:07,269:INFO:Total runtime is 0.04774479866027832 minutes
2023-11-24 18:10:07,269:INFO:SubProcess create_model() called ==================================
2023-11-24 18:10:07,269:INFO:Initializing create_model()
2023-11-24 18:10:07,269:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x135b68f50>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28efd6950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 18:10:07,269:INFO:Checking exceptions
2023-11-24 18:10:07,269:INFO:Importing libraries
2023-11-24 18:10:07,269:INFO:Copying training dataset
2023-11-24 18:10:07,271:INFO:Defining folds
2023-11-24 18:10:07,271:INFO:Declaring metric variables
2023-11-24 18:10:07,271:INFO:Importing untrained model
2023-11-24 18:10:07,271:INFO:Passive Aggressive Regressor Imported successfully
2023-11-24 18:10:07,271:INFO:Starting cross validation
2023-11-24 18:10:07,271:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 18:10:07,323:INFO:Calculating mean and std
2023-11-24 18:10:07,323:INFO:Creating metrics dataframe
2023-11-24 18:10:07,324:INFO:Uploading results into container
2023-11-24 18:10:07,324:INFO:Uploading model into container now
2023-11-24 18:10:07,324:INFO:_master_model_container: 9
2023-11-24 18:10:07,324:INFO:_display_container: 2
2023-11-24 18:10:07,324:INFO:PassiveAggressiveRegressor(random_state=6125)
2023-11-24 18:10:07,324:INFO:create_model() successfully completed......................................
2023-11-24 18:10:07,426:INFO:SubProcess create_model() end ==================================
2023-11-24 18:10:07,426:INFO:Creating metrics dataframe
2023-11-24 18:10:07,428:INFO:Initializing Huber Regressor
2023-11-24 18:10:07,428:INFO:Total runtime is 0.05038307905197144 minutes
2023-11-24 18:10:07,428:INFO:SubProcess create_model() called ==================================
2023-11-24 18:10:07,428:INFO:Initializing create_model()
2023-11-24 18:10:07,428:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x135b68f50>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28efd6950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 18:10:07,428:INFO:Checking exceptions
2023-11-24 18:10:07,428:INFO:Importing libraries
2023-11-24 18:10:07,428:INFO:Copying training dataset
2023-11-24 18:10:07,429:INFO:Defining folds
2023-11-24 18:10:07,429:INFO:Declaring metric variables
2023-11-24 18:10:07,429:INFO:Importing untrained model
2023-11-24 18:10:07,429:INFO:Huber Regressor Imported successfully
2023-11-24 18:10:07,429:INFO:Starting cross validation
2023-11-24 18:10:07,429:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 18:10:07,463:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-24 18:10:07,471:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-24 18:10:07,473:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-24 18:10:07,474:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-24 18:10:07,480:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-24 18:10:07,493:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-24 18:10:07,495:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-24 18:10:07,497:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-24 18:10:07,503:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-24 18:10:07,504:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-24 18:10:07,511:INFO:Calculating mean and std
2023-11-24 18:10:07,511:INFO:Creating metrics dataframe
2023-11-24 18:10:07,512:INFO:Uploading results into container
2023-11-24 18:10:07,512:INFO:Uploading model into container now
2023-11-24 18:10:07,512:INFO:_master_model_container: 10
2023-11-24 18:10:07,512:INFO:_display_container: 2
2023-11-24 18:10:07,512:INFO:HuberRegressor()
2023-11-24 18:10:07,512:INFO:create_model() successfully completed......................................
2023-11-24 18:10:07,600:INFO:SubProcess create_model() end ==================================
2023-11-24 18:10:07,600:INFO:Creating metrics dataframe
2023-11-24 18:10:07,602:INFO:Initializing K Neighbors Regressor
2023-11-24 18:10:07,602:INFO:Total runtime is 0.053282181421915695 minutes
2023-11-24 18:10:07,602:INFO:SubProcess create_model() called ==================================
2023-11-24 18:10:07,602:INFO:Initializing create_model()
2023-11-24 18:10:07,602:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x135b68f50>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28efd6950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 18:10:07,602:INFO:Checking exceptions
2023-11-24 18:10:07,602:INFO:Importing libraries
2023-11-24 18:10:07,602:INFO:Copying training dataset
2023-11-24 18:10:07,603:INFO:Defining folds
2023-11-24 18:10:07,603:INFO:Declaring metric variables
2023-11-24 18:10:07,603:INFO:Importing untrained model
2023-11-24 18:10:07,603:INFO:K Neighbors Regressor Imported successfully
2023-11-24 18:10:07,603:INFO:Starting cross validation
2023-11-24 18:10:07,603:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 18:10:07,658:INFO:Calculating mean and std
2023-11-24 18:10:07,658:INFO:Creating metrics dataframe
2023-11-24 18:10:07,659:INFO:Uploading results into container
2023-11-24 18:10:07,659:INFO:Uploading model into container now
2023-11-24 18:10:07,659:INFO:_master_model_container: 11
2023-11-24 18:10:07,659:INFO:_display_container: 2
2023-11-24 18:10:07,659:INFO:KNeighborsRegressor(n_jobs=-1)
2023-11-24 18:10:07,659:INFO:create_model() successfully completed......................................
2023-11-24 18:10:07,744:INFO:SubProcess create_model() end ==================================
2023-11-24 18:10:07,745:INFO:Creating metrics dataframe
2023-11-24 18:10:07,746:INFO:Initializing Decision Tree Regressor
2023-11-24 18:10:07,746:INFO:Total runtime is 0.055692263444264735 minutes
2023-11-24 18:10:07,746:INFO:SubProcess create_model() called ==================================
2023-11-24 18:10:07,746:INFO:Initializing create_model()
2023-11-24 18:10:07,746:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x135b68f50>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28efd6950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 18:10:07,746:INFO:Checking exceptions
2023-11-24 18:10:07,746:INFO:Importing libraries
2023-11-24 18:10:07,746:INFO:Copying training dataset
2023-11-24 18:10:07,747:INFO:Defining folds
2023-11-24 18:10:07,747:INFO:Declaring metric variables
2023-11-24 18:10:07,747:INFO:Importing untrained model
2023-11-24 18:10:07,748:INFO:Decision Tree Regressor Imported successfully
2023-11-24 18:10:07,748:INFO:Starting cross validation
2023-11-24 18:10:07,748:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 18:10:07,806:INFO:Calculating mean and std
2023-11-24 18:10:07,807:INFO:Creating metrics dataframe
2023-11-24 18:10:07,808:INFO:Uploading results into container
2023-11-24 18:10:07,808:INFO:Uploading model into container now
2023-11-24 18:10:07,808:INFO:_master_model_container: 12
2023-11-24 18:10:07,808:INFO:_display_container: 2
2023-11-24 18:10:07,808:INFO:DecisionTreeRegressor(random_state=6125)
2023-11-24 18:10:07,808:INFO:create_model() successfully completed......................................
2023-11-24 18:10:07,894:INFO:SubProcess create_model() end ==================================
2023-11-24 18:10:07,894:INFO:Creating metrics dataframe
2023-11-24 18:10:07,896:INFO:Initializing Random Forest Regressor
2023-11-24 18:10:07,896:INFO:Total runtime is 0.058184846242268884 minutes
2023-11-24 18:10:07,896:INFO:SubProcess create_model() called ==================================
2023-11-24 18:10:07,896:INFO:Initializing create_model()
2023-11-24 18:10:07,896:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x135b68f50>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28efd6950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 18:10:07,896:INFO:Checking exceptions
2023-11-24 18:10:07,896:INFO:Importing libraries
2023-11-24 18:10:07,896:INFO:Copying training dataset
2023-11-24 18:10:07,897:INFO:Defining folds
2023-11-24 18:10:07,897:INFO:Declaring metric variables
2023-11-24 18:10:07,897:INFO:Importing untrained model
2023-11-24 18:10:07,897:INFO:Random Forest Regressor Imported successfully
2023-11-24 18:10:07,897:INFO:Starting cross validation
2023-11-24 18:10:07,898:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 18:10:08,444:INFO:Calculating mean and std
2023-11-24 18:10:08,444:INFO:Creating metrics dataframe
2023-11-24 18:10:08,445:INFO:Uploading results into container
2023-11-24 18:10:08,445:INFO:Uploading model into container now
2023-11-24 18:10:08,446:INFO:_master_model_container: 13
2023-11-24 18:10:08,446:INFO:_display_container: 2
2023-11-24 18:10:08,446:INFO:RandomForestRegressor(n_jobs=-1, random_state=6125)
2023-11-24 18:10:08,446:INFO:create_model() successfully completed......................................
2023-11-24 18:10:08,532:INFO:SubProcess create_model() end ==================================
2023-11-24 18:10:08,532:INFO:Creating metrics dataframe
2023-11-24 18:10:08,534:INFO:Initializing Extra Trees Regressor
2023-11-24 18:10:08,534:INFO:Total runtime is 0.06881570021311442 minutes
2023-11-24 18:10:08,534:INFO:SubProcess create_model() called ==================================
2023-11-24 18:10:08,534:INFO:Initializing create_model()
2023-11-24 18:10:08,534:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x135b68f50>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28efd6950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 18:10:08,534:INFO:Checking exceptions
2023-11-24 18:10:08,534:INFO:Importing libraries
2023-11-24 18:10:08,534:INFO:Copying training dataset
2023-11-24 18:10:08,535:INFO:Defining folds
2023-11-24 18:10:08,535:INFO:Declaring metric variables
2023-11-24 18:10:08,535:INFO:Importing untrained model
2023-11-24 18:10:08,535:INFO:Extra Trees Regressor Imported successfully
2023-11-24 18:10:08,535:INFO:Starting cross validation
2023-11-24 18:10:08,535:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 18:10:08,842:INFO:Calculating mean and std
2023-11-24 18:10:08,842:INFO:Creating metrics dataframe
2023-11-24 18:10:08,843:INFO:Uploading results into container
2023-11-24 18:10:08,843:INFO:Uploading model into container now
2023-11-24 18:10:08,843:INFO:_master_model_container: 14
2023-11-24 18:10:08,843:INFO:_display_container: 2
2023-11-24 18:10:08,844:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=6125)
2023-11-24 18:10:08,844:INFO:create_model() successfully completed......................................
2023-11-24 18:10:08,929:INFO:SubProcess create_model() end ==================================
2023-11-24 18:10:08,929:INFO:Creating metrics dataframe
2023-11-24 18:10:08,930:INFO:Initializing AdaBoost Regressor
2023-11-24 18:10:08,930:INFO:Total runtime is 0.07543138265609742 minutes
2023-11-24 18:10:08,931:INFO:SubProcess create_model() called ==================================
2023-11-24 18:10:08,931:INFO:Initializing create_model()
2023-11-24 18:10:08,931:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x135b68f50>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28efd6950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 18:10:08,931:INFO:Checking exceptions
2023-11-24 18:10:08,931:INFO:Importing libraries
2023-11-24 18:10:08,931:INFO:Copying training dataset
2023-11-24 18:10:08,932:INFO:Defining folds
2023-11-24 18:10:08,932:INFO:Declaring metric variables
2023-11-24 18:10:08,932:INFO:Importing untrained model
2023-11-24 18:10:08,932:INFO:AdaBoost Regressor Imported successfully
2023-11-24 18:10:08,932:INFO:Starting cross validation
2023-11-24 18:10:08,932:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 18:10:09,054:INFO:Calculating mean and std
2023-11-24 18:10:09,054:INFO:Creating metrics dataframe
2023-11-24 18:10:09,056:INFO:Uploading results into container
2023-11-24 18:10:09,056:INFO:Uploading model into container now
2023-11-24 18:10:09,056:INFO:_master_model_container: 15
2023-11-24 18:10:09,056:INFO:_display_container: 2
2023-11-24 18:10:09,056:INFO:AdaBoostRegressor(random_state=6125)
2023-11-24 18:10:09,056:INFO:create_model() successfully completed......................................
2023-11-24 18:10:09,144:INFO:SubProcess create_model() end ==================================
2023-11-24 18:10:09,144:INFO:Creating metrics dataframe
2023-11-24 18:10:09,145:INFO:Initializing Gradient Boosting Regressor
2023-11-24 18:10:09,145:INFO:Total runtime is 0.07901346683502197 minutes
2023-11-24 18:10:09,145:INFO:SubProcess create_model() called ==================================
2023-11-24 18:10:09,146:INFO:Initializing create_model()
2023-11-24 18:10:09,146:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x135b68f50>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28efd6950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 18:10:09,146:INFO:Checking exceptions
2023-11-24 18:10:09,146:INFO:Importing libraries
2023-11-24 18:10:09,146:INFO:Copying training dataset
2023-11-24 18:10:09,147:INFO:Defining folds
2023-11-24 18:10:09,147:INFO:Declaring metric variables
2023-11-24 18:10:09,147:INFO:Importing untrained model
2023-11-24 18:10:09,147:INFO:Gradient Boosting Regressor Imported successfully
2023-11-24 18:10:09,147:INFO:Starting cross validation
2023-11-24 18:10:09,148:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 18:10:09,378:INFO:Calculating mean and std
2023-11-24 18:10:09,379:INFO:Creating metrics dataframe
2023-11-24 18:10:09,380:INFO:Uploading results into container
2023-11-24 18:10:09,380:INFO:Uploading model into container now
2023-11-24 18:10:09,380:INFO:_master_model_container: 16
2023-11-24 18:10:09,380:INFO:_display_container: 2
2023-11-24 18:10:09,380:INFO:GradientBoostingRegressor(random_state=6125)
2023-11-24 18:10:09,380:INFO:create_model() successfully completed......................................
2023-11-24 18:10:09,471:INFO:SubProcess create_model() end ==================================
2023-11-24 18:10:09,471:INFO:Creating metrics dataframe
2023-11-24 18:10:09,473:INFO:Initializing Extreme Gradient Boosting
2023-11-24 18:10:09,473:INFO:Total runtime is 0.08447041511535644 minutes
2023-11-24 18:10:09,473:INFO:SubProcess create_model() called ==================================
2023-11-24 18:10:09,473:INFO:Initializing create_model()
2023-11-24 18:10:09,473:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x135b68f50>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28efd6950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 18:10:09,473:INFO:Checking exceptions
2023-11-24 18:10:09,473:INFO:Importing libraries
2023-11-24 18:10:09,473:INFO:Copying training dataset
2023-11-24 18:10:09,474:INFO:Defining folds
2023-11-24 18:10:09,474:INFO:Declaring metric variables
2023-11-24 18:10:09,474:INFO:Importing untrained model
2023-11-24 18:10:09,474:INFO:Extreme Gradient Boosting Imported successfully
2023-11-24 18:10:09,474:INFO:Starting cross validation
2023-11-24 18:10:09,475:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 18:10:09,678:INFO:Calculating mean and std
2023-11-24 18:10:09,678:INFO:Creating metrics dataframe
2023-11-24 18:10:09,679:INFO:Uploading results into container
2023-11-24 18:10:09,680:INFO:Uploading model into container now
2023-11-24 18:10:09,680:INFO:_master_model_container: 17
2023-11-24 18:10:09,680:INFO:_display_container: 2
2023-11-24 18:10:09,680:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             n_estimators=100, n_jobs=-1, num_parallel_tree=None,
             predictor=None, random_state=6125, ...)
2023-11-24 18:10:09,680:INFO:create_model() successfully completed......................................
2023-11-24 18:10:09,766:INFO:SubProcess create_model() end ==================================
2023-11-24 18:10:09,766:INFO:Creating metrics dataframe
2023-11-24 18:10:09,767:INFO:Initializing Light Gradient Boosting Machine
2023-11-24 18:10:09,767:INFO:Total runtime is 0.08938111464182535 minutes
2023-11-24 18:10:09,768:INFO:SubProcess create_model() called ==================================
2023-11-24 18:10:09,768:INFO:Initializing create_model()
2023-11-24 18:10:09,768:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x135b68f50>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28efd6950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 18:10:09,768:INFO:Checking exceptions
2023-11-24 18:10:09,768:INFO:Importing libraries
2023-11-24 18:10:09,768:INFO:Copying training dataset
2023-11-24 18:10:09,769:INFO:Defining folds
2023-11-24 18:10:09,769:INFO:Declaring metric variables
2023-11-24 18:10:09,769:INFO:Importing untrained model
2023-11-24 18:10:09,769:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-24 18:10:09,769:INFO:Starting cross validation
2023-11-24 18:10:09,769:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 18:10:09,878:INFO:Calculating mean and std
2023-11-24 18:10:09,879:INFO:Creating metrics dataframe
2023-11-24 18:10:09,880:INFO:Uploading results into container
2023-11-24 18:10:09,880:INFO:Uploading model into container now
2023-11-24 18:10:09,880:INFO:_master_model_container: 18
2023-11-24 18:10:09,880:INFO:_display_container: 2
2023-11-24 18:10:09,880:INFO:LGBMRegressor(n_jobs=-1, random_state=6125)
2023-11-24 18:10:09,880:INFO:create_model() successfully completed......................................
2023-11-24 18:10:09,965:INFO:SubProcess create_model() end ==================================
2023-11-24 18:10:09,966:INFO:Creating metrics dataframe
2023-11-24 18:10:09,967:INFO:Initializing Dummy Regressor
2023-11-24 18:10:09,967:INFO:Total runtime is 0.09271009763081868 minutes
2023-11-24 18:10:09,967:INFO:SubProcess create_model() called ==================================
2023-11-24 18:10:09,967:INFO:Initializing create_model()
2023-11-24 18:10:09,967:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x135b68f50>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28efd6950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 18:10:09,967:INFO:Checking exceptions
2023-11-24 18:10:09,967:INFO:Importing libraries
2023-11-24 18:10:09,967:INFO:Copying training dataset
2023-11-24 18:10:09,968:INFO:Defining folds
2023-11-24 18:10:09,968:INFO:Declaring metric variables
2023-11-24 18:10:09,968:INFO:Importing untrained model
2023-11-24 18:10:09,969:INFO:Dummy Regressor Imported successfully
2023-11-24 18:10:09,969:INFO:Starting cross validation
2023-11-24 18:10:09,969:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 18:10:10,017:INFO:Calculating mean and std
2023-11-24 18:10:10,017:INFO:Creating metrics dataframe
2023-11-24 18:10:10,018:INFO:Uploading results into container
2023-11-24 18:10:10,018:INFO:Uploading model into container now
2023-11-24 18:10:10,018:INFO:_master_model_container: 19
2023-11-24 18:10:10,018:INFO:_display_container: 2
2023-11-24 18:10:10,018:INFO:DummyRegressor()
2023-11-24 18:10:10,018:INFO:create_model() successfully completed......................................
2023-11-24 18:10:10,104:INFO:SubProcess create_model() end ==================================
2023-11-24 18:10:10,104:INFO:Creating metrics dataframe
2023-11-24 18:10:10,106:INFO:Initializing create_model()
2023-11-24 18:10:10,106:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x135b68f50>, estimator=KNeighborsRegressor(n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 18:10:10,106:INFO:Checking exceptions
2023-11-24 18:10:10,106:INFO:Importing libraries
2023-11-24 18:10:10,106:INFO:Copying training dataset
2023-11-24 18:10:10,107:INFO:Defining folds
2023-11-24 18:10:10,107:INFO:Declaring metric variables
2023-11-24 18:10:10,107:INFO:Importing untrained model
2023-11-24 18:10:10,107:INFO:Declaring custom model
2023-11-24 18:10:10,108:INFO:K Neighbors Regressor Imported successfully
2023-11-24 18:10:10,108:INFO:Cross validation set to False
2023-11-24 18:10:10,108:INFO:Fitting Model
2023-11-24 18:10:10,121:INFO:KNeighborsRegressor(n_jobs=-1)
2023-11-24 18:10:10,121:INFO:create_model() successfully completed......................................
2023-11-24 18:10:10,212:INFO:_master_model_container: 19
2023-11-24 18:10:10,212:INFO:_display_container: 2
2023-11-24 18:10:10,212:INFO:KNeighborsRegressor(n_jobs=-1)
2023-11-24 18:10:10,212:INFO:compare_models() successfully completed......................................
2023-11-24 18:10:10,216:INFO:Initializing save_model()
2023-11-24 18:10:10,216:INFO:save_model(model=KNeighborsRegressor(n_jobs=-1), model_name=best_model, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/46/tcczvndd7xj_pqs5r176bl600000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['year', 'events', 'athletes',
                                             'age', 'height', 'weight',
                                             'prev_medals', 'prev_3_medals'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['team', 'country'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['team', 'country'],
                                    transformer=TargetEncoder(cols=['team',
                                                                    'country'],
                                                              handle_missing='return_nan')))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2023-11-24 18:10:10,216:INFO:Adding model into prep_pipe
2023-11-24 18:10:10,220:INFO:best_model.pkl saved in current working directory
2023-11-24 18:10:10,222:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['year', 'events', 'athletes',
                                             'age', 'height', 'weight',
                                             'prev_medals', 'prev_3_medals'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['team', 'country'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['team', 'country'],
                                    transformer=TargetEncoder(cols=['team',
                                                                    'country'],
                                                              handle_missing='return_nan'))),
                ('trained_model', KNeighborsRegressor(n_jobs=-1))])
2023-11-24 18:10:10,222:INFO:save_model() successfully completed......................................
2023-11-24 18:25:08,051:INFO:PyCaret RegressionExperiment
2023-11-24 18:25:08,052:INFO:Logging name: reg-default-name
2023-11-24 18:25:08,052:INFO:ML Usecase: MLUsecase.REGRESSION
2023-11-24 18:25:08,052:INFO:version 3.2.0
2023-11-24 18:25:08,052:INFO:Initializing setup()
2023-11-24 18:25:08,052:INFO:self.USI: 5e6a
2023-11-24 18:25:08,052:INFO:self._variable_keys: {'_available_plots', 'fold_shuffle_param', 'exp_id', 'y_test', 'y_train', 'n_jobs_param', 'memory', 'log_plots_param', 'html_param', 'gpu_param', '_ml_usecase', 'idx', 'pipeline', 'seed', 'X_test', 'transform_target_param', 'logging_param', 'data', 'fold_generator', 'exp_name_log', 'USI', 'X', 'fold_groups_param', 'X_train', 'y', 'gpu_n_jobs_param', 'target_param'}
2023-11-24 18:25:08,052:INFO:Checking environment
2023-11-24 18:25:08,052:INFO:python_version: 3.11.5
2023-11-24 18:25:08,052:INFO:python_build: ('main', 'Sep 11 2023 08:31:25')
2023-11-24 18:25:08,052:INFO:machine: arm64
2023-11-24 18:25:08,052:INFO:platform: macOS-14.0-arm64-arm-64bit
2023-11-24 18:25:08,052:INFO:Memory: svmem(total=17179869184, available=4869062656, percent=71.7, used=7010549760, free=115605504, active=4781621248, inactive=4750966784, wired=2228928512)
2023-11-24 18:25:08,052:INFO:Physical Core: 10
2023-11-24 18:25:08,052:INFO:Logical Core: 10
2023-11-24 18:25:08,052:INFO:Checking libraries
2023-11-24 18:25:08,052:INFO:System:
2023-11-24 18:25:08,052:INFO:    python: 3.11.5 (main, Sep 11 2023, 08:31:25) [Clang 14.0.6 ]
2023-11-24 18:25:08,052:INFO:executable: /Users/saiakhil/anaconda3/envs/mlauto/bin/python
2023-11-24 18:25:08,052:INFO:   machine: macOS-14.0-arm64-arm-64bit
2023-11-24 18:25:08,052:INFO:PyCaret required dependencies:
2023-11-24 18:25:08,052:INFO:                 pip: 23.3.1
2023-11-24 18:25:08,052:INFO:          setuptools: 68.0.0
2023-11-24 18:25:08,052:INFO:             pycaret: 3.2.0
2023-11-24 18:25:08,052:INFO:             IPython: 8.15.0
2023-11-24 18:25:08,052:INFO:          ipywidgets: 8.1.1
2023-11-24 18:25:08,052:INFO:                tqdm: 4.66.1
2023-11-24 18:25:08,052:INFO:               numpy: 1.25.2
2023-11-24 18:25:08,052:INFO:              pandas: 1.5.3
2023-11-24 18:25:08,052:INFO:              jinja2: 3.1.2
2023-11-24 18:25:08,052:INFO:               scipy: 1.11.3
2023-11-24 18:25:08,052:INFO:              joblib: 1.3.2
2023-11-24 18:25:08,052:INFO:             sklearn: 1.2.2
2023-11-24 18:25:08,052:INFO:                pyod: 1.1.2
2023-11-24 18:25:08,052:INFO:            imblearn: 0.11.0
2023-11-24 18:25:08,052:INFO:   category_encoders: 2.6.3
2023-11-24 18:25:08,052:INFO:            lightgbm: 4.1.0
2023-11-24 18:25:08,052:INFO:               numba: 0.58.1
2023-11-24 18:25:08,052:INFO:            requests: 2.31.0
2023-11-24 18:25:08,052:INFO:          matplotlib: 3.6.0
2023-11-24 18:25:08,052:INFO:          scikitplot: 0.3.7
2023-11-24 18:25:08,052:INFO:         yellowbrick: 1.5
2023-11-24 18:25:08,052:INFO:              plotly: 5.18.0
2023-11-24 18:25:08,052:INFO:    plotly-resampler: Not installed
2023-11-24 18:25:08,052:INFO:             kaleido: 0.2.1
2023-11-24 18:25:08,052:INFO:           schemdraw: 0.15
2023-11-24 18:25:08,052:INFO:         statsmodels: 0.14.0
2023-11-24 18:25:08,052:INFO:              sktime: 0.21.1
2023-11-24 18:25:08,052:INFO:               tbats: 1.1.3
2023-11-24 18:25:08,052:INFO:            pmdarima: 2.0.4
2023-11-24 18:25:08,052:INFO:              psutil: 5.9.6
2023-11-24 18:25:08,052:INFO:          markupsafe: 2.1.3
2023-11-24 18:25:08,052:INFO:             pickle5: Not installed
2023-11-24 18:25:08,052:INFO:         cloudpickle: 3.0.0
2023-11-24 18:25:08,052:INFO:         deprecation: 2.1.0
2023-11-24 18:25:08,052:INFO:              xxhash: 3.4.1
2023-11-24 18:25:08,052:INFO:           wurlitzer: 3.0.3
2023-11-24 18:25:08,052:INFO:PyCaret optional dependencies:
2023-11-24 18:25:08,052:INFO:                shap: Not installed
2023-11-24 18:25:08,052:INFO:           interpret: Not installed
2023-11-24 18:25:08,052:INFO:                umap: Not installed
2023-11-24 18:25:08,052:INFO:     ydata_profiling: 4.6.2
2023-11-24 18:25:08,052:INFO:  explainerdashboard: Not installed
2023-11-24 18:25:08,052:INFO:             autoviz: Not installed
2023-11-24 18:25:08,052:INFO:           fairlearn: Not installed
2023-11-24 18:25:08,052:INFO:          deepchecks: Not installed
2023-11-24 18:25:08,052:INFO:             xgboost: 1.7.3
2023-11-24 18:25:08,052:INFO:            catboost: Not installed
2023-11-24 18:25:08,052:INFO:              kmodes: Not installed
2023-11-24 18:25:08,052:INFO:             mlxtend: Not installed
2023-11-24 18:25:08,052:INFO:       statsforecast: Not installed
2023-11-24 18:25:08,052:INFO:        tune_sklearn: Not installed
2023-11-24 18:25:08,052:INFO:                 ray: Not installed
2023-11-24 18:25:08,052:INFO:            hyperopt: Not installed
2023-11-24 18:25:08,052:INFO:              optuna: Not installed
2023-11-24 18:25:08,052:INFO:               skopt: Not installed
2023-11-24 18:25:08,053:INFO:              mlflow: Not installed
2023-11-24 18:25:08,053:INFO:              gradio: Not installed
2023-11-24 18:25:08,053:INFO:             fastapi: Not installed
2023-11-24 18:25:08,053:INFO:             uvicorn: Not installed
2023-11-24 18:25:08,053:INFO:              m2cgen: Not installed
2023-11-24 18:25:08,053:INFO:           evidently: Not installed
2023-11-24 18:25:08,053:INFO:               fugue: Not installed
2023-11-24 18:25:08,053:INFO:           streamlit: 1.28.2
2023-11-24 18:25:08,053:INFO:             prophet: Not installed
2023-11-24 18:25:08,053:INFO:None
2023-11-24 18:25:08,053:INFO:Set up data.
2023-11-24 18:25:08,055:INFO:Set up folding strategy.
2023-11-24 18:25:08,055:INFO:Set up train/test split.
2023-11-24 18:25:08,056:INFO:Set up index.
2023-11-24 18:25:08,056:INFO:Assigning column types.
2023-11-24 18:25:08,057:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-24 18:25:08,057:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-11-24 18:25:08,059:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-24 18:25:08,060:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-24 18:25:08,082:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 18:25:08,099:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 18:25:08,099:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 18:25:08,100:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 18:25:08,100:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-11-24 18:25:08,101:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-24 18:25:08,103:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-24 18:25:08,125:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 18:25:08,141:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 18:25:08,142:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 18:25:08,143:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 18:25:08,143:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-11-24 18:25:08,144:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-24 18:25:08,146:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-24 18:25:08,167:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 18:25:08,184:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 18:25:08,184:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 18:25:08,185:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 18:25:08,187:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-24 18:25:08,189:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-24 18:25:08,209:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 18:25:08,226:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 18:25:08,226:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 18:25:08,227:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 18:25:08,227:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-11-24 18:25:08,231:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-24 18:25:08,252:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 18:25:08,269:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 18:25:08,269:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 18:25:08,270:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 18:25:08,274:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-24 18:25:08,295:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 18:25:08,312:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 18:25:08,312:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 18:25:08,313:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 18:25:08,313:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-11-24 18:25:08,338:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 18:25:08,355:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 18:25:08,355:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 18:25:08,356:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 18:25:08,380:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 18:25:08,397:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 18:25:08,397:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 18:25:08,398:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 18:25:08,398:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-11-24 18:25:08,424:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 18:25:08,441:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 18:25:08,442:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 18:25:08,467:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 18:25:08,485:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 18:25:08,486:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 18:25:08,486:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-11-24 18:25:08,528:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 18:25:08,529:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 18:25:08,570:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 18:25:08,571:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 18:25:08,571:INFO:Preparing preprocessing pipeline...
2023-11-24 18:25:08,571:INFO:Set up simple imputation.
2023-11-24 18:25:08,572:INFO:Set up encoding of categorical features.
2023-11-24 18:25:08,588:INFO:Finished creating preprocessing pipeline.
2023-11-24 18:25:08,590:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/46/tcczvndd7xj_pqs5r176bl600000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['year', 'events', 'athletes',
                                             'age', 'height', 'weight',
                                             'prev_medals', 'prev_3_medals'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['team', 'country'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['team', 'country'],
                                    transformer=TargetEncoder(cols=['team',
                                                                    'country'],
                                                              handle_missing='return_nan')))])
2023-11-24 18:25:08,590:INFO:Creating final display dataframe.
2023-11-24 18:25:08,651:INFO:Setup _display_container:                     Description             Value
0                    Session id              4947
1                        Target            medals
2                   Target type        Regression
3           Original data shape        (2144, 11)
4        Transformed data shape        (2144, 11)
5   Transformed train set shape        (1500, 11)
6    Transformed test set shape         (644, 11)
7              Numeric features                 8
8          Categorical features                 2
9      Rows with missing values              6.1%
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator             KFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  reg-default-name
22                          USI              5e6a
2023-11-24 18:25:08,693:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 18:25:08,694:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 18:25:08,736:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 18:25:08,737:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 18:25:08,738:INFO:setup() successfully completed in 0.69s...............
2023-11-24 18:25:11,392:INFO:Initializing compare_models()
2023-11-24 18:25:11,393:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x1543e6c50>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x1543e6c50>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2023-11-24 18:25:11,393:INFO:Checking exceptions
2023-11-24 18:25:11,394:INFO:Preparing display monitor
2023-11-24 18:25:11,395:INFO:Initializing Linear Regression
2023-11-24 18:25:11,395:INFO:Total runtime is 2.868970235188802e-06 minutes
2023-11-24 18:25:11,395:INFO:SubProcess create_model() called ==================================
2023-11-24 18:25:11,395:INFO:Initializing create_model()
2023-11-24 18:25:11,396:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1543e6c50>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2b58cf910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 18:25:11,396:INFO:Checking exceptions
2023-11-24 18:25:11,396:INFO:Importing libraries
2023-11-24 18:25:11,396:INFO:Copying training dataset
2023-11-24 18:25:11,398:INFO:Defining folds
2023-11-24 18:25:11,398:INFO:Declaring metric variables
2023-11-24 18:25:11,399:INFO:Importing untrained model
2023-11-24 18:25:11,399:INFO:Linear Regression Imported successfully
2023-11-24 18:25:11,399:INFO:Starting cross validation
2023-11-24 18:25:11,400:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 18:25:13,090:INFO:Calculating mean and std
2023-11-24 18:25:13,094:INFO:Creating metrics dataframe
2023-11-24 18:25:13,098:INFO:Uploading results into container
2023-11-24 18:25:13,098:INFO:Uploading model into container now
2023-11-24 18:25:13,099:INFO:_master_model_container: 1
2023-11-24 18:25:13,099:INFO:_display_container: 2
2023-11-24 18:25:13,099:INFO:LinearRegression(n_jobs=-1)
2023-11-24 18:25:13,099:INFO:create_model() successfully completed......................................
2023-11-24 18:25:13,210:INFO:SubProcess create_model() end ==================================
2023-11-24 18:25:13,210:INFO:Creating metrics dataframe
2023-11-24 18:25:13,211:INFO:Initializing Lasso Regression
2023-11-24 18:25:13,212:INFO:Total runtime is 0.030279433727264406 minutes
2023-11-24 18:25:13,212:INFO:SubProcess create_model() called ==================================
2023-11-24 18:25:13,212:INFO:Initializing create_model()
2023-11-24 18:25:13,212:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1543e6c50>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2b58cf910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 18:25:13,212:INFO:Checking exceptions
2023-11-24 18:25:13,212:INFO:Importing libraries
2023-11-24 18:25:13,212:INFO:Copying training dataset
2023-11-24 18:25:13,213:INFO:Defining folds
2023-11-24 18:25:13,213:INFO:Declaring metric variables
2023-11-24 18:25:13,213:INFO:Importing untrained model
2023-11-24 18:25:13,213:INFO:Lasso Regression Imported successfully
2023-11-24 18:25:13,213:INFO:Starting cross validation
2023-11-24 18:25:13,214:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 18:25:13,265:INFO:Calculating mean and std
2023-11-24 18:25:13,265:INFO:Creating metrics dataframe
2023-11-24 18:25:13,266:INFO:Uploading results into container
2023-11-24 18:25:13,266:INFO:Uploading model into container now
2023-11-24 18:25:13,266:INFO:_master_model_container: 2
2023-11-24 18:25:13,266:INFO:_display_container: 2
2023-11-24 18:25:13,266:INFO:Lasso(random_state=4947)
2023-11-24 18:25:13,266:INFO:create_model() successfully completed......................................
2023-11-24 18:25:13,351:INFO:SubProcess create_model() end ==================================
2023-11-24 18:25:13,351:INFO:Creating metrics dataframe
2023-11-24 18:25:13,353:INFO:Initializing Ridge Regression
2023-11-24 18:25:13,353:INFO:Total runtime is 0.0326375683148702 minutes
2023-11-24 18:25:13,353:INFO:SubProcess create_model() called ==================================
2023-11-24 18:25:13,353:INFO:Initializing create_model()
2023-11-24 18:25:13,353:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1543e6c50>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2b58cf910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 18:25:13,353:INFO:Checking exceptions
2023-11-24 18:25:13,353:INFO:Importing libraries
2023-11-24 18:25:13,353:INFO:Copying training dataset
2023-11-24 18:25:13,354:INFO:Defining folds
2023-11-24 18:25:13,354:INFO:Declaring metric variables
2023-11-24 18:25:13,354:INFO:Importing untrained model
2023-11-24 18:25:13,354:INFO:Ridge Regression Imported successfully
2023-11-24 18:25:13,354:INFO:Starting cross validation
2023-11-24 18:25:13,355:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 18:25:13,416:INFO:Calculating mean and std
2023-11-24 18:25:13,416:INFO:Creating metrics dataframe
2023-11-24 18:25:13,417:INFO:Uploading results into container
2023-11-24 18:25:13,417:INFO:Uploading model into container now
2023-11-24 18:25:13,417:INFO:_master_model_container: 3
2023-11-24 18:25:13,417:INFO:_display_container: 2
2023-11-24 18:25:13,418:INFO:Ridge(random_state=4947)
2023-11-24 18:25:13,418:INFO:create_model() successfully completed......................................
2023-11-24 18:25:13,509:INFO:SubProcess create_model() end ==================================
2023-11-24 18:25:13,509:INFO:Creating metrics dataframe
2023-11-24 18:25:13,510:INFO:Initializing Elastic Net
2023-11-24 18:25:13,510:INFO:Total runtime is 0.035258201758066814 minutes
2023-11-24 18:25:13,510:INFO:SubProcess create_model() called ==================================
2023-11-24 18:25:13,510:INFO:Initializing create_model()
2023-11-24 18:25:13,510:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1543e6c50>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2b58cf910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 18:25:13,510:INFO:Checking exceptions
2023-11-24 18:25:13,510:INFO:Importing libraries
2023-11-24 18:25:13,510:INFO:Copying training dataset
2023-11-24 18:25:13,511:INFO:Defining folds
2023-11-24 18:25:13,512:INFO:Declaring metric variables
2023-11-24 18:25:13,512:INFO:Importing untrained model
2023-11-24 18:25:13,512:INFO:Elastic Net Imported successfully
2023-11-24 18:25:13,512:INFO:Starting cross validation
2023-11-24 18:25:13,512:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 18:25:13,563:INFO:Calculating mean and std
2023-11-24 18:25:13,563:INFO:Creating metrics dataframe
2023-11-24 18:25:13,564:INFO:Uploading results into container
2023-11-24 18:25:13,565:INFO:Uploading model into container now
2023-11-24 18:25:13,565:INFO:_master_model_container: 4
2023-11-24 18:25:13,565:INFO:_display_container: 2
2023-11-24 18:25:13,565:INFO:ElasticNet(random_state=4947)
2023-11-24 18:25:13,565:INFO:create_model() successfully completed......................................
2023-11-24 18:25:13,656:INFO:SubProcess create_model() end ==================================
2023-11-24 18:25:13,656:INFO:Creating metrics dataframe
2023-11-24 18:25:13,657:INFO:Initializing Least Angle Regression
2023-11-24 18:25:13,657:INFO:Total runtime is 0.03771143356959025 minutes
2023-11-24 18:25:13,657:INFO:SubProcess create_model() called ==================================
2023-11-24 18:25:13,658:INFO:Initializing create_model()
2023-11-24 18:25:13,658:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1543e6c50>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2b58cf910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 18:25:13,658:INFO:Checking exceptions
2023-11-24 18:25:13,658:INFO:Importing libraries
2023-11-24 18:25:13,658:INFO:Copying training dataset
2023-11-24 18:25:13,659:INFO:Defining folds
2023-11-24 18:25:13,659:INFO:Declaring metric variables
2023-11-24 18:25:13,659:INFO:Importing untrained model
2023-11-24 18:25:13,659:INFO:Least Angle Regression Imported successfully
2023-11-24 18:25:13,659:INFO:Starting cross validation
2023-11-24 18:25:13,659:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 18:25:13,705:INFO:Calculating mean and std
2023-11-24 18:25:13,705:INFO:Creating metrics dataframe
2023-11-24 18:25:13,706:INFO:Uploading results into container
2023-11-24 18:25:13,706:INFO:Uploading model into container now
2023-11-24 18:25:13,706:INFO:_master_model_container: 5
2023-11-24 18:25:13,706:INFO:_display_container: 2
2023-11-24 18:25:13,706:INFO:Lars(random_state=4947)
2023-11-24 18:25:13,706:INFO:create_model() successfully completed......................................
2023-11-24 18:25:13,796:INFO:SubProcess create_model() end ==================================
2023-11-24 18:25:13,796:INFO:Creating metrics dataframe
2023-11-24 18:25:13,798:INFO:Initializing Lasso Least Angle Regression
2023-11-24 18:25:13,798:INFO:Total runtime is 0.04005873600641886 minutes
2023-11-24 18:25:13,798:INFO:SubProcess create_model() called ==================================
2023-11-24 18:25:13,798:INFO:Initializing create_model()
2023-11-24 18:25:13,799:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1543e6c50>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2b58cf910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 18:25:13,799:INFO:Checking exceptions
2023-11-24 18:25:13,799:INFO:Importing libraries
2023-11-24 18:25:13,799:INFO:Copying training dataset
2023-11-24 18:25:13,800:INFO:Defining folds
2023-11-24 18:25:13,800:INFO:Declaring metric variables
2023-11-24 18:25:13,800:INFO:Importing untrained model
2023-11-24 18:25:13,800:INFO:Lasso Least Angle Regression Imported successfully
2023-11-24 18:25:13,800:INFO:Starting cross validation
2023-11-24 18:25:13,800:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 18:25:13,850:INFO:Calculating mean and std
2023-11-24 18:25:13,851:INFO:Creating metrics dataframe
2023-11-24 18:25:13,852:INFO:Uploading results into container
2023-11-24 18:25:13,852:INFO:Uploading model into container now
2023-11-24 18:25:13,852:INFO:_master_model_container: 6
2023-11-24 18:25:13,852:INFO:_display_container: 2
2023-11-24 18:25:13,852:INFO:LassoLars(random_state=4947)
2023-11-24 18:25:13,852:INFO:create_model() successfully completed......................................
2023-11-24 18:25:13,938:INFO:SubProcess create_model() end ==================================
2023-11-24 18:25:13,938:INFO:Creating metrics dataframe
2023-11-24 18:25:13,940:INFO:Initializing Orthogonal Matching Pursuit
2023-11-24 18:25:13,940:INFO:Total runtime is 0.042416552702585854 minutes
2023-11-24 18:25:13,940:INFO:SubProcess create_model() called ==================================
2023-11-24 18:25:13,940:INFO:Initializing create_model()
2023-11-24 18:25:13,940:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1543e6c50>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2b58cf910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 18:25:13,940:INFO:Checking exceptions
2023-11-24 18:25:13,940:INFO:Importing libraries
2023-11-24 18:25:13,940:INFO:Copying training dataset
2023-11-24 18:25:13,941:INFO:Defining folds
2023-11-24 18:25:13,941:INFO:Declaring metric variables
2023-11-24 18:25:13,941:INFO:Importing untrained model
2023-11-24 18:25:13,941:INFO:Orthogonal Matching Pursuit Imported successfully
2023-11-24 18:25:13,941:INFO:Starting cross validation
2023-11-24 18:25:13,942:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 18:25:13,987:INFO:Calculating mean and std
2023-11-24 18:25:13,987:INFO:Creating metrics dataframe
2023-11-24 18:25:13,988:INFO:Uploading results into container
2023-11-24 18:25:13,988:INFO:Uploading model into container now
2023-11-24 18:25:13,988:INFO:_master_model_container: 7
2023-11-24 18:25:13,988:INFO:_display_container: 2
2023-11-24 18:25:13,989:INFO:OrthogonalMatchingPursuit()
2023-11-24 18:25:13,989:INFO:create_model() successfully completed......................................
2023-11-24 18:25:14,075:INFO:SubProcess create_model() end ==================================
2023-11-24 18:25:14,075:INFO:Creating metrics dataframe
2023-11-24 18:25:14,076:INFO:Initializing Bayesian Ridge
2023-11-24 18:25:14,076:INFO:Total runtime is 0.044692985216776525 minutes
2023-11-24 18:25:14,076:INFO:SubProcess create_model() called ==================================
2023-11-24 18:25:14,076:INFO:Initializing create_model()
2023-11-24 18:25:14,076:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1543e6c50>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2b58cf910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 18:25:14,076:INFO:Checking exceptions
2023-11-24 18:25:14,077:INFO:Importing libraries
2023-11-24 18:25:14,077:INFO:Copying training dataset
2023-11-24 18:25:14,078:INFO:Defining folds
2023-11-24 18:25:14,078:INFO:Declaring metric variables
2023-11-24 18:25:14,078:INFO:Importing untrained model
2023-11-24 18:25:14,078:INFO:Bayesian Ridge Imported successfully
2023-11-24 18:25:14,078:INFO:Starting cross validation
2023-11-24 18:25:14,078:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 18:25:14,134:INFO:Calculating mean and std
2023-11-24 18:25:14,134:INFO:Creating metrics dataframe
2023-11-24 18:25:14,135:INFO:Uploading results into container
2023-11-24 18:25:14,135:INFO:Uploading model into container now
2023-11-24 18:25:14,136:INFO:_master_model_container: 8
2023-11-24 18:25:14,136:INFO:_display_container: 2
2023-11-24 18:25:14,136:INFO:BayesianRidge()
2023-11-24 18:25:14,136:INFO:create_model() successfully completed......................................
2023-11-24 18:25:14,221:INFO:SubProcess create_model() end ==================================
2023-11-24 18:25:14,222:INFO:Creating metrics dataframe
2023-11-24 18:25:14,223:INFO:Initializing Passive Aggressive Regressor
2023-11-24 18:25:14,223:INFO:Total runtime is 0.04714550177256266 minutes
2023-11-24 18:25:14,224:INFO:SubProcess create_model() called ==================================
2023-11-24 18:25:14,224:INFO:Initializing create_model()
2023-11-24 18:25:14,224:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1543e6c50>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2b58cf910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 18:25:14,224:INFO:Checking exceptions
2023-11-24 18:25:14,224:INFO:Importing libraries
2023-11-24 18:25:14,224:INFO:Copying training dataset
2023-11-24 18:25:14,225:INFO:Defining folds
2023-11-24 18:25:14,225:INFO:Declaring metric variables
2023-11-24 18:25:14,225:INFO:Importing untrained model
2023-11-24 18:25:14,225:INFO:Passive Aggressive Regressor Imported successfully
2023-11-24 18:25:14,225:INFO:Starting cross validation
2023-11-24 18:25:14,225:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 18:25:14,277:INFO:Calculating mean and std
2023-11-24 18:25:14,277:INFO:Creating metrics dataframe
2023-11-24 18:25:14,278:INFO:Uploading results into container
2023-11-24 18:25:14,278:INFO:Uploading model into container now
2023-11-24 18:25:14,278:INFO:_master_model_container: 9
2023-11-24 18:25:14,278:INFO:_display_container: 2
2023-11-24 18:25:14,278:INFO:PassiveAggressiveRegressor(random_state=4947)
2023-11-24 18:25:14,278:INFO:create_model() successfully completed......................................
2023-11-24 18:25:14,370:INFO:SubProcess create_model() end ==================================
2023-11-24 18:25:14,370:INFO:Creating metrics dataframe
2023-11-24 18:25:14,371:INFO:Initializing Huber Regressor
2023-11-24 18:25:14,371:INFO:Total runtime is 0.049610416094462075 minutes
2023-11-24 18:25:14,371:INFO:SubProcess create_model() called ==================================
2023-11-24 18:25:14,372:INFO:Initializing create_model()
2023-11-24 18:25:14,372:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1543e6c50>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2b58cf910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 18:25:14,372:INFO:Checking exceptions
2023-11-24 18:25:14,372:INFO:Importing libraries
2023-11-24 18:25:14,372:INFO:Copying training dataset
2023-11-24 18:25:14,373:INFO:Defining folds
2023-11-24 18:25:14,373:INFO:Declaring metric variables
2023-11-24 18:25:14,373:INFO:Importing untrained model
2023-11-24 18:25:14,373:INFO:Huber Regressor Imported successfully
2023-11-24 18:25:14,373:INFO:Starting cross validation
2023-11-24 18:25:14,373:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 18:25:14,441:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-24 18:25:14,480:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-24 18:25:14,491:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-24 18:25:14,493:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-24 18:25:14,495:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-24 18:25:14,495:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-24 18:25:14,496:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-24 18:25:14,497:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-24 18:25:14,503:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-24 18:25:14,513:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-24 18:25:14,519:INFO:Calculating mean and std
2023-11-24 18:25:14,519:INFO:Creating metrics dataframe
2023-11-24 18:25:14,520:INFO:Uploading results into container
2023-11-24 18:25:14,521:INFO:Uploading model into container now
2023-11-24 18:25:14,521:INFO:_master_model_container: 10
2023-11-24 18:25:14,521:INFO:_display_container: 2
2023-11-24 18:25:14,521:INFO:HuberRegressor()
2023-11-24 18:25:14,521:INFO:create_model() successfully completed......................................
2023-11-24 18:25:14,612:INFO:SubProcess create_model() end ==================================
2023-11-24 18:25:14,612:INFO:Creating metrics dataframe
2023-11-24 18:25:14,614:INFO:Initializing K Neighbors Regressor
2023-11-24 18:25:14,614:INFO:Total runtime is 0.053650649388631184 minutes
2023-11-24 18:25:14,614:INFO:SubProcess create_model() called ==================================
2023-11-24 18:25:14,614:INFO:Initializing create_model()
2023-11-24 18:25:14,614:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1543e6c50>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2b58cf910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 18:25:14,614:INFO:Checking exceptions
2023-11-24 18:25:14,614:INFO:Importing libraries
2023-11-24 18:25:14,614:INFO:Copying training dataset
2023-11-24 18:25:14,615:INFO:Defining folds
2023-11-24 18:25:14,615:INFO:Declaring metric variables
2023-11-24 18:25:14,615:INFO:Importing untrained model
2023-11-24 18:25:14,615:INFO:K Neighbors Regressor Imported successfully
2023-11-24 18:25:14,615:INFO:Starting cross validation
2023-11-24 18:25:14,616:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 18:25:14,669:INFO:Calculating mean and std
2023-11-24 18:25:14,669:INFO:Creating metrics dataframe
2023-11-24 18:25:14,670:INFO:Uploading results into container
2023-11-24 18:25:14,670:INFO:Uploading model into container now
2023-11-24 18:25:14,671:INFO:_master_model_container: 11
2023-11-24 18:25:14,671:INFO:_display_container: 2
2023-11-24 18:25:14,671:INFO:KNeighborsRegressor(n_jobs=-1)
2023-11-24 18:25:14,671:INFO:create_model() successfully completed......................................
2023-11-24 18:25:14,766:INFO:SubProcess create_model() end ==================================
2023-11-24 18:25:14,766:INFO:Creating metrics dataframe
2023-11-24 18:25:14,768:INFO:Initializing Decision Tree Regressor
2023-11-24 18:25:14,768:INFO:Total runtime is 0.05621741612752278 minutes
2023-11-24 18:25:14,768:INFO:SubProcess create_model() called ==================================
2023-11-24 18:25:14,768:INFO:Initializing create_model()
2023-11-24 18:25:14,768:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1543e6c50>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2b58cf910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 18:25:14,768:INFO:Checking exceptions
2023-11-24 18:25:14,768:INFO:Importing libraries
2023-11-24 18:25:14,768:INFO:Copying training dataset
2023-11-24 18:25:14,769:INFO:Defining folds
2023-11-24 18:25:14,769:INFO:Declaring metric variables
2023-11-24 18:25:14,769:INFO:Importing untrained model
2023-11-24 18:25:14,769:INFO:Decision Tree Regressor Imported successfully
2023-11-24 18:25:14,769:INFO:Starting cross validation
2023-11-24 18:25:14,770:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 18:25:14,825:INFO:Calculating mean and std
2023-11-24 18:25:14,826:INFO:Creating metrics dataframe
2023-11-24 18:25:14,827:INFO:Uploading results into container
2023-11-24 18:25:14,827:INFO:Uploading model into container now
2023-11-24 18:25:14,827:INFO:_master_model_container: 12
2023-11-24 18:25:14,827:INFO:_display_container: 2
2023-11-24 18:25:14,827:INFO:DecisionTreeRegressor(random_state=4947)
2023-11-24 18:25:14,827:INFO:create_model() successfully completed......................................
2023-11-24 18:25:14,920:INFO:SubProcess create_model() end ==================================
2023-11-24 18:25:14,920:INFO:Creating metrics dataframe
2023-11-24 18:25:14,922:INFO:Initializing Random Forest Regressor
2023-11-24 18:25:14,922:INFO:Total runtime is 0.0587822675704956 minutes
2023-11-24 18:25:14,922:INFO:SubProcess create_model() called ==================================
2023-11-24 18:25:14,922:INFO:Initializing create_model()
2023-11-24 18:25:14,922:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1543e6c50>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2b58cf910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 18:25:14,922:INFO:Checking exceptions
2023-11-24 18:25:14,922:INFO:Importing libraries
2023-11-24 18:25:14,922:INFO:Copying training dataset
2023-11-24 18:25:14,923:INFO:Defining folds
2023-11-24 18:25:14,923:INFO:Declaring metric variables
2023-11-24 18:25:14,923:INFO:Importing untrained model
2023-11-24 18:25:14,923:INFO:Random Forest Regressor Imported successfully
2023-11-24 18:25:14,923:INFO:Starting cross validation
2023-11-24 18:25:14,924:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 18:25:15,479:INFO:Calculating mean and std
2023-11-24 18:25:15,480:INFO:Creating metrics dataframe
2023-11-24 18:25:15,481:INFO:Uploading results into container
2023-11-24 18:25:15,481:INFO:Uploading model into container now
2023-11-24 18:25:15,481:INFO:_master_model_container: 13
2023-11-24 18:25:15,481:INFO:_display_container: 2
2023-11-24 18:25:15,481:INFO:RandomForestRegressor(n_jobs=-1, random_state=4947)
2023-11-24 18:25:15,481:INFO:create_model() successfully completed......................................
2023-11-24 18:25:15,568:INFO:SubProcess create_model() end ==================================
2023-11-24 18:25:15,568:INFO:Creating metrics dataframe
2023-11-24 18:25:15,569:INFO:Initializing Extra Trees Regressor
2023-11-24 18:25:15,569:INFO:Total runtime is 0.06957855224609374 minutes
2023-11-24 18:25:15,570:INFO:SubProcess create_model() called ==================================
2023-11-24 18:25:15,570:INFO:Initializing create_model()
2023-11-24 18:25:15,570:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1543e6c50>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2b58cf910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 18:25:15,570:INFO:Checking exceptions
2023-11-24 18:25:15,570:INFO:Importing libraries
2023-11-24 18:25:15,570:INFO:Copying training dataset
2023-11-24 18:25:15,571:INFO:Defining folds
2023-11-24 18:25:15,571:INFO:Declaring metric variables
2023-11-24 18:25:15,571:INFO:Importing untrained model
2023-11-24 18:25:15,571:INFO:Extra Trees Regressor Imported successfully
2023-11-24 18:25:15,571:INFO:Starting cross validation
2023-11-24 18:25:15,571:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 18:25:15,880:INFO:Calculating mean and std
2023-11-24 18:25:15,880:INFO:Creating metrics dataframe
2023-11-24 18:25:15,882:INFO:Uploading results into container
2023-11-24 18:25:15,882:INFO:Uploading model into container now
2023-11-24 18:25:15,882:INFO:_master_model_container: 14
2023-11-24 18:25:15,882:INFO:_display_container: 2
2023-11-24 18:25:15,882:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=4947)
2023-11-24 18:25:15,882:INFO:create_model() successfully completed......................................
2023-11-24 18:25:15,969:INFO:SubProcess create_model() end ==================================
2023-11-24 18:25:15,969:INFO:Creating metrics dataframe
2023-11-24 18:25:15,971:INFO:Initializing AdaBoost Regressor
2023-11-24 18:25:15,971:INFO:Total runtime is 0.07627010345458984 minutes
2023-11-24 18:25:15,971:INFO:SubProcess create_model() called ==================================
2023-11-24 18:25:15,971:INFO:Initializing create_model()
2023-11-24 18:25:15,971:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1543e6c50>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2b58cf910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 18:25:15,971:INFO:Checking exceptions
2023-11-24 18:25:15,971:INFO:Importing libraries
2023-11-24 18:25:15,971:INFO:Copying training dataset
2023-11-24 18:25:15,972:INFO:Defining folds
2023-11-24 18:25:15,972:INFO:Declaring metric variables
2023-11-24 18:25:15,972:INFO:Importing untrained model
2023-11-24 18:25:15,972:INFO:AdaBoost Regressor Imported successfully
2023-11-24 18:25:15,972:INFO:Starting cross validation
2023-11-24 18:25:15,973:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 18:25:16,116:INFO:Calculating mean and std
2023-11-24 18:25:16,116:INFO:Creating metrics dataframe
2023-11-24 18:25:16,118:INFO:Uploading results into container
2023-11-24 18:25:16,118:INFO:Uploading model into container now
2023-11-24 18:25:16,118:INFO:_master_model_container: 15
2023-11-24 18:25:16,118:INFO:_display_container: 2
2023-11-24 18:25:16,118:INFO:AdaBoostRegressor(random_state=4947)
2023-11-24 18:25:16,118:INFO:create_model() successfully completed......................................
2023-11-24 18:25:16,208:INFO:SubProcess create_model() end ==================================
2023-11-24 18:25:16,209:INFO:Creating metrics dataframe
2023-11-24 18:25:16,210:INFO:Initializing Gradient Boosting Regressor
2023-11-24 18:25:16,210:INFO:Total runtime is 0.08026208480199178 minutes
2023-11-24 18:25:16,211:INFO:SubProcess create_model() called ==================================
2023-11-24 18:25:16,211:INFO:Initializing create_model()
2023-11-24 18:25:16,211:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1543e6c50>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2b58cf910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 18:25:16,211:INFO:Checking exceptions
2023-11-24 18:25:16,211:INFO:Importing libraries
2023-11-24 18:25:16,211:INFO:Copying training dataset
2023-11-24 18:25:16,212:INFO:Defining folds
2023-11-24 18:25:16,212:INFO:Declaring metric variables
2023-11-24 18:25:16,212:INFO:Importing untrained model
2023-11-24 18:25:16,212:INFO:Gradient Boosting Regressor Imported successfully
2023-11-24 18:25:16,212:INFO:Starting cross validation
2023-11-24 18:25:16,212:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 18:25:16,467:INFO:Calculating mean and std
2023-11-24 18:25:16,467:INFO:Creating metrics dataframe
2023-11-24 18:25:16,468:INFO:Uploading results into container
2023-11-24 18:25:16,469:INFO:Uploading model into container now
2023-11-24 18:25:16,469:INFO:_master_model_container: 16
2023-11-24 18:25:16,469:INFO:_display_container: 2
2023-11-24 18:25:16,469:INFO:GradientBoostingRegressor(random_state=4947)
2023-11-24 18:25:16,469:INFO:create_model() successfully completed......................................
2023-11-24 18:25:16,557:INFO:SubProcess create_model() end ==================================
2023-11-24 18:25:16,557:INFO:Creating metrics dataframe
2023-11-24 18:25:16,559:INFO:Initializing Extreme Gradient Boosting
2023-11-24 18:25:16,559:INFO:Total runtime is 0.08607003291447957 minutes
2023-11-24 18:25:16,559:INFO:SubProcess create_model() called ==================================
2023-11-24 18:25:16,559:INFO:Initializing create_model()
2023-11-24 18:25:16,559:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1543e6c50>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2b58cf910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 18:25:16,559:INFO:Checking exceptions
2023-11-24 18:25:16,559:INFO:Importing libraries
2023-11-24 18:25:16,559:INFO:Copying training dataset
2023-11-24 18:25:16,560:INFO:Defining folds
2023-11-24 18:25:16,560:INFO:Declaring metric variables
2023-11-24 18:25:16,560:INFO:Importing untrained model
2023-11-24 18:25:16,560:INFO:Extreme Gradient Boosting Imported successfully
2023-11-24 18:25:16,561:INFO:Starting cross validation
2023-11-24 18:25:16,561:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 18:25:16,755:INFO:Calculating mean and std
2023-11-24 18:25:16,756:INFO:Creating metrics dataframe
2023-11-24 18:25:16,757:INFO:Uploading results into container
2023-11-24 18:25:16,757:INFO:Uploading model into container now
2023-11-24 18:25:16,757:INFO:_master_model_container: 17
2023-11-24 18:25:16,757:INFO:_display_container: 2
2023-11-24 18:25:16,757:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             n_estimators=100, n_jobs=-1, num_parallel_tree=None,
             predictor=None, random_state=4947, ...)
2023-11-24 18:25:16,758:INFO:create_model() successfully completed......................................
2023-11-24 18:25:16,849:INFO:SubProcess create_model() end ==================================
2023-11-24 18:25:16,849:INFO:Creating metrics dataframe
2023-11-24 18:25:16,851:INFO:Initializing Light Gradient Boosting Machine
2023-11-24 18:25:16,851:INFO:Total runtime is 0.09093240102132161 minutes
2023-11-24 18:25:16,851:INFO:SubProcess create_model() called ==================================
2023-11-24 18:25:16,851:INFO:Initializing create_model()
2023-11-24 18:25:16,851:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1543e6c50>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2b58cf910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 18:25:16,851:INFO:Checking exceptions
2023-11-24 18:25:16,851:INFO:Importing libraries
2023-11-24 18:25:16,851:INFO:Copying training dataset
2023-11-24 18:25:16,852:INFO:Defining folds
2023-11-24 18:25:16,852:INFO:Declaring metric variables
2023-11-24 18:25:16,852:INFO:Importing untrained model
2023-11-24 18:25:16,852:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-24 18:25:16,852:INFO:Starting cross validation
2023-11-24 18:25:16,852:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 18:25:16,953:INFO:Calculating mean and std
2023-11-24 18:25:16,954:INFO:Creating metrics dataframe
2023-11-24 18:25:16,955:INFO:Uploading results into container
2023-11-24 18:25:16,955:INFO:Uploading model into container now
2023-11-24 18:25:16,955:INFO:_master_model_container: 18
2023-11-24 18:25:16,955:INFO:_display_container: 2
2023-11-24 18:25:16,955:INFO:LGBMRegressor(n_jobs=-1, random_state=4947)
2023-11-24 18:25:16,955:INFO:create_model() successfully completed......................................
2023-11-24 18:25:17,046:INFO:SubProcess create_model() end ==================================
2023-11-24 18:25:17,046:INFO:Creating metrics dataframe
2023-11-24 18:25:17,048:INFO:Initializing Dummy Regressor
2023-11-24 18:25:17,048:INFO:Total runtime is 0.09422116676966348 minutes
2023-11-24 18:25:17,048:INFO:SubProcess create_model() called ==================================
2023-11-24 18:25:17,048:INFO:Initializing create_model()
2023-11-24 18:25:17,048:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1543e6c50>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2b58cf910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 18:25:17,048:INFO:Checking exceptions
2023-11-24 18:25:17,048:INFO:Importing libraries
2023-11-24 18:25:17,048:INFO:Copying training dataset
2023-11-24 18:25:17,049:INFO:Defining folds
2023-11-24 18:25:17,049:INFO:Declaring metric variables
2023-11-24 18:25:17,049:INFO:Importing untrained model
2023-11-24 18:25:17,049:INFO:Dummy Regressor Imported successfully
2023-11-24 18:25:17,049:INFO:Starting cross validation
2023-11-24 18:25:17,050:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 18:25:17,098:INFO:Calculating mean and std
2023-11-24 18:25:17,098:INFO:Creating metrics dataframe
2023-11-24 18:25:17,099:INFO:Uploading results into container
2023-11-24 18:25:17,099:INFO:Uploading model into container now
2023-11-24 18:25:17,099:INFO:_master_model_container: 19
2023-11-24 18:25:17,099:INFO:_display_container: 2
2023-11-24 18:25:17,099:INFO:DummyRegressor()
2023-11-24 18:25:17,099:INFO:create_model() successfully completed......................................
2023-11-24 18:25:17,190:INFO:SubProcess create_model() end ==================================
2023-11-24 18:25:17,190:INFO:Creating metrics dataframe
2023-11-24 18:25:17,192:INFO:Initializing create_model()
2023-11-24 18:25:17,192:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1543e6c50>, estimator=KNeighborsRegressor(n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 18:25:17,192:INFO:Checking exceptions
2023-11-24 18:25:17,192:INFO:Importing libraries
2023-11-24 18:25:17,192:INFO:Copying training dataset
2023-11-24 18:25:17,193:INFO:Defining folds
2023-11-24 18:25:17,193:INFO:Declaring metric variables
2023-11-24 18:25:17,193:INFO:Importing untrained model
2023-11-24 18:25:17,193:INFO:Declaring custom model
2023-11-24 18:25:17,194:INFO:K Neighbors Regressor Imported successfully
2023-11-24 18:25:17,194:INFO:Cross validation set to False
2023-11-24 18:25:17,194:INFO:Fitting Model
2023-11-24 18:25:17,206:INFO:KNeighborsRegressor(n_jobs=-1)
2023-11-24 18:25:17,206:INFO:create_model() successfully completed......................................
2023-11-24 18:25:17,299:INFO:_master_model_container: 19
2023-11-24 18:25:17,299:INFO:_display_container: 2
2023-11-24 18:25:17,299:INFO:KNeighborsRegressor(n_jobs=-1)
2023-11-24 18:25:17,299:INFO:compare_models() successfully completed......................................
2023-11-24 18:25:17,302:INFO:Initializing save_model()
2023-11-24 18:25:17,303:INFO:save_model(model=KNeighborsRegressor(n_jobs=-1), model_name=best_model, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/46/tcczvndd7xj_pqs5r176bl600000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['year', 'events', 'athletes',
                                             'age', 'height', 'weight',
                                             'prev_medals', 'prev_3_medals'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['team', 'country'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['team', 'country'],
                                    transformer=TargetEncoder(cols=['team',
                                                                    'country'],
                                                              handle_missing='return_nan')))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2023-11-24 18:25:17,303:INFO:Adding model into prep_pipe
2023-11-24 18:25:17,306:INFO:best_model.pkl saved in current working directory
2023-11-24 18:25:17,308:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['year', 'events', 'athletes',
                                             'age', 'height', 'weight',
                                             'prev_medals', 'prev_3_medals'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['team', 'country'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['team', 'country'],
                                    transformer=TargetEncoder(cols=['team',
                                                                    'country'],
                                                              handle_missing='return_nan'))),
                ('trained_model', KNeighborsRegressor(n_jobs=-1))])
2023-11-24 18:25:17,308:INFO:save_model() successfully completed......................................
2023-11-24 18:36:42,734:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-24 18:36:42,734:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-24 18:36:42,734:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-24 18:36:42,734:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-24 18:39:33,934:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-24 18:39:33,935:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-24 18:39:33,935:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-24 18:39:33,935:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-24 18:47:26,413:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-24 18:47:26,413:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-24 18:47:26,413:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-24 18:47:26,413:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-24 18:50:24,763:INFO:PyCaret RegressionExperiment
2023-11-24 18:50:24,764:INFO:Logging name: reg-default-name
2023-11-24 18:50:24,764:INFO:ML Usecase: MLUsecase.REGRESSION
2023-11-24 18:50:24,764:INFO:version 3.2.0
2023-11-24 18:50:24,764:INFO:Initializing setup()
2023-11-24 18:50:24,764:INFO:self.USI: 5755
2023-11-24 18:50:24,764:INFO:self._variable_keys: {'X_test', 'log_plots_param', 'gpu_param', 'target_param', 'y', 'y_test', 'exp_id', 'pipeline', '_available_plots', 'gpu_n_jobs_param', 'USI', 'seed', 'logging_param', 'html_param', 'fold_shuffle_param', 'n_jobs_param', 'idx', 'y_train', 'X_train', 'memory', 'exp_name_log', 'X', 'data', 'fold_generator', 'fold_groups_param', 'transform_target_param', '_ml_usecase'}
2023-11-24 18:50:24,764:INFO:Checking environment
2023-11-24 18:50:24,764:INFO:python_version: 3.11.5
2023-11-24 18:50:24,764:INFO:python_build: ('main', 'Sep 11 2023 08:31:25')
2023-11-24 18:50:24,764:INFO:machine: arm64
2023-11-24 18:50:24,786:INFO:platform: macOS-14.0-arm64-arm-64bit
2023-11-24 18:50:24,787:INFO:Memory: svmem(total=17179869184, available=5768675328, percent=66.4, used=7621672960, free=326713344, active=5455298560, inactive=5437063168, wired=2166374400)
2023-11-24 18:50:24,787:INFO:Physical Core: 10
2023-11-24 18:50:24,787:INFO:Logical Core: 10
2023-11-24 18:50:24,787:INFO:Checking libraries
2023-11-24 18:50:24,787:INFO:System:
2023-11-24 18:50:24,787:INFO:    python: 3.11.5 (main, Sep 11 2023, 08:31:25) [Clang 14.0.6 ]
2023-11-24 18:50:24,787:INFO:executable: /Users/saiakhil/anaconda3/envs/mlauto/bin/python
2023-11-24 18:50:24,787:INFO:   machine: macOS-14.0-arm64-arm-64bit
2023-11-24 18:50:24,787:INFO:PyCaret required dependencies:
2023-11-24 18:50:24,803:INFO:                 pip: 23.3.1
2023-11-24 18:50:24,803:INFO:          setuptools: 68.0.0
2023-11-24 18:50:24,803:INFO:             pycaret: 3.2.0
2023-11-24 18:50:24,803:INFO:             IPython: 8.15.0
2023-11-24 18:50:24,803:INFO:          ipywidgets: 8.1.1
2023-11-24 18:50:24,803:INFO:                tqdm: 4.66.1
2023-11-24 18:50:24,803:INFO:               numpy: 1.25.2
2023-11-24 18:50:24,803:INFO:              pandas: 1.5.3
2023-11-24 18:50:24,803:INFO:              jinja2: 3.1.2
2023-11-24 18:50:24,803:INFO:               scipy: 1.11.3
2023-11-24 18:50:24,804:INFO:              joblib: 1.3.2
2023-11-24 18:50:24,804:INFO:             sklearn: 1.2.2
2023-11-24 18:50:24,804:INFO:                pyod: 1.1.2
2023-11-24 18:50:24,804:INFO:            imblearn: 0.11.0
2023-11-24 18:50:24,804:INFO:   category_encoders: 2.6.3
2023-11-24 18:50:24,804:INFO:            lightgbm: 4.1.0
2023-11-24 18:50:24,804:INFO:               numba: 0.58.1
2023-11-24 18:50:24,804:INFO:            requests: 2.31.0
2023-11-24 18:50:24,804:INFO:          matplotlib: 3.6.0
2023-11-24 18:50:24,804:INFO:          scikitplot: 0.3.7
2023-11-24 18:50:24,804:INFO:         yellowbrick: 1.5
2023-11-24 18:50:24,804:INFO:              plotly: 5.18.0
2023-11-24 18:50:24,804:INFO:    plotly-resampler: Not installed
2023-11-24 18:50:24,804:INFO:             kaleido: 0.2.1
2023-11-24 18:50:24,804:INFO:           schemdraw: 0.15
2023-11-24 18:50:24,804:INFO:         statsmodels: 0.14.0
2023-11-24 18:50:24,804:INFO:              sktime: 0.21.1
2023-11-24 18:50:24,804:INFO:               tbats: 1.1.3
2023-11-24 18:50:24,804:INFO:            pmdarima: 2.0.4
2023-11-24 18:50:24,804:INFO:              psutil: 5.9.6
2023-11-24 18:50:24,804:INFO:          markupsafe: 2.1.3
2023-11-24 18:50:24,804:INFO:             pickle5: Not installed
2023-11-24 18:50:24,804:INFO:         cloudpickle: 3.0.0
2023-11-24 18:50:24,804:INFO:         deprecation: 2.1.0
2023-11-24 18:50:24,804:INFO:              xxhash: 3.4.1
2023-11-24 18:50:24,804:INFO:           wurlitzer: 3.0.3
2023-11-24 18:50:24,804:INFO:PyCaret optional dependencies:
2023-11-24 18:50:24,808:INFO:                shap: Not installed
2023-11-24 18:50:24,808:INFO:           interpret: Not installed
2023-11-24 18:50:24,808:INFO:                umap: Not installed
2023-11-24 18:50:24,808:INFO:     ydata_profiling: 4.6.2
2023-11-24 18:50:24,808:INFO:  explainerdashboard: Not installed
2023-11-24 18:50:24,808:INFO:             autoviz: Not installed
2023-11-24 18:50:24,808:INFO:           fairlearn: Not installed
2023-11-24 18:50:24,808:INFO:          deepchecks: Not installed
2023-11-24 18:50:24,808:INFO:             xgboost: 1.7.3
2023-11-24 18:50:24,808:INFO:            catboost: Not installed
2023-11-24 18:50:24,808:INFO:              kmodes: Not installed
2023-11-24 18:50:24,808:INFO:             mlxtend: Not installed
2023-11-24 18:50:24,808:INFO:       statsforecast: Not installed
2023-11-24 18:50:24,808:INFO:        tune_sklearn: Not installed
2023-11-24 18:50:24,808:INFO:                 ray: Not installed
2023-11-24 18:50:24,808:INFO:            hyperopt: Not installed
2023-11-24 18:50:24,808:INFO:              optuna: Not installed
2023-11-24 18:50:24,808:INFO:               skopt: Not installed
2023-11-24 18:50:24,808:INFO:              mlflow: Not installed
2023-11-24 18:50:24,808:INFO:              gradio: Not installed
2023-11-24 18:50:24,808:INFO:             fastapi: Not installed
2023-11-24 18:50:24,808:INFO:             uvicorn: Not installed
2023-11-24 18:50:24,808:INFO:              m2cgen: Not installed
2023-11-24 18:50:24,808:INFO:           evidently: Not installed
2023-11-24 18:50:24,809:INFO:               fugue: Not installed
2023-11-24 18:50:24,809:INFO:           streamlit: 1.28.2
2023-11-24 18:50:24,809:INFO:             prophet: Not installed
2023-11-24 18:50:24,809:INFO:None
2023-11-24 18:50:24,809:INFO:Set up data.
2023-11-24 18:50:24,812:INFO:Set up folding strategy.
2023-11-24 18:50:24,812:INFO:Set up train/test split.
2023-11-24 18:50:24,816:INFO:Set up index.
2023-11-24 18:50:24,816:INFO:Assigning column types.
2023-11-24 18:50:24,817:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-24 18:50:24,817:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-11-24 18:50:24,819:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-24 18:50:24,820:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-24 18:50:24,842:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 18:50:24,859:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 18:50:24,859:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 18:50:24,879:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 18:50:24,879:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-11-24 18:50:24,880:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-24 18:50:24,882:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-24 18:50:24,903:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 18:50:24,919:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 18:50:24,919:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 18:50:24,920:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 18:50:24,920:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-11-24 18:50:24,922:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-24 18:50:24,924:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-24 18:50:24,945:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 18:50:24,963:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 18:50:24,963:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 18:50:24,964:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 18:50:24,966:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-11-24 18:50:24,968:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-24 18:50:24,988:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 18:50:25,005:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 18:50:25,006:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 18:50:25,006:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 18:50:25,007:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-11-24 18:50:25,010:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-24 18:50:25,031:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 18:50:25,048:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 18:50:25,048:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 18:50:25,049:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 18:50:25,053:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-11-24 18:50:25,074:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 18:50:25,090:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 18:50:25,090:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 18:50:25,091:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 18:50:25,093:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-11-24 18:50:25,117:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 18:50:25,134:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 18:50:25,134:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 18:50:25,135:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 18:50:25,159:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 18:50:25,176:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 18:50:25,176:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 18:50:25,177:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 18:50:25,177:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-11-24 18:50:25,201:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 18:50:25,218:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 18:50:25,219:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 18:50:25,243:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-11-24 18:50:25,260:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 18:50:25,261:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 18:50:25,261:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-11-24 18:50:25,302:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 18:50:25,303:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 18:50:25,344:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 18:50:25,345:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 18:50:25,347:INFO:Preparing preprocessing pipeline...
2023-11-24 18:50:25,347:INFO:Set up simple imputation.
2023-11-24 18:50:25,348:INFO:Set up encoding of categorical features.
2023-11-24 18:50:25,367:INFO:Finished creating preprocessing pipeline.
2023-11-24 18:50:25,370:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/46/tcczvndd7xj_pqs5r176bl600000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['year', 'events', 'athletes',
                                             'age', 'height', 'weight',
                                             'prev_medals', 'prev_3_medals'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['team', 'country'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['team', 'country'],
                                    transformer=TargetEncoder(cols=['team',
                                                                    'country'],
                                                              handle_missing='return_nan')))])
2023-11-24 18:50:25,370:INFO:Creating final display dataframe.
2023-11-24 18:50:25,435:INFO:Setup _display_container:                     Description             Value
0                    Session id              8898
1                        Target            medals
2                   Target type        Regression
3           Original data shape        (2144, 11)
4        Transformed data shape        (2144, 11)
5   Transformed train set shape        (1500, 11)
6    Transformed test set shape         (644, 11)
7              Numeric features                 8
8          Categorical features                 2
9      Rows with missing values              6.1%
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator             KFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  reg-default-name
22                          USI              5755
2023-11-24 18:50:25,481:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 18:50:25,482:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 18:50:25,524:INFO:Soft dependency imported: xgboost: 1.7.3
2023-11-24 18:50:25,525:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 18:50:25,526:INFO:setup() successfully completed in 0.77s...............
2023-11-24 18:50:28,473:INFO:Initializing compare_models()
2023-11-24 18:50:28,473:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b8f97d0>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x28b8f97d0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2023-11-24 18:50:28,473:INFO:Checking exceptions
2023-11-24 18:50:28,474:INFO:Preparing display monitor
2023-11-24 18:50:28,475:INFO:Initializing Linear Regression
2023-11-24 18:50:28,475:INFO:Total runtime is 1.1801719665527344e-06 minutes
2023-11-24 18:50:28,475:INFO:SubProcess create_model() called ==================================
2023-11-24 18:50:28,475:INFO:Initializing create_model()
2023-11-24 18:50:28,476:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b8f97d0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28baaabd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 18:50:28,476:INFO:Checking exceptions
2023-11-24 18:50:28,476:INFO:Importing libraries
2023-11-24 18:50:28,476:INFO:Copying training dataset
2023-11-24 18:50:28,477:INFO:Defining folds
2023-11-24 18:50:28,477:INFO:Declaring metric variables
2023-11-24 18:50:28,477:INFO:Importing untrained model
2023-11-24 18:50:28,477:INFO:Linear Regression Imported successfully
2023-11-24 18:50:28,477:INFO:Starting cross validation
2023-11-24 18:50:28,481:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 18:50:30,231:INFO:Calculating mean and std
2023-11-24 18:50:30,233:INFO:Creating metrics dataframe
2023-11-24 18:50:30,239:INFO:Uploading results into container
2023-11-24 18:50:30,240:INFO:Uploading model into container now
2023-11-24 18:50:30,240:INFO:_master_model_container: 1
2023-11-24 18:50:30,241:INFO:_display_container: 2
2023-11-24 18:50:30,241:INFO:LinearRegression(n_jobs=-1)
2023-11-24 18:50:30,241:INFO:create_model() successfully completed......................................
2023-11-24 18:50:30,337:INFO:SubProcess create_model() end ==================================
2023-11-24 18:50:30,338:INFO:Creating metrics dataframe
2023-11-24 18:50:30,339:INFO:Initializing Lasso Regression
2023-11-24 18:50:30,339:INFO:Total runtime is 0.031063365936279296 minutes
2023-11-24 18:50:30,339:INFO:SubProcess create_model() called ==================================
2023-11-24 18:50:30,339:INFO:Initializing create_model()
2023-11-24 18:50:30,339:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b8f97d0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28baaabd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 18:50:30,339:INFO:Checking exceptions
2023-11-24 18:50:30,339:INFO:Importing libraries
2023-11-24 18:50:30,339:INFO:Copying training dataset
2023-11-24 18:50:30,340:INFO:Defining folds
2023-11-24 18:50:30,340:INFO:Declaring metric variables
2023-11-24 18:50:30,340:INFO:Importing untrained model
2023-11-24 18:50:30,341:INFO:Lasso Regression Imported successfully
2023-11-24 18:50:30,341:INFO:Starting cross validation
2023-11-24 18:50:30,341:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 18:50:30,403:INFO:Calculating mean and std
2023-11-24 18:50:30,403:INFO:Creating metrics dataframe
2023-11-24 18:50:30,404:INFO:Uploading results into container
2023-11-24 18:50:30,405:INFO:Uploading model into container now
2023-11-24 18:50:30,405:INFO:_master_model_container: 2
2023-11-24 18:50:30,405:INFO:_display_container: 2
2023-11-24 18:50:30,405:INFO:Lasso(random_state=8898)
2023-11-24 18:50:30,405:INFO:create_model() successfully completed......................................
2023-11-24 18:50:30,486:INFO:SubProcess create_model() end ==================================
2023-11-24 18:50:30,486:INFO:Creating metrics dataframe
2023-11-24 18:50:30,488:INFO:Initializing Ridge Regression
2023-11-24 18:50:30,488:INFO:Total runtime is 0.033546229203542076 minutes
2023-11-24 18:50:30,488:INFO:SubProcess create_model() called ==================================
2023-11-24 18:50:30,488:INFO:Initializing create_model()
2023-11-24 18:50:30,488:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b8f97d0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28baaabd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 18:50:30,488:INFO:Checking exceptions
2023-11-24 18:50:30,488:INFO:Importing libraries
2023-11-24 18:50:30,488:INFO:Copying training dataset
2023-11-24 18:50:30,489:INFO:Defining folds
2023-11-24 18:50:30,489:INFO:Declaring metric variables
2023-11-24 18:50:30,489:INFO:Importing untrained model
2023-11-24 18:50:30,489:INFO:Ridge Regression Imported successfully
2023-11-24 18:50:30,489:INFO:Starting cross validation
2023-11-24 18:50:30,490:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 18:50:30,535:INFO:Calculating mean and std
2023-11-24 18:50:30,536:INFO:Creating metrics dataframe
2023-11-24 18:50:30,537:INFO:Uploading results into container
2023-11-24 18:50:30,537:INFO:Uploading model into container now
2023-11-24 18:50:30,537:INFO:_master_model_container: 3
2023-11-24 18:50:30,537:INFO:_display_container: 2
2023-11-24 18:50:30,537:INFO:Ridge(random_state=8898)
2023-11-24 18:50:30,537:INFO:create_model() successfully completed......................................
2023-11-24 18:50:30,620:INFO:SubProcess create_model() end ==================================
2023-11-24 18:50:30,621:INFO:Creating metrics dataframe
2023-11-24 18:50:30,622:INFO:Initializing Elastic Net
2023-11-24 18:50:30,622:INFO:Total runtime is 0.035787916183471685 minutes
2023-11-24 18:50:30,623:INFO:SubProcess create_model() called ==================================
2023-11-24 18:50:30,623:INFO:Initializing create_model()
2023-11-24 18:50:30,623:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b8f97d0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28baaabd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 18:50:30,623:INFO:Checking exceptions
2023-11-24 18:50:30,623:INFO:Importing libraries
2023-11-24 18:50:30,623:INFO:Copying training dataset
2023-11-24 18:50:30,624:INFO:Defining folds
2023-11-24 18:50:30,624:INFO:Declaring metric variables
2023-11-24 18:50:30,624:INFO:Importing untrained model
2023-11-24 18:50:30,624:INFO:Elastic Net Imported successfully
2023-11-24 18:50:30,624:INFO:Starting cross validation
2023-11-24 18:50:30,624:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 18:50:30,682:INFO:Calculating mean and std
2023-11-24 18:50:30,682:INFO:Creating metrics dataframe
2023-11-24 18:50:30,683:INFO:Uploading results into container
2023-11-24 18:50:30,684:INFO:Uploading model into container now
2023-11-24 18:50:30,684:INFO:_master_model_container: 4
2023-11-24 18:50:30,684:INFO:_display_container: 2
2023-11-24 18:50:30,684:INFO:ElasticNet(random_state=8898)
2023-11-24 18:50:30,684:INFO:create_model() successfully completed......................................
2023-11-24 18:50:30,768:INFO:SubProcess create_model() end ==================================
2023-11-24 18:50:30,768:INFO:Creating metrics dataframe
2023-11-24 18:50:30,769:INFO:Initializing Least Angle Regression
2023-11-24 18:50:30,769:INFO:Total runtime is 0.03823384841283163 minutes
2023-11-24 18:50:30,769:INFO:SubProcess create_model() called ==================================
2023-11-24 18:50:30,769:INFO:Initializing create_model()
2023-11-24 18:50:30,769:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b8f97d0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28baaabd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 18:50:30,769:INFO:Checking exceptions
2023-11-24 18:50:30,769:INFO:Importing libraries
2023-11-24 18:50:30,769:INFO:Copying training dataset
2023-11-24 18:50:30,770:INFO:Defining folds
2023-11-24 18:50:30,770:INFO:Declaring metric variables
2023-11-24 18:50:30,771:INFO:Importing untrained model
2023-11-24 18:50:30,771:INFO:Least Angle Regression Imported successfully
2023-11-24 18:50:30,771:INFO:Starting cross validation
2023-11-24 18:50:30,771:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 18:50:30,826:INFO:Calculating mean and std
2023-11-24 18:50:30,826:INFO:Creating metrics dataframe
2023-11-24 18:50:30,827:INFO:Uploading results into container
2023-11-24 18:50:30,827:INFO:Uploading model into container now
2023-11-24 18:50:30,827:INFO:_master_model_container: 5
2023-11-24 18:50:30,827:INFO:_display_container: 2
2023-11-24 18:50:30,827:INFO:Lars(random_state=8898)
2023-11-24 18:50:30,827:INFO:create_model() successfully completed......................................
2023-11-24 18:50:30,913:INFO:SubProcess create_model() end ==================================
2023-11-24 18:50:30,913:INFO:Creating metrics dataframe
2023-11-24 18:50:30,915:INFO:Initializing Lasso Least Angle Regression
2023-11-24 18:50:30,915:INFO:Total runtime is 0.04066478411356609 minutes
2023-11-24 18:50:30,915:INFO:SubProcess create_model() called ==================================
2023-11-24 18:50:30,915:INFO:Initializing create_model()
2023-11-24 18:50:30,915:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b8f97d0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28baaabd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 18:50:30,915:INFO:Checking exceptions
2023-11-24 18:50:30,915:INFO:Importing libraries
2023-11-24 18:50:30,915:INFO:Copying training dataset
2023-11-24 18:50:30,916:INFO:Defining folds
2023-11-24 18:50:30,916:INFO:Declaring metric variables
2023-11-24 18:50:30,916:INFO:Importing untrained model
2023-11-24 18:50:30,917:INFO:Lasso Least Angle Regression Imported successfully
2023-11-24 18:50:30,917:INFO:Starting cross validation
2023-11-24 18:50:30,917:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 18:50:30,977:INFO:Calculating mean and std
2023-11-24 18:50:30,977:INFO:Creating metrics dataframe
2023-11-24 18:50:30,978:INFO:Uploading results into container
2023-11-24 18:50:30,978:INFO:Uploading model into container now
2023-11-24 18:50:30,978:INFO:_master_model_container: 6
2023-11-24 18:50:30,978:INFO:_display_container: 2
2023-11-24 18:50:30,979:INFO:LassoLars(random_state=8898)
2023-11-24 18:50:30,979:INFO:create_model() successfully completed......................................
2023-11-24 18:50:31,062:INFO:SubProcess create_model() end ==================================
2023-11-24 18:50:31,062:INFO:Creating metrics dataframe
2023-11-24 18:50:31,064:INFO:Initializing Orthogonal Matching Pursuit
2023-11-24 18:50:31,064:INFO:Total runtime is 0.0431414286295573 minutes
2023-11-24 18:50:31,064:INFO:SubProcess create_model() called ==================================
2023-11-24 18:50:31,064:INFO:Initializing create_model()
2023-11-24 18:50:31,064:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b8f97d0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28baaabd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 18:50:31,064:INFO:Checking exceptions
2023-11-24 18:50:31,064:INFO:Importing libraries
2023-11-24 18:50:31,064:INFO:Copying training dataset
2023-11-24 18:50:31,065:INFO:Defining folds
2023-11-24 18:50:31,065:INFO:Declaring metric variables
2023-11-24 18:50:31,065:INFO:Importing untrained model
2023-11-24 18:50:31,065:INFO:Orthogonal Matching Pursuit Imported successfully
2023-11-24 18:50:31,065:INFO:Starting cross validation
2023-11-24 18:50:31,066:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 18:50:31,109:INFO:Calculating mean and std
2023-11-24 18:50:31,109:INFO:Creating metrics dataframe
2023-11-24 18:50:31,110:INFO:Uploading results into container
2023-11-24 18:50:31,110:INFO:Uploading model into container now
2023-11-24 18:50:31,110:INFO:_master_model_container: 7
2023-11-24 18:50:31,110:INFO:_display_container: 2
2023-11-24 18:50:31,110:INFO:OrthogonalMatchingPursuit()
2023-11-24 18:50:31,110:INFO:create_model() successfully completed......................................
2023-11-24 18:50:31,190:INFO:SubProcess create_model() end ==================================
2023-11-24 18:50:31,190:INFO:Creating metrics dataframe
2023-11-24 18:50:31,192:INFO:Initializing Bayesian Ridge
2023-11-24 18:50:31,192:INFO:Total runtime is 0.04528053204218547 minutes
2023-11-24 18:50:31,192:INFO:SubProcess create_model() called ==================================
2023-11-24 18:50:31,192:INFO:Initializing create_model()
2023-11-24 18:50:31,192:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b8f97d0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28baaabd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 18:50:31,192:INFO:Checking exceptions
2023-11-24 18:50:31,192:INFO:Importing libraries
2023-11-24 18:50:31,192:INFO:Copying training dataset
2023-11-24 18:50:31,193:INFO:Defining folds
2023-11-24 18:50:31,193:INFO:Declaring metric variables
2023-11-24 18:50:31,193:INFO:Importing untrained model
2023-11-24 18:50:31,194:INFO:Bayesian Ridge Imported successfully
2023-11-24 18:50:31,194:INFO:Starting cross validation
2023-11-24 18:50:31,194:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 18:50:31,240:INFO:Calculating mean and std
2023-11-24 18:50:31,240:INFO:Creating metrics dataframe
2023-11-24 18:50:31,241:INFO:Uploading results into container
2023-11-24 18:50:31,242:INFO:Uploading model into container now
2023-11-24 18:50:31,242:INFO:_master_model_container: 8
2023-11-24 18:50:31,242:INFO:_display_container: 2
2023-11-24 18:50:31,242:INFO:BayesianRidge()
2023-11-24 18:50:31,242:INFO:create_model() successfully completed......................................
2023-11-24 18:50:31,322:INFO:SubProcess create_model() end ==================================
2023-11-24 18:50:31,322:INFO:Creating metrics dataframe
2023-11-24 18:50:31,323:INFO:Initializing Passive Aggressive Regressor
2023-11-24 18:50:31,323:INFO:Total runtime is 0.047467732429504396 minutes
2023-11-24 18:50:31,323:INFO:SubProcess create_model() called ==================================
2023-11-24 18:50:31,323:INFO:Initializing create_model()
2023-11-24 18:50:31,323:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b8f97d0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28baaabd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 18:50:31,323:INFO:Checking exceptions
2023-11-24 18:50:31,323:INFO:Importing libraries
2023-11-24 18:50:31,323:INFO:Copying training dataset
2023-11-24 18:50:31,324:INFO:Defining folds
2023-11-24 18:50:31,325:INFO:Declaring metric variables
2023-11-24 18:50:31,325:INFO:Importing untrained model
2023-11-24 18:50:31,325:INFO:Passive Aggressive Regressor Imported successfully
2023-11-24 18:50:31,325:INFO:Starting cross validation
2023-11-24 18:50:31,325:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 18:50:31,376:INFO:Calculating mean and std
2023-11-24 18:50:31,376:INFO:Creating metrics dataframe
2023-11-24 18:50:31,377:INFO:Uploading results into container
2023-11-24 18:50:31,377:INFO:Uploading model into container now
2023-11-24 18:50:31,377:INFO:_master_model_container: 9
2023-11-24 18:50:31,377:INFO:_display_container: 2
2023-11-24 18:50:31,378:INFO:PassiveAggressiveRegressor(random_state=8898)
2023-11-24 18:50:31,378:INFO:create_model() successfully completed......................................
2023-11-24 18:50:31,463:INFO:SubProcess create_model() end ==================================
2023-11-24 18:50:31,463:INFO:Creating metrics dataframe
2023-11-24 18:50:31,465:INFO:Initializing Huber Regressor
2023-11-24 18:50:31,465:INFO:Total runtime is 0.049828000863393146 minutes
2023-11-24 18:50:31,465:INFO:SubProcess create_model() called ==================================
2023-11-24 18:50:31,465:INFO:Initializing create_model()
2023-11-24 18:50:31,465:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b8f97d0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28baaabd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 18:50:31,465:INFO:Checking exceptions
2023-11-24 18:50:31,465:INFO:Importing libraries
2023-11-24 18:50:31,465:INFO:Copying training dataset
2023-11-24 18:50:31,466:INFO:Defining folds
2023-11-24 18:50:31,466:INFO:Declaring metric variables
2023-11-24 18:50:31,466:INFO:Importing untrained model
2023-11-24 18:50:31,466:INFO:Huber Regressor Imported successfully
2023-11-24 18:50:31,466:INFO:Starting cross validation
2023-11-24 18:50:31,467:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 18:50:31,497:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-24 18:50:31,497:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-24 18:50:31,504:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-24 18:50:31,509:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-24 18:50:31,509:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-24 18:50:31,515:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-24 18:50:31,519:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-24 18:50:31,522:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-24 18:50:31,527:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-24 18:50:31,534:WARNING:/Users/saiakhil/anaconda3/envs/mlauto/lib/python3.11/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-11-24 18:50:31,540:INFO:Calculating mean and std
2023-11-24 18:50:31,540:INFO:Creating metrics dataframe
2023-11-24 18:50:31,541:INFO:Uploading results into container
2023-11-24 18:50:31,541:INFO:Uploading model into container now
2023-11-24 18:50:31,541:INFO:_master_model_container: 10
2023-11-24 18:50:31,541:INFO:_display_container: 2
2023-11-24 18:50:31,542:INFO:HuberRegressor()
2023-11-24 18:50:31,542:INFO:create_model() successfully completed......................................
2023-11-24 18:50:31,627:INFO:SubProcess create_model() end ==================================
2023-11-24 18:50:31,627:INFO:Creating metrics dataframe
2023-11-24 18:50:31,629:INFO:Initializing K Neighbors Regressor
2023-11-24 18:50:31,629:INFO:Total runtime is 0.052557881673177084 minutes
2023-11-24 18:50:31,629:INFO:SubProcess create_model() called ==================================
2023-11-24 18:50:31,629:INFO:Initializing create_model()
2023-11-24 18:50:31,629:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b8f97d0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28baaabd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 18:50:31,629:INFO:Checking exceptions
2023-11-24 18:50:31,629:INFO:Importing libraries
2023-11-24 18:50:31,629:INFO:Copying training dataset
2023-11-24 18:50:31,630:INFO:Defining folds
2023-11-24 18:50:31,630:INFO:Declaring metric variables
2023-11-24 18:50:31,630:INFO:Importing untrained model
2023-11-24 18:50:31,630:INFO:K Neighbors Regressor Imported successfully
2023-11-24 18:50:31,630:INFO:Starting cross validation
2023-11-24 18:50:31,631:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 18:50:31,683:INFO:Calculating mean and std
2023-11-24 18:50:31,684:INFO:Creating metrics dataframe
2023-11-24 18:50:31,685:INFO:Uploading results into container
2023-11-24 18:50:31,685:INFO:Uploading model into container now
2023-11-24 18:50:31,685:INFO:_master_model_container: 11
2023-11-24 18:50:31,685:INFO:_display_container: 2
2023-11-24 18:50:31,685:INFO:KNeighborsRegressor(n_jobs=-1)
2023-11-24 18:50:31,685:INFO:create_model() successfully completed......................................
2023-11-24 18:50:31,765:INFO:SubProcess create_model() end ==================================
2023-11-24 18:50:31,765:INFO:Creating metrics dataframe
2023-11-24 18:50:31,766:INFO:Initializing Decision Tree Regressor
2023-11-24 18:50:31,767:INFO:Total runtime is 0.054855382442474364 minutes
2023-11-24 18:50:31,767:INFO:SubProcess create_model() called ==================================
2023-11-24 18:50:31,767:INFO:Initializing create_model()
2023-11-24 18:50:31,767:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b8f97d0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28baaabd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 18:50:31,767:INFO:Checking exceptions
2023-11-24 18:50:31,767:INFO:Importing libraries
2023-11-24 18:50:31,767:INFO:Copying training dataset
2023-11-24 18:50:31,768:INFO:Defining folds
2023-11-24 18:50:31,768:INFO:Declaring metric variables
2023-11-24 18:50:31,768:INFO:Importing untrained model
2023-11-24 18:50:31,768:INFO:Decision Tree Regressor Imported successfully
2023-11-24 18:50:31,768:INFO:Starting cross validation
2023-11-24 18:50:31,768:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 18:50:31,825:INFO:Calculating mean and std
2023-11-24 18:50:31,825:INFO:Creating metrics dataframe
2023-11-24 18:50:31,826:INFO:Uploading results into container
2023-11-24 18:50:31,826:INFO:Uploading model into container now
2023-11-24 18:50:31,826:INFO:_master_model_container: 12
2023-11-24 18:50:31,826:INFO:_display_container: 2
2023-11-24 18:50:31,826:INFO:DecisionTreeRegressor(random_state=8898)
2023-11-24 18:50:31,826:INFO:create_model() successfully completed......................................
2023-11-24 18:50:31,905:INFO:SubProcess create_model() end ==================================
2023-11-24 18:50:31,905:INFO:Creating metrics dataframe
2023-11-24 18:50:31,907:INFO:Initializing Random Forest Regressor
2023-11-24 18:50:31,907:INFO:Total runtime is 0.057197630405426025 minutes
2023-11-24 18:50:31,907:INFO:SubProcess create_model() called ==================================
2023-11-24 18:50:31,907:INFO:Initializing create_model()
2023-11-24 18:50:31,907:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b8f97d0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28baaabd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 18:50:31,907:INFO:Checking exceptions
2023-11-24 18:50:31,907:INFO:Importing libraries
2023-11-24 18:50:31,907:INFO:Copying training dataset
2023-11-24 18:50:31,908:INFO:Defining folds
2023-11-24 18:50:31,908:INFO:Declaring metric variables
2023-11-24 18:50:31,908:INFO:Importing untrained model
2023-11-24 18:50:31,909:INFO:Random Forest Regressor Imported successfully
2023-11-24 18:50:31,909:INFO:Starting cross validation
2023-11-24 18:50:31,909:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 18:50:32,464:INFO:Calculating mean and std
2023-11-24 18:50:32,464:INFO:Creating metrics dataframe
2023-11-24 18:50:32,465:INFO:Uploading results into container
2023-11-24 18:50:32,465:INFO:Uploading model into container now
2023-11-24 18:50:32,465:INFO:_master_model_container: 13
2023-11-24 18:50:32,465:INFO:_display_container: 2
2023-11-24 18:50:32,466:INFO:RandomForestRegressor(n_jobs=-1, random_state=8898)
2023-11-24 18:50:32,466:INFO:create_model() successfully completed......................................
2023-11-24 18:50:32,544:INFO:SubProcess create_model() end ==================================
2023-11-24 18:50:32,544:INFO:Creating metrics dataframe
2023-11-24 18:50:32,546:INFO:Initializing Extra Trees Regressor
2023-11-24 18:50:32,546:INFO:Total runtime is 0.06784221728642781 minutes
2023-11-24 18:50:32,546:INFO:SubProcess create_model() called ==================================
2023-11-24 18:50:32,546:INFO:Initializing create_model()
2023-11-24 18:50:32,546:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b8f97d0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28baaabd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 18:50:32,546:INFO:Checking exceptions
2023-11-24 18:50:32,546:INFO:Importing libraries
2023-11-24 18:50:32,546:INFO:Copying training dataset
2023-11-24 18:50:32,547:INFO:Defining folds
2023-11-24 18:50:32,547:INFO:Declaring metric variables
2023-11-24 18:50:32,547:INFO:Importing untrained model
2023-11-24 18:50:32,547:INFO:Extra Trees Regressor Imported successfully
2023-11-24 18:50:32,547:INFO:Starting cross validation
2023-11-24 18:50:32,548:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 18:50:32,848:INFO:Calculating mean and std
2023-11-24 18:50:32,848:INFO:Creating metrics dataframe
2023-11-24 18:50:32,849:INFO:Uploading results into container
2023-11-24 18:50:32,849:INFO:Uploading model into container now
2023-11-24 18:50:32,850:INFO:_master_model_container: 14
2023-11-24 18:50:32,850:INFO:_display_container: 2
2023-11-24 18:50:32,850:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=8898)
2023-11-24 18:50:32,850:INFO:create_model() successfully completed......................................
2023-11-24 18:50:32,929:INFO:SubProcess create_model() end ==================================
2023-11-24 18:50:32,929:INFO:Creating metrics dataframe
2023-11-24 18:50:32,931:INFO:Initializing AdaBoost Regressor
2023-11-24 18:50:32,931:INFO:Total runtime is 0.07425918181737264 minutes
2023-11-24 18:50:32,931:INFO:SubProcess create_model() called ==================================
2023-11-24 18:50:32,931:INFO:Initializing create_model()
2023-11-24 18:50:32,931:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b8f97d0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28baaabd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 18:50:32,931:INFO:Checking exceptions
2023-11-24 18:50:32,931:INFO:Importing libraries
2023-11-24 18:50:32,931:INFO:Copying training dataset
2023-11-24 18:50:32,932:INFO:Defining folds
2023-11-24 18:50:32,932:INFO:Declaring metric variables
2023-11-24 18:50:32,932:INFO:Importing untrained model
2023-11-24 18:50:32,932:INFO:AdaBoost Regressor Imported successfully
2023-11-24 18:50:32,932:INFO:Starting cross validation
2023-11-24 18:50:32,932:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 18:50:33,057:INFO:Calculating mean and std
2023-11-24 18:50:33,057:INFO:Creating metrics dataframe
2023-11-24 18:50:33,058:INFO:Uploading results into container
2023-11-24 18:50:33,059:INFO:Uploading model into container now
2023-11-24 18:50:33,059:INFO:_master_model_container: 15
2023-11-24 18:50:33,059:INFO:_display_container: 2
2023-11-24 18:50:33,059:INFO:AdaBoostRegressor(random_state=8898)
2023-11-24 18:50:33,059:INFO:create_model() successfully completed......................................
2023-11-24 18:50:33,138:INFO:SubProcess create_model() end ==================================
2023-11-24 18:50:33,138:INFO:Creating metrics dataframe
2023-11-24 18:50:33,139:INFO:Initializing Gradient Boosting Regressor
2023-11-24 18:50:33,139:INFO:Total runtime is 0.0777349829673767 minutes
2023-11-24 18:50:33,139:INFO:SubProcess create_model() called ==================================
2023-11-24 18:50:33,139:INFO:Initializing create_model()
2023-11-24 18:50:33,139:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b8f97d0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28baaabd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 18:50:33,139:INFO:Checking exceptions
2023-11-24 18:50:33,139:INFO:Importing libraries
2023-11-24 18:50:33,140:INFO:Copying training dataset
2023-11-24 18:50:33,140:INFO:Defining folds
2023-11-24 18:50:33,140:INFO:Declaring metric variables
2023-11-24 18:50:33,140:INFO:Importing untrained model
2023-11-24 18:50:33,141:INFO:Gradient Boosting Regressor Imported successfully
2023-11-24 18:50:33,141:INFO:Starting cross validation
2023-11-24 18:50:33,141:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 18:50:33,369:INFO:Calculating mean and std
2023-11-24 18:50:33,370:INFO:Creating metrics dataframe
2023-11-24 18:50:33,371:INFO:Uploading results into container
2023-11-24 18:50:33,371:INFO:Uploading model into container now
2023-11-24 18:50:33,371:INFO:_master_model_container: 16
2023-11-24 18:50:33,371:INFO:_display_container: 2
2023-11-24 18:50:33,371:INFO:GradientBoostingRegressor(random_state=8898)
2023-11-24 18:50:33,371:INFO:create_model() successfully completed......................................
2023-11-24 18:50:33,459:INFO:SubProcess create_model() end ==================================
2023-11-24 18:50:33,459:INFO:Creating metrics dataframe
2023-11-24 18:50:33,461:INFO:Initializing Extreme Gradient Boosting
2023-11-24 18:50:33,461:INFO:Total runtime is 0.08309110005696614 minutes
2023-11-24 18:50:33,461:INFO:SubProcess create_model() called ==================================
2023-11-24 18:50:33,461:INFO:Initializing create_model()
2023-11-24 18:50:33,461:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b8f97d0>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28baaabd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 18:50:33,461:INFO:Checking exceptions
2023-11-24 18:50:33,461:INFO:Importing libraries
2023-11-24 18:50:33,461:INFO:Copying training dataset
2023-11-24 18:50:33,462:INFO:Defining folds
2023-11-24 18:50:33,462:INFO:Declaring metric variables
2023-11-24 18:50:33,462:INFO:Importing untrained model
2023-11-24 18:50:33,462:INFO:Extreme Gradient Boosting Imported successfully
2023-11-24 18:50:33,462:INFO:Starting cross validation
2023-11-24 18:50:33,463:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 18:50:33,657:INFO:Calculating mean and std
2023-11-24 18:50:33,658:INFO:Creating metrics dataframe
2023-11-24 18:50:33,659:INFO:Uploading results into container
2023-11-24 18:50:33,659:INFO:Uploading model into container now
2023-11-24 18:50:33,659:INFO:_master_model_container: 17
2023-11-24 18:50:33,659:INFO:_display_container: 2
2023-11-24 18:50:33,659:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             n_estimators=100, n_jobs=-1, num_parallel_tree=None,
             predictor=None, random_state=8898, ...)
2023-11-24 18:50:33,659:INFO:create_model() successfully completed......................................
2023-11-24 18:50:33,740:INFO:SubProcess create_model() end ==================================
2023-11-24 18:50:33,741:INFO:Creating metrics dataframe
2023-11-24 18:50:33,742:INFO:Initializing Light Gradient Boosting Machine
2023-11-24 18:50:33,742:INFO:Total runtime is 0.08778304656346639 minutes
2023-11-24 18:50:33,742:INFO:SubProcess create_model() called ==================================
2023-11-24 18:50:33,742:INFO:Initializing create_model()
2023-11-24 18:50:33,742:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b8f97d0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28baaabd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 18:50:33,742:INFO:Checking exceptions
2023-11-24 18:50:33,742:INFO:Importing libraries
2023-11-24 18:50:33,742:INFO:Copying training dataset
2023-11-24 18:50:33,743:INFO:Defining folds
2023-11-24 18:50:33,743:INFO:Declaring metric variables
2023-11-24 18:50:33,743:INFO:Importing untrained model
2023-11-24 18:50:33,744:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-24 18:50:33,744:INFO:Starting cross validation
2023-11-24 18:50:33,744:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 18:50:33,841:INFO:Calculating mean and std
2023-11-24 18:50:33,842:INFO:Creating metrics dataframe
2023-11-24 18:50:33,843:INFO:Uploading results into container
2023-11-24 18:50:33,843:INFO:Uploading model into container now
2023-11-24 18:50:33,843:INFO:_master_model_container: 18
2023-11-24 18:50:33,843:INFO:_display_container: 2
2023-11-24 18:50:33,843:INFO:LGBMRegressor(n_jobs=-1, random_state=8898)
2023-11-24 18:50:33,843:INFO:create_model() successfully completed......................................
2023-11-24 18:50:33,929:INFO:SubProcess create_model() end ==================================
2023-11-24 18:50:33,929:INFO:Creating metrics dataframe
2023-11-24 18:50:33,930:INFO:Initializing Dummy Regressor
2023-11-24 18:50:33,930:INFO:Total runtime is 0.09092003107070923 minutes
2023-11-24 18:50:33,930:INFO:SubProcess create_model() called ==================================
2023-11-24 18:50:33,931:INFO:Initializing create_model()
2023-11-24 18:50:33,931:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b8f97d0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28baaabd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 18:50:33,931:INFO:Checking exceptions
2023-11-24 18:50:33,931:INFO:Importing libraries
2023-11-24 18:50:33,931:INFO:Copying training dataset
2023-11-24 18:50:33,932:INFO:Defining folds
2023-11-24 18:50:33,932:INFO:Declaring metric variables
2023-11-24 18:50:33,932:INFO:Importing untrained model
2023-11-24 18:50:33,932:INFO:Dummy Regressor Imported successfully
2023-11-24 18:50:33,932:INFO:Starting cross validation
2023-11-24 18:50:33,932:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 18:50:33,985:INFO:Calculating mean and std
2023-11-24 18:50:33,986:INFO:Creating metrics dataframe
2023-11-24 18:50:33,987:INFO:Uploading results into container
2023-11-24 18:50:33,987:INFO:Uploading model into container now
2023-11-24 18:50:33,987:INFO:_master_model_container: 19
2023-11-24 18:50:33,987:INFO:_display_container: 2
2023-11-24 18:50:33,987:INFO:DummyRegressor()
2023-11-24 18:50:33,987:INFO:create_model() successfully completed......................................
2023-11-24 18:50:34,068:INFO:SubProcess create_model() end ==================================
2023-11-24 18:50:34,068:INFO:Creating metrics dataframe
2023-11-24 18:50:34,070:INFO:Initializing create_model()
2023-11-24 18:50:34,070:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b8f97d0>, estimator=KNeighborsRegressor(n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 18:50:34,070:INFO:Checking exceptions
2023-11-24 18:50:34,071:INFO:Importing libraries
2023-11-24 18:50:34,071:INFO:Copying training dataset
2023-11-24 18:50:34,072:INFO:Defining folds
2023-11-24 18:50:34,072:INFO:Declaring metric variables
2023-11-24 18:50:34,072:INFO:Importing untrained model
2023-11-24 18:50:34,072:INFO:Declaring custom model
2023-11-24 18:50:34,072:INFO:K Neighbors Regressor Imported successfully
2023-11-24 18:50:34,072:INFO:Cross validation set to False
2023-11-24 18:50:34,072:INFO:Fitting Model
2023-11-24 18:50:34,084:INFO:KNeighborsRegressor(n_jobs=-1)
2023-11-24 18:50:34,084:INFO:create_model() successfully completed......................................
2023-11-24 18:50:34,167:INFO:_master_model_container: 19
2023-11-24 18:50:34,167:INFO:_display_container: 2
2023-11-24 18:50:34,167:INFO:KNeighborsRegressor(n_jobs=-1)
2023-11-24 18:50:34,167:INFO:compare_models() successfully completed......................................
2023-11-24 18:50:34,170:INFO:Initializing save_model()
2023-11-24 18:50:34,170:INFO:save_model(model=KNeighborsRegressor(n_jobs=-1), model_name=best_model, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/46/tcczvndd7xj_pqs5r176bl600000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['year', 'events', 'athletes',
                                             'age', 'height', 'weight',
                                             'prev_medals', 'prev_3_medals'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['team', 'country'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['team', 'country'],
                                    transformer=TargetEncoder(cols=['team',
                                                                    'country'],
                                                              handle_missing='return_nan')))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2023-11-24 18:50:34,170:INFO:Adding model into prep_pipe
2023-11-24 18:50:34,173:INFO:best_model.pkl saved in current working directory
2023-11-24 18:50:34,175:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['year', 'events', 'athletes',
                                             'age', 'height', 'weight',
                                             'prev_medals', 'prev_3_medals'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['team', 'country'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['team', 'country'],
                                    transformer=TargetEncoder(cols=['team',
                                                                    'country'],
                                                              handle_missing='return_nan'))),
                ('trained_model', KNeighborsRegressor(n_jobs=-1))])
2023-11-24 18:50:34,175:INFO:save_model() successfully completed......................................
2023-11-24 19:06:46,194:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-24 19:06:46,194:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-24 19:06:46,194:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-24 19:06:46,194:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-24 19:11:06,394:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-24 19:11:06,394:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-24 19:11:06,394:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-24 19:11:06,394:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-24 21:14:13,584:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-24 21:14:13,584:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-24 21:14:13,584:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-24 21:14:13,584:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-24 21:24:05,370:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-24 21:24:05,371:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-24 21:24:05,371:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-24 21:24:05,371:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-24 21:25:30,001:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-24 21:25:30,001:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-24 21:25:30,001:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-24 21:25:30,001:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-24 21:29:26,551:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-24 21:29:26,551:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-24 21:29:26,551:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-24 21:29:26,551:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-24 21:33:44,310:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-24 21:33:44,310:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-24 21:33:44,310:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-24 21:33:44,310:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
